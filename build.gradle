import net.minecraftforge.forge.tasks.*
import net.minecraftforge.gradleutils.PomUtils
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'com.github.ben-manes.versions' version '0.46.0'
    id 'net.minecraftforge.gradleutils' version '[2.3.0,2.4.0)'
    id 'eclipse'
    id 'de.undercouch.download' version '5.4.0'
    id 'net.minecraftforge.gradle.patcher' version '[6.0.16,6.2)' apply false
    id 'net.minecraftforge.gradle.mcp' version '[6.0.16,6.2)' apply false
    id 'net.minecraftforge.gradlejarsigner' version '1.0.4'
    id 'org.barfuin.gradle.taskinfo' version '2.1.0'
    id "dev.vankka.dependencydownload.plugin" version "1.3.1" apply false
    id 'maven-publish'
}

Util.init() //Init all our extension methods!
version = System.getenv("VERSION") ?: 'dev-ver'

ext {
    GIT_INFO = gradleutils.gitInfo
    //Ketting start
    FORGE_VERSION = "49.0.2"
    VERSION = "${MC_VERSION}-${FORGE_VERSION}"
    KETTING_VERSION = "${VERSION}-${GIT_INFO.abbreviatedId}"

    BINPATCH_TOOL = 'net.minecraftforge:binarypatcher:1.2.0:fatjar'
    INSTALLER_TOOLS = 'net.minecraftforge:installertools:1.4.0'
    JAR_SPLITTER = 'net.minecraftforge:jarsplitter:1.1.4'
    FART = 'net.minecraftforge:ForgeAutoRenamingTool:1.0.6'
    //Ketting end
}

tasks.register('setup') {
    dependsOn ':forge:extractMapped'
    if (findProject(':clean'))
        dependsOn ':clean:extractMapped'
}

tasks.register('doChecks') {
    dependsOn ':forge:checkJarCompatibility'
    dependsOn ':forge:publish'
}

project(':mcp') {
    apply plugin: 'net.minecraftforge.gradle.mcp'
    mcp {
        config MC_VERSION + '-' + MCP_VERSION
        pipeline = 'joined'
    }
}

if (System.env.TEAMCITY_VERSION) {
    //Only setup the CI environment if and only if the environment variables are set.
    tasks.configureTeamCity {
        doLast {
            println "##teamcity[buildNumber '${project(':forge').version}']"
            println "##teamcity[setParameter name='env.PUBLISHED_JAVA_ARTIFACT_VERSION' value='${project(':forge').version}']"
        }
    }
}

publishing {
    publications {
        myPublication(MavenPublication) {
            artifact project(':forge').named('kettingJar')
            groupId = "org.kettingpowered.server"
            artifactId = "ketting-server"
                version = System.getenv("VERSION")
                pom {
                    name = "Ketting-Server"
                    description = "An API supported across all Ketting Versions"
                    url = "https://github.com/kettingpowered/Ketting-1-20-x"
                    developers {
                        developer {
                            id = "justred23"
                            name = "JustRed23"
                            //email = "jon@doe"
                        }
                    }
                    scm {
                        connection = "scm:git:https://github.com/kettingpowered/Ketting-1-20-x.git"
                        //developerConnection = "scm:svn:https://subversion.example.com/svn/project/trunk/"
                        url = "https://github.com/kettingpowered/Ketting-1-20-x"
                    }
                }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/kettingpowered/Ketting-1-20-x")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
        maven {
            name = 'kettingRepo'
            credentials {
                username = System.getenv("KETTINGUSERNAME")
                password = System.getenv("KETTINGPASSWORD")
            }
            url = "https://nexus.c0d3m4513r.com/repository/Ketting-Server-Releases/"
        }
    }
}

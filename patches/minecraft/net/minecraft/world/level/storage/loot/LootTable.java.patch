--- a/net/minecraft/world/level/storage/loot/LootTable.java
+++ b/net/minecraft/world/level/storage/loot/LootTable.java
@@ -46,11 +_,12 @@
    private final List<LootPool> f_79109_;
    private final List<LootItemFunction> f_79110_;
    private final BiFunction<ItemStack, LootContext, ItemStack> f_79111_;
+   public org.bukkit.craftbukkit.v1_20_R2.CraftLootTable craftLootTable; // CraftBukkit
 
    LootTable(LootContextParamSet p_287716_, Optional<ResourceLocation> p_298628_, List<LootPool> p_298771_, List<LootItemFunction> p_301234_) {
       this.f_79108_ = p_287716_;
       this.f_286958_ = p_298628_;
-      this.f_79109_ = p_298771_;
+      this.f_79109_ = Lists.newArrayList(p_298771_);
       this.f_79110_ = p_301234_;
       this.f_79111_ = LootItemFunctions.m_80770_(p_301234_);
    }
@@ -74,10 +_,12 @@
       };
    }
 
+   @Deprecated // Use a non-'Raw' version of 'getRandomItems', so that the Forge Global Loot Modifiers will be applied
    public void m_287190_(LootParams p_287669_, Consumer<ItemStack> p_287781_) {
       this.m_79131_((new LootContext.Builder(p_287669_)).m_287259_(this.f_286958_), p_287781_);
    }
 
+   @Deprecated // Use a non-'Raw' version of 'getRandomItems', so that the Forge Global Loot Modifiers will be applied
    public void m_79131_(LootContext p_79132_, Consumer<ItemStack> p_79133_) {
       LootContext.VisitedEntry<?> visitedentry = LootContext.m_278811_(this);
       if (p_79132_.m_278759_(visitedentry)) {
@@ -95,15 +_,15 @@
    }
 
    public void m_287276_(LootParams p_287748_, long p_287729_, Consumer<ItemStack> p_287583_) {
-      this.m_79131_((new LootContext.Builder(p_287748_)).m_78965_(p_287729_).m_287259_(this.f_286958_), m_246283_(p_287748_.m_287182_(), p_287583_));
+      this.m_230922_((new LootContext.Builder(p_287748_)).m_78965_(p_287729_).m_287259_(this.f_286958_)).forEach(p_287583_);
    }
 
    public void m_287228_(LootParams p_287704_, Consumer<ItemStack> p_287617_) {
-      this.m_287190_(p_287704_, m_246283_(p_287704_.m_287182_(), p_287617_));
+      this.m_287195_(p_287704_).forEach(p_287617_);
    }
 
    public void m_79148_(LootContext p_79149_, Consumer<ItemStack> p_79150_) {
-      this.m_79131_(p_79149_, m_246283_(p_79149_.m_78952_(), p_79150_));
+      this.m_230922_(p_79149_).forEach(p_79150_);
    }
 
    public ObjectArrayList<ItemStack> m_287214_(LootParams p_287574_, long p_287773_) {
@@ -116,7 +_,8 @@
 
    private ObjectArrayList<ItemStack> m_230922_(LootContext p_230923_) {
       ObjectArrayList<ItemStack> objectarraylist = new ObjectArrayList<>();
-      this.m_79148_(p_230923_, objectarraylist::add);
+      this.m_79131_(p_230923_, m_246283_(p_230923_.m_78952_(), objectarraylist::add));
+      //objectarraylist = net.minecraftforge.common.ForgeHooks.modifyLoot(this.getLootTableId(), objectarraylist, p_230923_); //TODO: GLM
       return objectarraylist;
    }
 
@@ -136,9 +_,22 @@
    }
 
    public void m_287188_(Container p_287662_, LootParams p_287743_, long p_287585_) {
+      // CraftBukkit start
+      this.fillInventory(p_287662_, p_287743_, p_287585_, false);
+   }
+
+   public void fillInventory(Container p_287662_, LootParams p_287743_, long p_287585_, boolean plugin) {
+      // CraftBukkit end
       LootContext lootcontext = (new LootContext.Builder(p_287743_)).m_78965_(p_287585_).m_287259_(this.f_286958_);
       ObjectArrayList<ItemStack> objectarraylist = this.m_230922_(lootcontext);
       RandomSource randomsource = lootcontext.m_230907_();
+      // CraftBukkit start
+      org.bukkit.event.world.LootGenerateEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callLootGenerateEvent(p_287662_, this, lootcontext, objectarraylist, plugin);
+      if (event.isCancelled()) {
+         return;
+      }
+      objectarraylist = event.getLoot().stream().map(org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack::asNMSCopy).collect(ObjectArrayList.toList());
+      // CraftBukkit end
       List<Integer> list = this.m_230919_(p_287662_, randomsource);
       this.m_230924_(objectarraylist, list.size(), randomsource);
 
@@ -207,6 +_,23 @@
 
    public static LootTable.Builder m_79147_() {
       return new LootTable.Builder();
+   }
+
+   private ResourceLocation lootTableId;
+   public void setLootTableId(final ResourceLocation id) {
+      if (this.lootTableId != null)
+         throw new IllegalStateException("Attempted to rename loot table from '" + this.lootTableId + "' to '" + id + "': this is not supported");
+      this.lootTableId = java.util.Objects.requireNonNull(id);
+   }
+
+   public ResourceLocation getLootTableId() {
+      return this.lootTableId;
+   }
+
+   public void addPool(LootPool pool) {
+      if (f_79109_.stream().anyMatch(e -> e == pool))
+         throw new RuntimeException("Attempted to add a duplicate pool to loot table: " + pool);
+      this.f_79109_.add(pool);
    }
 
    public static class Builder implements FunctionUserBuilder<LootTable.Builder> {

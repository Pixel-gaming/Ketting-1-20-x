--- a/net/minecraft/world/level/storage/PrimaryLevelData.java
+++ b/net/minecraft/world/level/storage/PrimaryLevelData.java
@@ -40,12 +_,25 @@
 import net.minecraft.world.level.timers.TimerQueue;
 import org.slf4j.Logger;
 
+//Ketting Start
+import net.minecraft.core.Registry;
+import net.minecraft.core.registries.Registries;
+import net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket;
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.level.dimension.LevelStem;
+import net.minecraft.world.level.levelgen.WorldDimensions;
+import org.bukkit.Bukkit;
+import org.bukkit.event.weather.ThunderChangeEvent;
+import org.bukkit.event.weather.WeatherChangeEvent;
+//Ketting End
+
 public class PrimaryLevelData implements ServerLevelData, WorldData {
    private static final Logger LOGGER = LogUtils.getLogger();
    public static final String LEVEL_NAME = "LevelName";
    protected static final String PLAYER = "Player";
    protected static final String WORLD_GEN_SETTINGS = "WorldGenSettings";
-   private LevelSettings settings;
+   public LevelSettings settings;
    private final WorldOptions worldOptions;
    private final PrimaryLevelData.SpecialWorldProperty specialWorldProperty;
    private final Lifecycle worldGenSettingsLifecycle;
@@ -77,6 +_,21 @@
    private boolean wasModded;
    private final Set<String> removedFeatureFlags;
    private final TimerQueue<MinecraftServer> scheduledEvents;
+   private boolean confirmedExperimentalWarning = false;
+   // CraftBukkit start - Add world and pdc
+   public Registry<LevelStem> customDimensions;
+   private ServerLevel world;
+   protected Tag pdc;
+
+   public void setWorld(ServerLevel world) {
+      if (this.world != null) {
+         return;
+      }
+      this.world = world;
+      world.getWorld().readBukkitValues(pdc);
+      pdc = null;
+   }
+   // CraftBukkit end
 
    private PrimaryLevelData(@Nullable CompoundTag p_277888_, boolean p_278109_, int p_277672_, int p_277714_, int p_278088_, float p_277542_, long p_277414_, long p_277635_, int p_278037_, int p_277595_, int p_277794_, boolean p_277943_, int p_278007_, boolean p_277644_, boolean p_277749_, boolean p_278004_, WorldBorder.Settings p_277729_, int p_277674_, int p_277856_, @Nullable UUID p_277341_, Set<String> p_277989_, Set<String> p_277399_, TimerQueue<MinecraftServer> p_277860_, @Nullable CompoundTag p_277936_, EndDragonFight.Data p_289764_, LevelSettings p_278064_, WorldOptions p_278072_, PrimaryLevelData.SpecialWorldProperty p_277548_, Lifecycle p_277915_) {
       this.wasModded = p_278109_;
@@ -120,7 +_,7 @@
          return p_78529_.asString().result().stream();
       }).collect(Collectors.toCollection(Sets::newLinkedHashSet)), p_78531_.get("removed_features").asStream().flatMap((p_277335_) -> {
          return p_277335_.asString().result().stream();
-      }).collect(Collectors.toSet()), new TimerQueue<>(TimerCallbacks.SERVER_CALLBACKS, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), p_78531_.get("DragonFight").read(EndDragonFight.Data.CODEC).resultOrPartial(LOGGER::error).orElse(EndDragonFight.Data.DEFAULT), p_78535_, p_251864_, p_250651_, p_78538_);
+      }).collect(Collectors.toSet()), new TimerQueue<>(TimerCallbacks.SERVER_CALLBACKS, p_78531_.get("ScheduledEvents").asStream()), (CompoundTag)p_78531_.get("CustomBossEvents").orElseEmptyMap().getValue(), p_78531_.get("DragonFight").read(EndDragonFight.Data.CODEC).resultOrPartial(LOGGER::error).orElse(EndDragonFight.Data.DEFAULT), p_78535_, p_251864_, p_250651_, p_78538_).withConfirmedWarning(p_78538_ != Lifecycle.stable() && p_78531_.get("confirmedExperimentalSettings").asBoolean(false));
    }
 
    public CompoundTag createTag(RegistryAccess p_78543_, @Nullable CompoundTag p_78544_) {
@@ -148,7 +_,7 @@
       p_78547_.put("Version", compoundtag);
       NbtUtils.addCurrentDataVersion(p_78547_);
       DynamicOps<Tag> dynamicops = RegistryOps.create(NbtOps.INSTANCE, p_78546_);
-      WorldGenSettings.encode(dynamicops, this.worldOptions, p_78546_).resultOrPartial(Util.prefix("WorldGenSettings: ", LOGGER::error)).ifPresent((p_78574_) -> {
+      WorldGenSettings.encode(dynamicops, this.worldOptions, new WorldDimensions(this.customDimensions != null ? this.customDimensions : p_78546_.registryOrThrow(Registries.LEVEL_STEM))).resultOrPartial(Util.prefix("WorldGenSettings: ", LOGGER::error)).ifPresent((p_78574_) -> { // CraftBukkit
          p_78547_.put("WorldGenSettings", p_78574_);
       });
       p_78547_.putInt("GameType", this.settings.gameType().getId());
@@ -195,6 +_,13 @@
          p_78547_.putUUID("WanderingTraderId", this.wanderingTraderId);
       }
 
+      p_78547_.putString("forgeLifecycle", net.minecraftforge.common.ForgeHooks.encodeLifecycle(this.settings.getLifecycle()));
+      p_78547_.putBoolean("confirmedExperimentalSettings", this.confirmedExperimentalWarning);
+
+      if (Bukkit.getServer() != null) {
+         p_78547_.putString("Bukkit.Version", Bukkit.getName() + "/" + Bukkit.getVersion() + "/" + Bukkit.getBukkitVersion()); // CraftBukkit
+         world.getWorld().storeBukkitValues(p_78547_); // CraftBukkit - add pdc
+      }
    }
 
    private static ListTag stringCollectionToTag(Set<String> p_277880_) {
@@ -284,6 +_,20 @@
    }
 
    public void setThundering(boolean p_78562_) {
+      // CraftBukkit start
+      if (this.thundering == p_78562_) {
+         return;
+      }
+
+      org.bukkit.World world = Bukkit.getWorld(getLevelName());
+      if (world != null) {
+         ThunderChangeEvent thunder = new ThunderChangeEvent(world, p_78562_);
+         Bukkit.getServer().getPluginManager().callEvent(thunder);
+         if (thunder.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.thundering = p_78562_;
    }
 
@@ -300,6 +_,20 @@
    }
 
    public void setRaining(boolean p_78576_) {
+      // CraftBukkit start
+      if (this.raining == p_78576_) {
+         return;
+      }
+
+      org.bukkit.World world = Bukkit.getWorld(getLevelName());
+      if (world != null) {
+         WeatherChangeEvent weather = new WeatherChangeEvent(world, p_78576_);
+         Bukkit.getServer().getPluginManager().callEvent(weather);
+         if (weather.isCancelled()) {
+            return;
+         }
+      }
+      // CraftBukkit end
       this.raining = p_78576_;
    }
 
@@ -353,6 +_,12 @@
 
    public void setDifficulty(Difficulty p_78521_) {
       this.settings = this.settings.withDifficulty(p_78521_);
+      // CraftBukkit start
+      ClientboundChangeDifficultyPacket packet = new ClientboundChangeDifficultyPacket(this.getDifficulty(), this.isDifficultyLocked());
+      for (ServerPlayer player : world.players()) {
+         player.connection.send(packet);
+      }
+      // CraftBukkit end
    }
 
    public boolean isDifficultyLocked() {
@@ -462,6 +_,23 @@
    public LevelSettings getLevelSettings() {
       return this.settings.copy();
    }
+
+   public boolean hasConfirmedExperimentalWarning() {
+      return this.confirmedExperimentalWarning;
+   }
+
+   public PrimaryLevelData withConfirmedWarning(boolean confirmedWarning) { // Builder-like to not patch ctor
+      this.confirmedExperimentalWarning = confirmedWarning;
+      return this;
+   }
+
+   // CraftBukkit start - Check if the name stored in NBT is the correct one
+   public void checkName(String name) {
+      if (!this.settings.levelName.equals(name)) {
+         this.settings.levelName = name;
+      }
+   }
+   // CraftBukkit end
 
    /** @deprecated */
    @Deprecated

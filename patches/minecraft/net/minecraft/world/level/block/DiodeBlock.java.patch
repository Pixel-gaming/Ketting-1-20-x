--- a/net/minecraft/world/level/block/DiodeBlock.java
+++ b/net/minecraft/world/level/block/DiodeBlock.java
@@ -20,6 +_,7 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 import net.minecraft.world.ticks.TickPriority;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public abstract class DiodeBlock extends HorizontalDirectionalBlock {
    protected static final VoxelShape SHAPE = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 2.0D, 16.0D);
@@ -49,8 +_,18 @@
          boolean flag = p_221065_.getValue(POWERED);
          boolean flag1 = this.shouldTurnOn(p_221066_, p_221067_, p_221065_);
          if (flag && !flag1) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_221066_, p_221067_, 15, 0).getNewCurrent() != 0) {
+               return;
+            }
+            // CraftBukkit end
             p_221066_.setBlock(p_221067_, p_221065_.setValue(POWERED, Boolean.valueOf(false)), 2);
          } else if (!flag) {
+            // CraftBukkit start
+            if (CraftEventFactory.callRedstoneChange(p_221066_, p_221067_, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+            // CraftBukkit end
             p_221066_.setBlock(p_221067_, p_221065_.setValue(POWERED, Boolean.valueOf(true)), 2);
             if (!flag1) {
                p_221066_.scheduleTick(p_221067_, this, this.getDelay(p_221065_), TickPriority.VERY_HIGH);
@@ -162,6 +_,8 @@
    protected void updateNeighborsInFront(Level p_52581_, BlockPos p_52582_, BlockState p_52583_) {
       Direction direction = p_52583_.getValue(FACING);
       BlockPos blockpos = p_52582_.relative(direction.getOpposite());
+      if (net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(p_52581_, p_52582_, p_52581_.getBlockState(p_52582_), java.util.EnumSet.of(direction.getOpposite()), false).isCanceled())
+         return;
       p_52581_.neighborChanged(blockpos, this, p_52582_);
       p_52581_.updateNeighborsAtExceptFromFacing(blockpos, this, direction);
    }

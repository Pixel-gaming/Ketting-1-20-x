--- a/net/minecraft/world/level/block/ChestBlock.java
+++ b/net/minecraft/world/level/block/ChestBlock.java
@@ -73,7 +_,8 @@
    protected static final VoxelShape AABB = Block.box(1.0D, 0.0D, 1.0D, 15.0D, 14.0D, 15.0D);
    private static final DoubleBlockCombiner.Combiner<ChestBlockEntity, Optional<Container>> CHEST_COMBINER = new DoubleBlockCombiner.Combiner<ChestBlockEntity, Optional<Container>>() {
       public Optional<Container> acceptDouble(ChestBlockEntity p_51591_, ChestBlockEntity p_51592_) {
-         return Optional.of(new CompoundContainer(p_51591_, p_51592_));
+         final CompoundContainer container = new CompoundContainer(p_51604_, p_51605_);
+         return Optional.of(new DoubleInventory(p_51604_, p_51605_, container)); // CraftBukkit
       }
 
       public Optional<Container> acceptSingle(ChestBlockEntity p_51589_) {
@@ -122,6 +_,38 @@
       return CODEC;
    }
 
+   // CraftBukkit start
+   public static class DoubleInventory implements MenuProvider {
+
+      private final ChestBlockEntity tileentitychest;
+      private final ChestBlockEntity tileentitychest1;
+      public final CompoundContainer inventorylargechest;
+
+      public DoubleInventory(ChestBlockEntity tileentitychest, ChestBlockEntity tileentitychest1, CompoundContainer inventorylargechest) {
+         this.tileentitychest = tileentitychest;
+         this.tileentitychest1 = tileentitychest1;
+         this.inventorylargechest = inventorylargechest;
+      }
+
+      @Nullable
+      @Override
+      public AbstractContainerMenu createMenu(int i, Inventory playerinventory, Player entityhuman) {
+         if (tileentitychest.canOpen(entityhuman) && tileentitychest1.canOpen(entityhuman)) {
+            tileentitychest.unpackLootTable(playerinventory.player);
+            tileentitychest1.unpackLootTable(playerinventory.player);
+            return ChestMenu.sixRows(i, playerinventory, inventorylargechest);
+         } else {
+            return null;
+         }
+      }
+
+      @Override
+      public Component getDisplayName() {
+         return (Component) (tileentitychest.hasCustomName() ? tileentitychest.getDisplayName() : (tileentitychest1.hasCustomName() ? tileentitychest1.getDisplayName() : Component.translatable("container.chestDouble")));
+      }
+   };
+   // CraftBukkit end
+
    public ChestBlock(BlockBehaviour.Properties p_51490_, Supplier<BlockEntityType<? extends ChestBlockEntity>> p_51491_) {
       super(p_51490_, p_51491_);
       this.registerDefaultState(this.stateDefinition.any().setValue(FACING, Direction.NORTH).setValue(TYPE, ChestType.SINGLE).setValue(WATERLOGGED, Boolean.valueOf(false)));
@@ -273,7 +_,14 @@
 
    @Nullable
    public MenuProvider getMenuProvider(BlockState p_51574_, Level p_51575_, BlockPos p_51576_) {
-      return this.combine(p_51574_, p_51575_, p_51576_, false).apply(MENU_PROVIDER_COMBINER).orElse((MenuProvider)null);
+      // CraftBukkit start
+      return getMenuProvider(p_51574_, p_51575_, p_51576_, false);
+   }
+
+   @Nullable
+   public MenuProvider getMenuProvider(BlockState iblockdata, Level world, BlockPos blockposition, boolean ignoreObstructions) {
+      return (MenuProvider) ((Optional) this.combine(iblockdata, world, blockposition, ignoreObstructions).apply(ChestBlock.MENU_PROVIDER_COMBINER)).orElse((Object) null);
+      // CraftBukkit end
    }
 
    public static DoubleBlockCombiner.Combiner<ChestBlockEntity, Float2FloatFunction> opennessCombiner(final LidBlockEntity p_51518_) {
@@ -338,7 +_,8 @@
    }
 
    public BlockState mirror(BlockState p_51549_, Mirror p_51550_) {
-      return p_51549_.rotate(p_51550_.getRotation(p_51549_.getValue(FACING)));
+      BlockState rotated = p_51549_.rotate(p_51550_.getRotation(p_51549_.getValue(FACING)));
+      return p_51550_ == Mirror.NONE ? rotated : rotated.setValue(TYPE, rotated.getValue(TYPE).getOpposite());  // Forge: Fixed MC-134110 Structure mirroring breaking apart double chests
    }
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_51562_) {

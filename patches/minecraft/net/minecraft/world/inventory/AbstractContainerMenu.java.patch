--- a/net/minecraft/world/inventory/AbstractContainerMenu.java
+++ b/net/minecraft/world/inventory/AbstractContainerMenu.java
@@ -41,11 +_,11 @@
    public static final int f_150390_ = 1;
    public static final int f_150391_ = 2;
    public static final int f_150392_ = Integer.MAX_VALUE;
-   private final NonNullList<ItemStack> f_38841_ = NonNullList.m_122779_();
-   public final NonNullList<Slot> f_38839_ = NonNullList.m_122779_();
+   public NonNullList<ItemStack> f_38841_ = NonNullList.m_122779_();
+   public NonNullList<Slot> f_38839_ = NonNullList.m_122779_();
    private final List<DataSlot> f_38842_ = Lists.newArrayList();
    private ItemStack f_150393_ = ItemStack.f_41583_;
-   private final NonNullList<ItemStack> f_150394_ = NonNullList.m_122779_();
+   public NonNullList<ItemStack> f_150394_ = NonNullList.m_122779_();
    private final IntList f_150395_ = new IntArrayList();
    private ItemStack f_150396_ = ItemStack.f_41583_;
    private int f_182405_;
@@ -60,6 +_,32 @@
    private ContainerSynchronizer f_150397_;
    private boolean f_150398_;
 
+   // CraftBukkit start
+   public boolean checkReachable = true;
+
+   //Ketting start
+   public org.bukkit.inventory.InventoryView getBukkitView(){
+      return org.kettingpowered.ketting.craftbukkit.CraftStubInventoryView.INSTANCE;
+   }
+   //Ketting End
+   public void transferTo(AbstractContainerMenu other, org.bukkit.craftbukkit.v1_20_R1.entity.CraftHumanEntity player) {
+      org.bukkit.inventory.InventoryView source = this.getBukkitView(), destination = other.getBukkitView();
+      ((org.bukkit.craftbukkit.v1_20_R1.inventory.CraftInventory) source.getTopInventory()).getInventory().onClose(player);
+      ((org.bukkit.craftbukkit.v1_20_R1.inventory.CraftInventory) source.getBottomInventory()).getInventory().onClose(player);
+      ((org.bukkit.craftbukkit.v1_20_R1.inventory.CraftInventory) destination.getTopInventory()).getInventory().onOpen(player);
+      ((org.bukkit.craftbukkit.v1_20_R1.inventory.CraftInventory) destination.getBottomInventory()).getInventory().onOpen(player);
+   }
+   private net.minecraft.network.chat.Component title;
+   public final net.minecraft.network.chat.Component getTitle() {
+      com.google.common.base.Preconditions.checkState(this.title != null, "Title not set");
+      return this.title;
+   }
+   public final void setTitle(net.minecraft.network.chat.Component title) {
+      com.google.common.base.Preconditions.checkState(this.title == null, "Title already set");
+      this.title = title;
+   }
+   // CraftBukkit end
+
    protected AbstractContainerMenu(@Nullable MenuType<?> p_38851_, int p_38852_) {
       this.f_38843_ = p_38851_;
       this.f_38840_ = p_38852_;
@@ -150,6 +_,15 @@
 
    }
 
+   // CraftBukkit start
+   public void broadcastCarriedItem() {
+      this.f_150396_ = this.m_142621_().m_41777_();
+      if (this.f_150397_ != null) {
+         this.f_150397_.m_142529_(this, this.f_150396_);
+      }
+   }
+   // CraftBukkit end
+
    public void m_38943_(ContainerListener p_38944_) {
       this.f_38848_.remove(p_38944_);
    }
@@ -229,6 +_,8 @@
             ItemStack itemstack1 = p_150438_.get();
             this.f_150394_.set(p_150436_, itemstack1);
             if (this.f_150397_ != null) {
+               // Forge: Only synchronize a slot change if the itemstack actually changed in a way that is relevant to the client (i.e. share tag changed)
+               if (!p_150437_.equals(itemstack, true))
                this.f_150397_.m_142074_(this, p_150436_, itemstack1);
             }
          }
@@ -332,7 +_,7 @@
             }
          } else if (this.f_38846_ == 2) {
             if (!this.f_38847_.isEmpty()) {
-               if (this.f_38847_.size() == 1) {
+               if (false && this.f_38847_.size() == 1) { // CraftBukkit - treat everything as a drag since we are unable to easily call InventoryClickEvent instead
                   int i1 = (this.f_38847_.iterator().next()).f_40219_;
                   this.m_38951_();
                   this.m_150430_(i1, this.f_38845_, ClickType.PICKUP, p_150434_);
@@ -347,6 +_,7 @@
 
                int k1 = this.m_142621_().m_41613_();
 
+               java.util.Map<Integer, ItemStack> draggedSlots = new java.util.HashMap<Integer, ItemStack>(); // CraftBukkit - Store slots from drag in map (raw slot id -> new stack)
                for(Slot slot1 : this.f_38847_) {
                   ItemStack itemstack1 = this.m_142621_();
                   if (slot1 != null && m_38899_(slot1, itemstack1, true) && slot1.m_5857_(itemstack1) && (this.f_38845_ == 2 || itemstack1.m_41613_() >= this.f_38847_.size()) && this.m_5622_(slot1)) {
@@ -354,12 +_,48 @@
                      int k = Math.min(itemstack2.m_41741_(), slot1.m_5866_(itemstack2));
                      int l = Math.min(m_278794_(this.f_38847_, this.f_38845_, itemstack2) + j, k);
                      k1 -= l - j;
-                     slot1.m_269060_(itemstack2.m_255036_(l));
-                  }
-               }
-
-               itemstack2.m_41764_(k1);
-               this.m_142503_(itemstack2);
+                     // slot1.setByPlayer(itemstack2.copyWithCount(l));
+                     draggedSlots.put(slot1.f_40219_, itemstack2.m_255036_(l)); // CraftBukkit - Put in map instead of setting
+                  }
+               }
+
+               // CraftBukkit start - InventoryDragEvent
+               org.bukkit.inventory.InventoryView view = getBukkitView();
+               org.bukkit.inventory.ItemStack newcursor = org.bukkit.craftbukkit.v1_20_R1.inventory.CraftItemStack.asCraftMirror(itemstack2);
+               newcursor.setAmount(k1);
+               java.util.Map<Integer, org.bukkit.inventory.ItemStack> eventmap = new java.util.HashMap<Integer, org.bukkit.inventory.ItemStack>();
+               for (java.util.Map.Entry<Integer, ItemStack> ditem : draggedSlots.entrySet()) {
+                  eventmap.put(ditem.getKey(), org.bukkit.craftbukkit.v1_20_R1.inventory.CraftItemStack.asBukkitCopy(ditem.getValue()));
+               }
+
+               // It's essential that we set the cursor to the new value here to prevent item duplication if a plugin closes the inventory.
+               ItemStack oldCursor = this.m_142621_();
+               this.m_142503_(org.bukkit.craftbukkit.v1_20_R1.inventory.CraftItemStack.asNMSCopy(newcursor));
+
+               org.bukkit.event.inventory.InventoryDragEvent event = new org.bukkit.event.inventory.InventoryDragEvent(view, (newcursor.getType() != org.bukkit.Material.AIR ? newcursor : null), org.bukkit.craftbukkit.v1_20_R1.inventory.CraftItemStack.asBukkitCopy(oldCursor), this.f_38845_ == 1, eventmap);
+               p_150434_.m_9236_().getCraftServer().getPluginManager().callEvent(event);
+
+               // Whether or not a change was made to the inventory that requires an update.
+               boolean needsUpdate = event.getResult() != org.bukkit.event.Event.Result.DEFAULT;
+
+               if (event.getResult() != org.bukkit.event.Event.Result.DENY) {
+                  for (java.util.Map.Entry<Integer, ItemStack> dslot : draggedSlots.entrySet()) {
+                     view.setItem(dslot.getKey(), org.bukkit.craftbukkit.v1_20_R1.inventory.CraftItemStack.asBukkitCopy(dslot.getValue()));
+                  }
+                  // The only time the carried item will be set to null is if the inventory is closed by the server.
+                  // If the inventory is closed by the server, then the cursor items are dropped.  This is why we change the cursor early.
+                  if (this.m_142621_() != null) {
+                     this.m_142503_(org.bukkit.craftbukkit.v1_20_R1.inventory.CraftItemStack.asNMSCopy(event.getCursor()));
+                     needsUpdate = true;
+                  }
+               } else {
+                  this.m_142503_(oldCursor);
+               }
+
+               if (needsUpdate && p_150434_ instanceof ServerPlayer) {
+                  this.m_150429_();
+               }
+               // CraftBukkit end
             }
 
             this.m_38951_();
@@ -373,8 +_,11 @@
          if (p_150431_ == -999) {
             if (!this.m_142621_().m_41619_()) {
                if (clickaction == ClickAction.PRIMARY) {
-                  p_150434_.m_36176_(this.m_142621_(), true);
+                  // CraftBukkit start
+                  ItemStack carried = this.m_142621_();
                   this.m_142503_(ItemStack.f_41583_);
+                  p_150434_.m_36176_(carried, true);
+                  // CraftBukkit start
                } else {
                   p_150434_.m_36176_(this.m_142621_().m_41620_(1), true);
                }
@@ -401,6 +_,7 @@
             ItemStack itemstack10 = this.m_142621_();
             p_150434_.m_141945_(itemstack10, slot7.m_7993_(), clickaction);
             if (!this.m_246200_(p_150434_, clickaction, slot7, itemstack9, itemstack10)) {
+            if (!net.minecraftforge.common.ForgeHooks.onItemStackedOn(itemstack9, itemstack10, slot7, clickaction, p_150434_, m_150446_()))
                if (itemstack9.m_41619_()) {
                   if (!itemstack10.m_41619_()) {
                      int i3 = clickaction == ClickAction.PRIMARY ? itemstack10.m_41613_() : 1;
@@ -433,6 +_,15 @@
             }
 
             slot7.m_6654_();
+            // CraftBukkit start - Make sure the client has the right slot contents
+            if (p_150434_ instanceof ServerPlayer && slot7.m_6641_() != 64) {
+               ((ServerPlayer) p_150434_).f_8906_.m_9829_(new net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket(this.f_38840_, this.m_182425_(), slot7.f_40219_, slot7.m_7993_()));
+               // Updating a crafting inventory makes the client reset the result slot, have to send it again
+               if (this.getBukkitView().getType() == org.bukkit.event.inventory.InventoryType.WORKBENCH || this.getBukkitView().getType() == org.bukkit.event.inventory.InventoryType.CRAFTING) {
+                  ((ServerPlayer) p_150434_).f_8906_.m_9829_(new net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket(this.f_38840_, this.m_182425_(), 0, this.m_38853_(0).m_7993_()));
+               }
+            }
+            // CraftBukkit end
          }
       } else if (p_150433_ == ClickType.SWAP) {
          Slot slot2 = this.f_38839_.get(p_150431_);
@@ -536,13 +_,14 @@
       if (p_38940_ instanceof ServerPlayer) {
          ItemStack itemstack = this.m_142621_();
          if (!itemstack.m_41619_()) {
+            this.m_142503_(ItemStack.f_41583_); // CraftBukkit - SPIGOT-4556 - from below
             if (p_38940_.m_6084_() && !((ServerPlayer)p_38940_).m_9232_()) {
                p_38940_.m_150109_().m_150079_(itemstack);
             } else {
                p_38940_.m_36176_(itemstack, false);
             }
 
-            this.m_142503_(ItemStack.f_41583_);
+            // this.setCarried(ItemStack.EMPTY); // CraftBukkit - moved up
          }
       }
 
@@ -610,14 +_,15 @@
             ItemStack itemstack = slot.m_7993_();
             if (!itemstack.m_41619_() && ItemStack.m_150942_(p_38904_, itemstack)) {
                int j = itemstack.m_41613_() + p_38904_.m_41613_();
-               if (j <= p_38904_.m_41741_()) {
+               int maxSize = Math.min(slot.m_6641_(), p_38904_.m_41741_());
+               if (j <= maxSize) {
                   p_38904_.m_41764_(0);
                   itemstack.m_41764_(j);
                   slot.m_6654_();
                   flag = true;
-               } else if (itemstack.m_41613_() < p_38904_.m_41741_()) {
-                  p_38904_.m_41774_(p_38904_.m_41741_() - itemstack.m_41613_());
-                  itemstack.m_41764_(p_38904_.m_41741_());
+               } else if (itemstack.m_41613_() < maxSize) {
+                  p_38904_.m_41774_(maxSize - itemstack.m_41613_());
+                  itemstack.m_41764_(maxSize);
                   slot.m_6654_();
                   flag = true;
                }
@@ -718,7 +_,7 @@
             i = 1;
             break;
          case 2:
-            i = p_279172_.m_41720_().m_41459_();
+            i = p_279172_.m_41741_();
             break;
          default:
             i = p_279172_.m_41613_();
@@ -760,6 +_,11 @@
    }
 
    public ItemStack m_142621_() {
+      // CraftBukkit start
+      if (this.f_150393_.m_41619_()) {
+         this.m_142503_(ItemStack.f_41583_);
+      }
+      // CraftBukkit end
       return this.f_150393_;
    }
 

--- a/net/minecraft/world/item/alchemy/PotionBrewing.java
+++ b/net/minecraft/world/item/alchemy/PotionBrewing.java
@@ -57,7 +_,7 @@
       int i = 0;
 
       for(int j = POTION_MIXES.size(); i < j; ++i) {
-         if ((POTION_MIXES.get(i)).to == p_43512_) {
+         if ((POTION_MIXES.get(i)).to.get() == p_43512_) {
             return true;
          }
       }
@@ -79,7 +_,7 @@
 
       for(int j = CONTAINER_MIXES.size(); i < j; ++i) {
          PotionBrewing.Mix<Item> mix = CONTAINER_MIXES.get(i);
-         if (mix.from == item && mix.ingredient.test(p_43521_)) {
+         if (mix.from.get() == item && mix.ingredient.test(p_43521_)) {
             return true;
          }
       }
@@ -93,7 +_,7 @@
 
       for(int j = POTION_MIXES.size(); i < j; ++i) {
          PotionBrewing.Mix<Potion> mix = POTION_MIXES.get(i);
-         if (mix.from == potion && mix.ingredient.test(p_43526_)) {
+         if (mix.from.get() == potion && mix.ingredient.test(p_43526_)) {
             return true;
          }
       }
@@ -109,8 +_,8 @@
 
          for(int j = CONTAINER_MIXES.size(); i < j; ++i) {
             PotionBrewing.Mix<Item> mix = CONTAINER_MIXES.get(i);
-            if (mix.from == item && mix.ingredient.test(p_43530_)) {
-               return PotionUtils.setPotion(new ItemStack(mix.to), potion);
+            if (mix.from.get() == item && mix.ingredient.test(p_43530_)) {
+               return PotionUtils.setPotion(new ItemStack(mix.to.get()), potion);
             }
          }
 
@@ -118,8 +_,8 @@
 
          for(int k = POTION_MIXES.size(); i < k; ++i) {
             PotionBrewing.Mix<Potion> mix1 = POTION_MIXES.get(i);
-            if (mix1.from == potion && mix1.ingredient.test(p_43530_)) {
-               return PotionUtils.setPotion(new ItemStack(item), mix1.to);
+            if (mix1.from.get() == potion && mix1.ingredient.test(p_43530_)) {
+               return PotionUtils.setPotion(new ItemStack(item), mix1.to.get());
             }
          }
       }
@@ -196,7 +_,7 @@
       } else if (!(p_43505_ instanceof PotionItem)) {
          throw new IllegalArgumentException("Expected a potion, got: " + BuiltInRegistries.ITEM.getKey(p_43505_));
       } else {
-         CONTAINER_MIXES.add(new PotionBrewing.Mix<>(p_43503_, Ingredient.of(p_43504_), p_43505_));
+         CONTAINER_MIXES.add(new PotionBrewing.Mix<>(net.minecraftforge.registries.ForgeRegistries.ITEMS, p_43503_, Ingredient.of(p_43504_), p_43505_));
       }
    }
 
@@ -209,18 +_,18 @@
    }
 
    private static void addMix(Potion p_43514_, Item p_43515_, Potion p_43516_) {
-      POTION_MIXES.add(new PotionBrewing.Mix<>(p_43514_, Ingredient.of(p_43515_), p_43516_));
+      POTION_MIXES.add(new PotionBrewing.Mix<>(net.minecraftforge.registries.ForgeRegistries.POTIONS, p_43514_, Ingredient.of(p_43515_), p_43516_));
    }
 
    public static class Mix<T> {
-      final T from;
+      public final net.minecraft.core.Holder.Reference<T> from;
       public final Ingredient ingredient;
-      final T to;
+      public final net.minecraft.core.Holder.Reference<T> to;
 
-      public Mix(T p_43536_, Ingredient p_43537_, T p_43538_) {
-         this.from = p_43536_;
+      public Mix(net.minecraftforge.registries.IForgeRegistry<T> registry, T p_43536_, Ingredient p_43537_, T p_43538_) {
+         this.from = registry.getDelegateOrThrow(p_43536_);
          this.ingredient = p_43537_;
-         this.to = p_43538_;
+         this.to = registry.getDelegateOrThrow(p_43538_);
       }
    }
 }

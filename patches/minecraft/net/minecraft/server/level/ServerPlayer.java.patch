--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -147,7 +_,7 @@
 import net.minecraft.world.scores.criteria.ObjectiveCriteria;
 import org.slf4j.Logger;
 
-public class ServerPlayer extends Player {
+public class ServerPlayer extends Player implements net.minecraftforge.common.extensions.IForgeServerPlayer {
    private static final Logger f_8907_ = LogUtils.getLogger();
    private static final int f_143381_ = 32;
    private static final int f_143382_ = 10;
@@ -243,6 +_,19 @@
    public int f_8940_;
    public boolean f_8944_;
 
+   // CraftBukkit start
+   public String displayName;
+   public org.bukkit.Location compassTarget;
+   public int newExp = 0;
+   public int newLevel = 0;
+   public int newTotalExp = 0;
+   public boolean keepLevel = false;
+   public double maxHealthCache;
+   public boolean joining = true;
+   public boolean sentListPacket = false;
+   public String kickLeaveMessage = null; // SPIGOT-3034: Forward leave message to PlayerQuitEvent
+   // CraftBukkit end
+
    public ServerPlayer(MinecraftServer p_254143_, ServerLevel p_254435_, GameProfile p_253651_, ClientInformation p_299301_) {
       super(p_254435_, p_254435_.m_220360_(), p_254435_.m_220361_(), p_253651_);
       this.f_8939_ = p_254143_.m_7950_(this);
@@ -253,11 +_,56 @@
       this.m_274367_(1.0F);
       this.m_9201_(p_254435_);
       this.m_9156_(p_299301_);
-   }
+
+      // CraftBukkit start
+      this.displayName = this.m_6302_();
+      this.bukkitPickUpLoot = true;
+      this.maxHealthCache = this.m_21233_();
+   }
+
+   // Yes, this doesn't match Vanilla, but it's the best we can do for now.
+   // If this is an issue, PRs are welcome
+   public final BlockPos getSpawnPoint(ServerLevel level) {
+      BlockPos blockposition = level.m_220360_();
+
+      if (level.m_6042_().f_223549_() && level.f_8549_.m_5464_() != GameType.ADVENTURE) {
+         int i = Math.max(0, this.f_8924_.m_129803_(level));
+         int j = Mth.m_14107_(level.m_6857_().m_61941_((double) blockposition.m_123341_(), (double) blockposition.m_123343_()));
+
+         if (j < i) {
+            i = j;
+         }
+
+         if (j <= 1) {
+            i = 1;
+         }
+
+         long k = (long) (i * 2 + 1);
+         long l = k * k;
+         int i1 = l > 2147483647L ? Integer.MAX_VALUE : (int) l;
+         int j1 = this.m_9237_(i1);
+         int k1 = RandomSource.m_216327_().m_188503_(i1);
+
+         for (int l1 = 0; l1 < i1; ++l1) {
+            int i2 = (k1 + j1 * l1) % i1;
+            int j2 = i2 % (i * 2 + 1);
+            int k2 = i2 / (i * 2 + 1);
+            BlockPos blockposition1 = PlayerRespawnLogic.m_183928_(level, blockposition.m_123341_() + j2 - i, blockposition.m_123343_() + k2 - i);
+
+            if (blockposition1 != null) {
+               return blockposition1;
+            }
+         }
+      }
+
+      return blockposition;
+   }
+   // CraftBukkit end
 
    private void m_9201_(ServerLevel p_9202_) {
       BlockPos blockpos = p_9202_.m_220360_();
-      if (p_9202_.m_6042_().f_223549_() && p_9202_.m_7654_().m_129910_().m_5464_() != GameType.ADVENTURE) {
+
+      if (p_9202_.m_6042_().f_223549_() && p_9202_.f_8549_.m_5464_() != GameType.ADVENTURE) { // CraftBukkit
          int i = Math.max(0, this.f_8924_.m_129803_(p_9202_));
          int j = Mth.m_14107_(p_9202_.m_6857_().m_61941_((double)blockpos.m_123341_(), (double)blockpos.m_123343_()));
          if (j < i) {
@@ -317,11 +_,25 @@
       if (p_9131_.m_128425_("recipeBook", 10)) {
          this.f_8929_.m_12794_(p_9131_.m_128469_("recipeBook"), this.f_8924_.m_129894_());
       }
+      this.getBukkitEntity().readExtraData(p_9131_); // CraftBukkit
+
+      //Ketting start - load forge captures
+      net.minecraft.nbt.ListTag forgeCaptures = p_9131_.m_128437_("ForgeCaptures", 10);
+      setForgeCaptures(this, forgeCaptures);
+      //Ketting end
 
       if (this.m_5803_()) {
          this.m_5796_();
       }
 
+      // CraftBukkit start
+      String spawnWorld = p_9131_.m_128461_("SpawnWorld");
+      org.bukkit.craftbukkit.v1_20_R2.CraftWorld oldWorld = (org.bukkit.craftbukkit.v1_20_R2.CraftWorld) org.bukkit.Bukkit.getWorld(spawnWorld);
+      if (oldWorld != null) {
+         this.f_8935_ = oldWorld.getHandle().m_46472_();
+      }
+      // CraftBukkit end
+
       if (p_9131_.m_128425_("SpawnX", 99) && p_9131_.m_128425_("SpawnY", 99) && p_9131_.m_128425_("SpawnZ", 99)) {
          this.f_8936_ = new BlockPos(p_9131_.m_128451_("SpawnX"), p_9131_.m_128451_("SpawnY"), p_9131_.m_128451_("SpawnZ"));
          this.f_8937_ = p_9131_.m_128471_("SpawnForced");
@@ -350,7 +_,21 @@
 
       Entity entity1 = this.m_20201_();
       Entity entity = this.m_20202_();
-      if (entity != null && entity1 != this && entity1.m_146898_()) {
+
+      // CraftBukkit start - handle non-persistent vehicles
+      boolean persistVehicle = true;
+      if (entity1 != null) {
+         Entity vehicle;
+         for (vehicle = entity1; vehicle != null; vehicle = vehicle.m_20202_()) {
+            if (!vehicle.persist) {
+               persistVehicle = false;
+               break;
+            }
+         }
+      }
+
+      if (persistVehicle && entity != null && entity1 != this && entity1.m_146898_()) {
+         // CraftBukkit end
          CompoundTag compoundtag1 = new CompoundTag();
          CompoundTag compoundtag2 = new CompoundTag();
          entity1.m_20223_(compoundtag2);
@@ -371,8 +_,36 @@
             p_9197_.m_128365_("SpawnDimension", p_248207_);
          });
       }
-
-   }
+      this.getBukkitEntity().setExtraData(p_9197_); // CraftBukkit
+
+      //Ketting start - save forge captures
+      Inventory forgeCaptures = getForgeCaptures();
+      if (forgeCaptures != null) p_9197_.m_128365_("ForgeCaptures", forgeCaptures.m_36026_(new net.minecraft.nbt.ListTag()));
+      //Ketting end
+   }
+
+   // CraftBukkit start - World fallback code, either respawn location or global spawn
+   public void spawnIn(Level level) {
+      this.m_284535_(level);
+      if (level == null) {
+         this.m_146912_();
+         Vec3 position = null;
+         if (this.f_8935_ != null) {
+            level = this.f_8924_.m_129880_(this.f_8935_);
+            if (level != null && this.m_8961_() != null) {
+               position = Player.m_36130_((ServerLevel) level, this.m_8961_(), this.m_8962_(), false, false).orElse(null);
+            }
+         }
+         if (level == null || position == null) {
+            level = ((org.bukkit.craftbukkit.v1_20_R2.CraftWorld) org.bukkit.Bukkit.getServer().getWorlds().get(0)).getHandle();
+            position = Vec3.m_82512_(level.m_220360_());
+         }
+         this.m_284535_(level);
+         this.m_146884_(position);
+      }
+      this.f_8941_.m_9260_((ServerLevel) level);
+   }
+   // CraftBukkit end
 
    public void m_8985_(int p_8986_) {
       float f = (float)this.m_36323_();
@@ -424,6 +_,11 @@
    }
 
    public void m_8119_() {
+      // CraftBukkit start
+      if (this.joining) {
+         this.joining = false;
+      }
+      // CraftBukkit end
       this.f_8941_.m_7712_();
       this.f_244516_.m_219571_();
       --this.f_8921_;
@@ -477,7 +_,7 @@
          }
 
          if (this.m_21223_() != this.f_8917_ || this.f_8918_ != this.f_36097_.m_38702_() || this.f_36097_.m_38722_() == 0.0F != this.f_8919_) {
-            this.f_8906_.m_141995_(new ClientboundSetHealthPacket(this.m_21223_(), this.f_36097_.m_38702_(), this.f_36097_.m_38722_()));
+            this.f_8906_.m_141995_(new ClientboundSetHealthPacket(this.getBukkitEntity().getScaledHealth(), this.f_36097_.m_38702_(), this.f_36097_.m_38722_())); // CraftBukkit
             this.f_8917_ = this.m_21223_();
             this.f_8918_ = this.f_36097_.m_38702_();
             this.f_8919_ = this.f_36097_.m_38722_() == 0.0F;
@@ -508,6 +_,12 @@
             this.m_9104_(ObjectiveCriteria.f_83597_, Mth.m_14167_((float)this.f_8916_));
          }
 
+         // CraftBukkit start - Force max health updates
+         if (this.maxHealthCache != this.m_21233_()) {
+            this.getBukkitEntity().updateScaledHealth();
+         }
+         // CraftBukkit end
+
          if (this.f_36078_ != this.f_8915_) {
             this.f_8915_ = this.f_36078_;
             this.m_9104_(ObjectiveCriteria.f_83598_, Mth.m_14167_((float)this.f_8915_));
@@ -522,6 +_,20 @@
             CriteriaTriggers.f_10582_.m_222618_(this);
          }
 
+         // CraftBukkit start - initialize oldLevel, fire org.bukkit.event.player.PlayerLevelChangeEvent, and tick client-sided world border
+         if (this.oldLevel == -1) {
+            this.oldLevel = this.f_36078_;
+         }
+
+         if (this.oldLevel != this.f_36078_) {
+            org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerLevelChangeEvent(this.getBukkitEntity(), this.oldLevel, this.f_36078_);
+            this.oldLevel = this.f_36078_;
+         }
+
+         if (this.getBukkitEntity().hasClientWorldBorder()) {
+            ((org.bukkit.craftbukkit.v1_20_R2.CraftWorldBorder) this.getBukkitEntity().getWorldBorder()).getHandle().m_61969_();
+         }
+         // CraftBukkit end
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.m_127521_(throwable, "Ticking player");
          CrashReportCategory crashreportcategory = crashreport.m_127514_("Player being ticked");
@@ -562,16 +_,55 @@
    }
 
    private void m_9104_(ObjectiveCriteria p_9105_, int p_9106_) {
-      this.m_36329_().m_83427_(p_9105_, this.m_6302_(), (p_9178_) -> {
+      // CraftBukkit - Use our scores instead
+      this.m_9236_().getCraftServer().getScoreboardManager().getScoreboardScores(p_9105_, this.m_6302_(), (p_9178_) -> {
          p_9178_.m_83402_(p_9106_);
       });
    }
 
    public void m_6667_(DamageSource p_9035_) {
       this.m_146850_(GameEvent.f_223707_);
+      if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, p_9035_)) return;
       boolean flag = this.m_9236_().m_46469_().m_46207_(GameRules.f_46142_);
-      if (flag) {
-         Component component = this.m_21231_().m_19293_();
+      // CraftBukkit start - fire PlayerDeathEvent
+      if (this.f_20890_) {
+         return;
+      }
+      boolean keepInventory = this.m_9236_().m_46469_().m_46207_(GameRules.f_46133_) || this.m_5833_();
+
+      //Ketting start
+      Inventory copy = new Inventory(this);
+      copy.m_36006_(m_150109_()); // Create a deep copy
+
+      if (!this.m_5833_()) {
+         this.m_6668_(p_9035_);
+      }
+
+      List<org.bukkit.inventory.ItemStack> capturedDrops = new java.util.ArrayList<>(this.drops);
+      this.drops.clear();
+
+      Component defaultMessage = this.m_21231_().m_19293_();
+      String deathmessage = defaultMessage.getString();
+      keepLevel = keepInventory; // SPIGOT-2222: pre-set keepLevel
+      org.bukkit.event.entity.PlayerDeathEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerDeathEvent(this, capturedDrops, deathmessage, keepInventory); //Ketting - capturedDrops
+      //Ketting end
+
+      // SPIGOT-943 - only call if they have an inventory open
+      if (this.f_36096_ != this.f_36095_) {
+         this.m_6915_();
+      }
+
+      String deathMessage = event.getDeathMessage();
+
+      if (deathMessage != null && deathMessage.length() > 0 && flag) { // TODO: allow plugins to override?
+         Component component;
+
+         if (deathMessage.equals(deathmessage)) {
+            component = this.m_21231_().m_19293_();
+         } else {
+            component = org.bukkit.craftbukkit.v1_20_R2.util.CraftChatMessage.fromStringOrNull(deathMessage);
+         }
+
          this.f_8906_.m_295553_(new ClientboundPlayerCombatKillPacket(this.m_19879_(), component), PacketSendListener.m_243073_(() -> {
             int i = 256;
             String s = component.m_130668_(256);
@@ -600,11 +_,21 @@
          this.m_9215_();
       }
 
-      if (!this.m_5833_()) {
-         this.m_6668_(p_9035_);
+      // SPIGOT-5478 must be called manually now
+      this.m_21226_();
+      // we clean the player's inventory after the EntityDeathEvent is called so plugins can get the exact state of the inventory.
+      if (!event.getKeepInventory()) {
+         this.m_150109_().m_6211_();
+      } else { //Ketting - if keepInventory is modified by a plugin, reset the inventory and clear the forge captures
+         this.m_150109_().m_36006_(copy);
+         getForgeCapturesAndClear();
       }
 
-      this.m_36329_().m_83427_(ObjectiveCriteria.f_83590_, this.m_6302_(), Score::m_83392_);
+      this.m_9213_(this); // Remove spectated target
+      // CraftBukkit end
+
+      // CraftBukkit - Get our scores instead
+      this.m_9236_().getCraftServer().getScoreboardManager().getScoreboardScores(ObjectiveCriteria.f_83590_, this.m_6302_(), Score::m_83392_);
       LivingEntity livingentity = this.m_21232_();
       if (livingentity != null) {
          this.m_36246_(Stats.f_12987_.m_12902_(livingentity.m_6095_()));
@@ -638,10 +_,13 @@
          this.m_36401_(p_9051_);
          String s = this.m_6302_();
          String s1 = p_9050_.m_6302_();
-         this.m_36329_().m_83427_(ObjectiveCriteria.f_83592_, s, Score::m_83392_);
+
+         // CraftBukkit - Get our scores instead
+         this.m_9236_().getCraftServer().getScoreboardManager().getScoreboardScores(ObjectiveCriteria.f_83592_, s, Score::m_83392_);
          if (p_9050_ instanceof Player) {
             this.m_36220_(Stats.f_12938_);
-            this.m_36329_().m_83427_(ObjectiveCriteria.f_83591_, s, Score::m_83392_);
+            // CraftBukkit - Get our scores instead
+            this.m_9236_().getCraftServer().getScoreboardManager().getScoreboardScores(ObjectiveCriteria.f_83591_, s, Score::m_83392_);
          } else {
             this.m_36220_(Stats.f_12936_);
          }
@@ -657,7 +_,8 @@
       if (playerteam != null) {
          int i = playerteam.m_7414_().m_126656_();
          if (i >= 0 && i < p_9127_.length) {
-            this.m_36329_().m_83427_(p_9127_[i], p_9125_, Score::m_83392_);
+            // CraftBukkit - Get our scores instead
+            this.m_9236_().getCraftServer().getScoreboardManager().getScoreboardScores(p_9127_[i], p_9125_, Score::m_83392_);
          }
       }
 
@@ -700,15 +_,18 @@
    }
 
    private boolean m_9216_() {
-      return this.f_8924_.m_129799_();
+      // CraftBukkit - this.server.isPvpAllowed() -> this.world.pvpMode
+      return this.m_9236_().pvpMode;
    }
 
    @Nullable
    protected PortalInfo m_7937_(ServerLevel p_8998_) {
       PortalInfo portalinfo = super.m_7937_(p_8998_);
-      if (portalinfo != null && this.m_9236_().m_46472_() == Level.f_46428_ && p_8998_.m_46472_() == Level.f_46430_) {
+      p_8998_ = (portalinfo == null) ? p_8998_ : portalinfo.world; // CraftBukkit
+
+      if (portalinfo != null && this.m_9236_().m_46472_() == Level.f_46428_ && p_8998_ != null && p_8998_.m_46472_() == Level.f_46430_) { // CraftBukkit
          Vec3 vec3 = portalinfo.f_77676_.m_82520_(0.0D, -1.0D, 0.0D);
-         return new PortalInfo(vec3, Vec3.f_82478_, 90.0F, 0.0F);
+         return new PortalInfo(vec3, Vec3.f_82478_, 90.0F, 0.0F, p_8998_, portalinfo.portalEventInfo); // CraftBukkit
       } else {
          return portalinfo;
       }
@@ -716,10 +_,32 @@
 
    @Nullable
    public Entity m_5489_(ServerLevel p_9180_) {
-      this.f_8927_ = true;
+      // CraftBukkit start
+      return changeDimension(p_9180_, p_9180_.m_8871_(), org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   @Nullable
+   public Entity changeDimension(ServerLevel p_9180_, net.minecraftforge.common.util.ITeleporter teleporter) {
+      return changeDimension(p_9180_, teleporter, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   @Nullable
+   public Entity changeDimension(ServerLevel p_9180_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      return changeDimension(p_9180_, p_9180_.m_8871_(), cause);
+   }
+
+   @Nullable
+   public Entity changeDimension(ServerLevel p_9180_, net.minecraftforge.common.util.ITeleporter teleporter, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      // CraftBukkit end
+      if (!net.minecraftforge.event.ForgeEventFactory.onTravelToDimension(this, p_9180_.m_46472_()))
+         return null;
+      if (this.m_5803_()) return this; // CraftBukkit - SPIGOT-3154
+      // this.isChangingDimension = true; // CraftBukkit - Moved down and into PlayerList#changeDimension
       ServerLevel serverlevel = this.m_284548_();
       ResourceKey<Level> resourcekey = serverlevel.m_46472_();
-      if (resourcekey == Level.f_46430_ && p_9180_.m_46472_() == Level.f_46428_) {
+
+      if (resourcekey == Level.f_46430_ && p_9180_ != null && p_9180_.m_46472_() == Level.f_46428_ && teleporter.isVanilla()) { //Forge: Fix non-vanilla teleporters triggering end credits // CraftBukkit
+         this.f_8927_ = true; // CraftBukkit - Moved down from above
          this.m_19877_();
          this.m_284548_().m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
          if (!this.f_8944_) {
@@ -730,71 +_,138 @@
 
          return this;
       } else {
-         LevelData leveldata = p_9180_.m_6106_();
-         this.f_8906_.m_141995_(new ClientboundRespawnPacket(this.m_292591_(p_9180_), (byte)3));
-         this.f_8906_.m_141995_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
-         PlayerList playerlist = this.f_8924_.m_6846_();
-         playerlist.m_11289_(this);
-         serverlevel.m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
-         this.m_146912_();
-         PortalInfo portalinfo = this.m_7937_(p_9180_);
+         // CraftBukkit start
+         /*
+         LevelData leveldata = p_9180_.getLevelData();
+         this.connection.send(new ClientboundRespawnPacket(this.createCommonSpawnInfo(p_9180_), (byte)3));
+         this.connection.send(new ClientboundChangeDifficultyPacket(leveldata.getDifficulty(), leveldata.isDifficultyLocked()));
+         playerlist.sendPlayerPermissionLevel(this);
+         serverlevel.removePlayerImmediately(this, Entity.RemovalReason.CHANGED_DIMENSION);
+         this.revive();
+         */
+         // CraftBukkit end
+         PlayerList playerList = this.f_8924_.m_6846_();
+         PortalInfo portalinfo = teleporter.getPortalInfo(this, p_9180_, this::m_7937_);
+
+         java.util.concurrent.atomic.AtomicReference<ServerLevel> levelRef = new java.util.concurrent.atomic.AtomicReference<>(p_9180_);
+
          if (portalinfo != null) {
-            serverlevel.m_46473_().m_6180_("moving");
-            if (resourcekey == Level.f_46428_ && p_9180_.m_46472_() == Level.f_46429_) {
-               this.f_8933_ = this.m_20182_();
-            } else if (p_9180_.m_46472_() == Level.f_46430_) {
-               this.m_9006_(p_9180_, BlockPos.m_274446_(portalinfo.f_77676_));
-            }
-
-            serverlevel.m_46473_().m_7238_();
-            serverlevel.m_46473_().m_6180_("placing");
-            this.m_284127_(p_9180_);
-            this.f_8906_.m_9774_(portalinfo.f_77676_.f_82479_, portalinfo.f_77676_.f_82480_, portalinfo.f_77676_.f_82481_, portalinfo.f_77678_, portalinfo.f_77679_);
-            this.f_8906_.m_9953_();
-            p_9180_.m_8817_(this);
-            serverlevel.m_46473_().m_7238_();
-            this.m_9209_(serverlevel);
+            Entity e = teleporter.placeEntity(this, serverlevel, levelRef.get(), this.m_146908_(), spawnPortal -> {//Forge: Start vanilla logic
+               serverlevel.m_46473_().m_6180_("moving");
+               levelRef.set(portalinfo.world); // CraftBukkit
+               if (levelRef.get() == null) { } else // CraftBukkit - empty to fall through to null to event
+                  if (resourcekey == Level.f_46428_ && levelRef.get().m_46472_() == Level.f_46429_) {
+                     this.f_8933_ = this.m_20182_();
+                  } else if ((spawnPortal || (portalinfo.portalEventInfo != null && portalinfo.portalEventInfo.getCanCreatePortal())) && levelRef.get().m_46472_() == Level.f_46430_) { //Ketting - combine bukkit and forge logic
+                     this.m_9006_(levelRef.get(), BlockPos.m_274446_(portalinfo.f_77676_));
+                  }
+
+               // CraftBukkit start
+               org.bukkit.Location enter = this.getBukkitEntity().getLocation();
+               org.bukkit.Location exit = (levelRef.get() == null) ? null : org.bukkit.craftbukkit.v1_20_R2.util.CraftLocation.toBukkit(portalinfo.f_77676_, levelRef.get().getWorld(), portalinfo.f_77678_, portalinfo.f_77679_);
+               org.bukkit.event.player.PlayerTeleportEvent tpEvent = new org.bukkit.event.player.PlayerTeleportEvent(this.getBukkitEntity(), enter, exit, cause);
+               org.bukkit.Bukkit.getServer().getPluginManager().callEvent(tpEvent);
+               if (tpEvent.isCancelled() || tpEvent.getTo() == null) {
+                  return null;
+               }
+               exit = tpEvent.getTo();
+               levelRef.set(((org.bukkit.craftbukkit.v1_20_R2.CraftWorld) exit.getWorld()).getHandle());
+               // CraftBukkit end
+
+               serverlevel.m_46473_().m_7238_();
+               serverlevel.m_46473_().m_6180_("placing");
+               this.f_8927_ = true; // CraftBukkit - Set teleport invulnerability only if player changing worlds
+
+               this.f_8906_.m_141995_(new ClientboundRespawnPacket(this.m_292591_(levelRef.get()), (byte) 3));
+               this.f_8906_.m_141995_(new ClientboundChangeDifficultyPacket(this.m_9236_().m_46791_(), this.m_9236_().m_6106_().m_5474_()));
+
+               playerList.m_11289_(this);
+               serverlevel.m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
+               this.m_146912_();
+
+               // CraftBukkit end
+               this.m_284127_(levelRef.get());
+               this.f_8906_.teleport(exit); // CraftBukkit - use internal teleport without event
+               this.f_8906_.m_9953_();
+               levelRef.get().m_8817_(this);
+               serverlevel.m_46473_().m_7238_();
+               this.m_9209_(serverlevel);
+               return this;//forge: this is part of the ITeleporter patch
+            });//Forge: End vanilla logic
+
+            if (e != this) throw new java.lang.IllegalArgumentException(String.format(java.util.Locale.ENGLISH, "Teleporter %s returned not the player entity but instead %s, expected PlayerEntity %s", teleporter, e, this));
             this.f_8906_.m_141995_(new ClientboundPlayerAbilitiesPacket(this.m_150110_()));
-            playerlist.m_11229_(this, p_9180_);
-            playerlist.m_11292_(this);
+            playerList.m_11229_(this, levelRef.get());
+            playerList.m_11292_(this);
 
             for(MobEffectInstance mobeffectinstance : this.m_21220_()) {
                this.f_8906_.m_141995_(new ClientboundUpdateMobEffectPacket(this.m_19879_(), mobeffectinstance));
             }
 
-            this.f_8906_.m_141995_(new ClientboundLevelEventPacket(1032, BlockPos.f_121853_, 0, false));
+            if (teleporter.playTeleportSound(this, serverlevel, levelRef.get()))
+               this.f_8906_.m_141995_(new ClientboundLevelEventPacket(1032, BlockPos.f_121853_, 0, false));
             this.f_8920_ = -1;
             this.f_8917_ = -1.0F;
             this.f_8918_ = -1;
+            net.minecraftforge.event.ForgeEventFactory.onPlayerChangedDimension(this, resourcekey, levelRef.get().m_46472_());
+
+            // CraftBukkit start
+            org.bukkit.event.player.PlayerChangedWorldEvent changeEvent = new org.bukkit.event.player.PlayerChangedWorldEvent(this.getBukkitEntity(), serverlevel.getWorld());
+            this.m_9236_().getCraftServer().getPluginManager().callEvent(changeEvent);
+            // CraftBukkit end
+         } else {
+            return null;
          }
 
          return this;
       }
    }
+
+   // CraftBukkit start
+   @Override
+   protected org.bukkit.craftbukkit.v1_20_R2.event.CraftPortalEvent callPortalEvent(Entity entity, ServerLevel exitWorldServer, Vec3 exitPosition, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause, int searchRadius, int creationRadius) {
+      org.bukkit.Location enter = this.getBukkitEntity().getLocation();
+      org.bukkit.Location exit = org.bukkit.craftbukkit.v1_20_R2.util.CraftLocation.toBukkit(exitPosition, exitWorldServer.getWorld(), m_146908_(), m_146909_());
+      org.bukkit.event.player.PlayerPortalEvent event = new org.bukkit.event.player.PlayerPortalEvent(this.getBukkitEntity(), enter, exit, cause, searchRadius, true, creationRadius);
+      org.bukkit.Bukkit.getServer().getPluginManager().callEvent(event);
+      if (event.isCancelled() || event.getTo() == null || event.getTo().getWorld() == null) {
+         return null;
+      }
+      return new org.bukkit.craftbukkit.v1_20_R2.event.CraftPortalEvent(event);
+   }
+   // CraftBukkit end
 
    private void m_9006_(ServerLevel p_9007_, BlockPos p_9008_) {
       BlockPos.MutableBlockPos blockpos$mutableblockpos = p_9008_.m_122032_();
+      org.bukkit.craftbukkit.v1_20_R2.util.BlockStateListPopulator blockList = new org.bukkit.craftbukkit.v1_20_R2.util.BlockStateListPopulator(p_9007_); // CraftBukkit
 
       for(int i = -2; i <= 2; ++i) {
          for(int j = -2; j <= 2; ++j) {
             for(int k = -1; k < 3; ++k) {
                BlockState blockstate = k == -1 ? Blocks.f_50080_.m_49966_() : Blocks.f_50016_.m_49966_();
-               p_9007_.m_46597_(blockpos$mutableblockpos.m_122190_(p_9008_).m_122184_(j, k, i), blockstate);
+               blockList.m_7731_(blockpos$mutableblockpos.m_122190_(p_9008_).m_122184_(j, k, i), blockstate, 3); // CraftBukkit
             }
          }
       }
+      // CraftBukkit start - call portal event
+      org.bukkit.event.world.PortalCreateEvent portalEvent = new org.bukkit.event.world.PortalCreateEvent((List<org.bukkit.block.BlockState>) (List) blockList.getList(), p_9007_.getWorld(), this.getBukkitEntity(), org.bukkit.event.world.PortalCreateEvent.CreateReason.END_PLATFORM);
+      p_9007_.getCraftServer().getPluginManager().callEvent(portalEvent);
+      if (!portalEvent.isCancelled()) {
+         blockList.updateList();
+      }
+      // CraftBukkit end
 
    }
 
-   protected Optional<BlockUtil.FoundRectangle> m_183318_(ServerLevel p_184131_, BlockPos p_184132_, boolean p_184133_, WorldBorder p_184134_) {
-      Optional<BlockUtil.FoundRectangle> optional = super.m_183318_(p_184131_, p_184132_, p_184133_, p_184134_);
-      if (optional.isPresent()) {
+   protected Optional<BlockUtil.FoundRectangle> getExitPortal(ServerLevel p_184131_, BlockPos p_184132_, boolean p_184133_, WorldBorder p_184134_, int searchRadius, boolean canCreatePortal, int createRadius) { // CraftBukkit
+      Optional<BlockUtil.FoundRectangle> optional = super.getExitPortal(p_184131_, p_184132_, p_184133_, p_184134_, searchRadius, canCreatePortal, createRadius); // CraftBukkit
+      if (optional.isPresent() || !canCreatePortal) { // CraftBukkit
          return optional;
       } else {
          Direction.Axis direction$axis = this.m_9236_().m_8055_(this.f_19819_).m_61145_(NetherPortalBlock.f_54904_).orElse(Direction.Axis.X);
-         Optional<BlockUtil.FoundRectangle> optional1 = p_184131_.m_8871_().m_77666_(p_184132_, direction$axis);
+         Optional<BlockUtil.FoundRectangle> optional1 = p_184131_.m_8871_().createPortal(p_184132_, direction$axis, this, createRadius); // CraftBukkit
          if (optional1.isEmpty()) {
-            f_8907_.error("Unable to create a portal, likely target out of worldborder");
+            // LOGGER.error("Unable to create a portal, likely target out of worldborder"); // CraftBukkit
          }
 
          return optional1;
@@ -804,12 +_,21 @@
    public void m_9209_(ServerLevel p_9210_) {
       ResourceKey<Level> resourcekey = p_9210_.m_46472_();
       ResourceKey<Level> resourcekey1 = this.m_9236_().m_46472_();
-      CriteriaTriggers.f_10588_.m_19757_(this, resourcekey, resourcekey1);
-      if (resourcekey == Level.f_46429_ && resourcekey1 == Level.f_46428_ && this.f_8933_ != null) {
+      // CraftBukkit start
+      ResourceKey<Level> maindimensionkey = org.bukkit.craftbukkit.v1_20_R2.util.CraftDimensionUtil.getMainDimensionKey(p_9210_);
+      ResourceKey<Level> maindimensionkey1 = org.bukkit.craftbukkit.v1_20_R2.util.CraftDimensionUtil.getMainDimensionKey(this.m_9236_());
+
+      CriteriaTriggers.f_10588_.m_19757_(this, maindimensionkey, maindimensionkey1);
+      if (maindimensionkey != resourcekey || maindimensionkey1 != resourcekey1) {
+         CriteriaTriggers.f_10588_.m_19757_(this, resourcekey, resourcekey1);
+      }
+
+      if (maindimensionkey == Level.f_46429_ && maindimensionkey1 == Level.f_46428_ && this.f_8933_ != null) {
+         // CraftBukkit end
          CriteriaTriggers.f_10552_.m_186165_(this, this.f_8933_);
       }
 
-      if (resourcekey1 != Level.f_46429_) {
+      if (maindimensionkey1 != Level.f_46429_) { // CraftBukkit
          this.f_8933_ = null;
       }
 
@@ -828,32 +_,64 @@
       this.f_36096_.m_38946_();
    }
 
-   public Either<Player.BedSleepingProblem, Unit> m_7720_(BlockPos p_9115_) {
-      Direction direction = this.m_9236_().m_8055_(p_9115_).m_61143_(HorizontalDirectionalBlock.f_54117_);
+   // CraftBukkit start - moved bed result checks from below into separate method
+   private Either<Player.BedSleepingProblem, Unit> getBedResult(BlockPos blockposition, Direction enumdirection) {
       if (!this.m_5803_() && this.m_6084_()) {
-         if (!this.m_9236_().m_6042_().f_63858_()) {
+         if (!this.m_9236_().m_6042_().f_63858_() || !this.m_9236_().m_6042_().f_63862_()) {
             return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_HERE);
-         } else if (!this.m_9116_(p_9115_, direction)) {
+         } else if (!this.m_9116_(blockposition, enumdirection)) {
             return Either.left(Player.BedSleepingProblem.TOO_FAR_AWAY);
-         } else if (this.m_9191_(p_9115_, direction)) {
+         } else if (this.m_9191_(blockposition, enumdirection)) {
             return Either.left(Player.BedSleepingProblem.OBSTRUCTED);
          } else {
-            this.m_9158_(this.m_9236_().m_46472_(), p_9115_, this.m_146908_(), false, true);
+            this.setRespawnPosition(this.m_9236_().m_46472_(), blockposition, this.m_146908_(), false, true, org.bukkit.event.player.PlayerSpawnChangeEvent.Cause.BED); // CraftBukkit
             if (this.m_9236_().m_46461_()) {
                return Either.left(Player.BedSleepingProblem.NOT_POSSIBLE_NOW);
             } else {
                if (!this.m_7500_()) {
                   double d0 = 8.0D;
                   double d1 = 5.0D;
-                  Vec3 vec3 = Vec3.m_82539_(p_9115_);
-                  List<Monster> list = this.m_9236_().m_6443_(Monster.class, new AABB(vec3.m_7096_() - 8.0D, vec3.m_7098_() - 5.0D, vec3.m_7094_() - 8.0D, vec3.m_7096_() + 8.0D, vec3.m_7098_() + 5.0D, vec3.m_7094_() + 8.0D), (p_9062_) -> {
-                     return p_9062_.m_6935_(this);
+                  Vec3 vec3d = Vec3.m_82539_(blockposition);
+                  List<Monster> list = this.m_9236_().m_6443_(Monster.class, new AABB(vec3d.m_7096_() - 8.0D, vec3d.m_7098_() - 5.0D, vec3d.m_7094_() - 8.0D, vec3d.m_7096_() + 8.0D, vec3d.m_7098_() + 5.0D, vec3d.m_7094_() + 8.0D), (entitymonster) -> {
+                     return entitymonster.m_6935_(this);
                   });
                   if (!list.isEmpty()) {
                      return Either.left(Player.BedSleepingProblem.NOT_SAFE);
                   }
                }
 
+               return Either.right(Unit.INSTANCE);
+            }
+         }
+      } else {
+         return Either.left(Player.BedSleepingProblem.OTHER_PROBLEM);
+      }
+   }
+
+   public Either<Player.BedSleepingProblem, Unit> startSleepInBed(BlockPos p_9115_, boolean force) {
+      var optAt = java.util.Optional.of(p_9115_);
+      var ret = net.minecraftforge.event.ForgeEventFactory.onPlayerSleepInBed(this, optAt);
+      if (ret != null) return Either.left(ret);
+
+      Direction direction = this.m_9236_().m_8055_(p_9115_).m_61143_(HorizontalDirectionalBlock.f_54117_);
+      Either<Player.BedSleepingProblem, Unit> bedResult = this.getBedResult(p_9115_, direction);
+
+      if (bedResult.left().orElse(null) == Player.BedSleepingProblem.OTHER_PROBLEM) {
+         return bedResult; // return immediately if the result is not bypassable by plugins
+      }
+
+      if (force) {
+         bedResult = Either.right(Unit.INSTANCE);
+      }
+
+      bedResult = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerBedEnterEvent(this, p_9115_, bedResult);
+      if (bedResult.left().isPresent()) {
+         return bedResult;
+      }
+
+      {
+         {
+            {
                Either<Player.BedSleepingProblem, Unit> either = super.m_7720_(p_9115_).ifRight((p_9029_) -> {
                   this.m_36220_(Stats.f_12969_);
                   CriteriaTriggers.f_10583_.m_222618_(this);
@@ -866,9 +_,8 @@
                return either;
             }
          }
-      } else {
-         return Either.left(Player.BedSleepingProblem.OTHER_PROBLEM);
       }
+      // CraftBukkit end
    }
 
    public void m_5802_(BlockPos p_9190_) {
@@ -877,6 +_,7 @@
    }
 
    private boolean m_9116_(BlockPos p_9117_, Direction p_9118_) {
+      if (p_9118_ == null) return false;
       return this.m_9222_(p_9117_) || this.m_9222_(p_9117_.m_121945_(p_9118_.m_122424_()));
    }
 
@@ -891,13 +_,31 @@
    }
 
    public void m_6145_(boolean p_9165_, boolean p_9166_) {
+      if (!this.m_5803_()) return; // CraftBukkit - Can't leave bed if not in one!
+      // CraftBukkit start - fire PlayerBedLeaveEvent
+      org.bukkit.craftbukkit.v1_20_R2.entity.CraftPlayer player = this.getBukkitEntity();
+      BlockPos bedPosition = this.m_21257_().orElse(null);
+
+      org.bukkit.block.Block bed;
+      if (bedPosition != null) {
+         bed = this.m_9236_().getWorld().getBlockAt(bedPosition.m_123341_(), bedPosition.m_123342_(), bedPosition.m_123343_());
+      } else {
+         bed = this.m_9236_().getWorld().getBlockAt(player.getLocation());
+      }
+
+      org.bukkit.event.player.PlayerBedLeaveEvent event = new org.bukkit.event.player.PlayerBedLeaveEvent(player, bed, true);
+      this.m_9236_().getCraftServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      // CraftBukkit end
       if (this.m_5803_()) {
          this.m_284548_().m_7726_().m_8394_(this, new ClientboundAnimatePacket(this, 2));
       }
 
       super.m_6145_(p_9165_, p_9166_);
       if (this.f_8906_ != null) {
-         this.f_8906_.m_9774_(this.m_20185_(), this.m_20186_(), this.m_20189_(), this.m_146908_(), this.m_146909_());
+         this.f_8906_.teleport(this.m_20185_(), this.m_20186_(), this.m_20189_(), this.m_146908_(), this.m_146909_(), org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.EXIT_BED); // CraftBukkit
       }
 
    }
@@ -938,16 +_,46 @@
       this.f_8940_ = this.f_8940_ % 100 + 1;
    }
 
+   //Ketting start
+   public int nextContainerCounterInt() {
+      m_9217_();
+      return f_8940_;
+   }
+   //Ketting end
+
    public OptionalInt m_5893_(@Nullable MenuProvider p_9033_) {
       if (p_9033_ == null) {
          return OptionalInt.empty();
       } else {
-         if (this.f_36096_ != this.f_36095_) {
-            this.m_6915_();
+         // CraftBukkit start - SPIGOT-6552: Handle inventory closing in CraftEventFactory#callInventoryOpenEvent(...)
+         /*
+         if (this.containerMenu != this.inventoryMenu) {
+            this.closeContainer();
          }
+         */
+         // CraftBukkit end
 
          this.m_9217_();
          AbstractContainerMenu abstractcontainermenu = p_9033_.m_7208_(this.f_8940_, this.m_150109_(), this);
+
+         // CraftBukkit start - Inventory open hook
+         if (abstractcontainermenu != null) {
+            abstractcontainermenu.setTitle(p_9033_.m_5446_());
+
+            boolean cancelled = false;
+            abstractcontainermenu = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callInventoryOpenEvent(this, abstractcontainermenu, cancelled);
+            if (abstractcontainermenu == null && !cancelled) { // Let pre-cancelled events fall through
+               // SPIGOT-5263 - close chest if cancelled
+               if (p_9033_ instanceof Container) {
+                  ((Container) p_9033_).m_5785_(this);
+               } else if (p_9033_ instanceof net.minecraft.world.level.block.ChestBlock.DoubleInventory) {
+                  // SPIGOT-5355 - double chests too :(
+                  ((net.minecraft.world.level.block.ChestBlock.DoubleInventory) p_9033_).inventorylargechest.m_5785_(this);
+               }
+               return OptionalInt.empty();
+            }
+         }
+         // CraftBukkit end
          if (abstractcontainermenu == null) {
             if (this.m_5833_()) {
                this.m_5661_(Component.m_237115_("container.spectatorCantOpen").m_130940_(ChatFormatting.RED), true);
@@ -955,9 +_,13 @@
 
             return OptionalInt.empty();
          } else {
-            this.f_8906_.m_141995_(new ClientboundOpenScreenPacket(abstractcontainermenu.f_38840_, abstractcontainermenu.m_6772_(), p_9033_.m_5446_()));
-            this.m_143399_(abstractcontainermenu);
+            // CraftBukkit start
             this.f_36096_ = abstractcontainermenu;
+            this.f_8906_.m_141995_(new ClientboundOpenScreenPacket(abstractcontainermenu.f_38840_, abstractcontainermenu.m_6772_(), abstractcontainermenu.getTitle()));
+            // CraftBukkit end
+
+            this.m_143399_(abstractcontainermenu);
+            net.minecraftforge.event.ForgeEventFactory.onPlayerOpenContainer(this, this.f_36096_);
             return OptionalInt.of(this.f_8940_);
          }
       }
@@ -968,14 +_,26 @@
    }
 
    public void m_6658_(AbstractHorse p_9059_, Container p_9060_) {
-      if (this.f_36096_ != this.f_36095_) {
-         this.m_6915_();
-      }
-
+      // CraftBukkit start - Inventory open hook
       this.m_9217_();
+      AbstractContainerMenu container = new HorseInventoryMenu(this.f_8940_, this.m_150109_(), p_9060_, p_9059_);
+      container.setTitle(p_9059_.m_5446_());
+      container = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callInventoryOpenEvent(this, container);
+
+      if (container == null) {
+         p_9060_.m_5785_(this);
+         return;
+      }
+      // CraftBukkit end
+      if (this.f_36096_ != this.f_36095_) {
+         this.m_6915_();
+      }
+
+      // this.nextContainerCounter(); // CraftBukkit - moved up
       this.f_8906_.m_141995_(new ClientboundHorseScreenOpenPacket(this.f_8940_, p_9060_.m_6643_(), p_9059_.m_19879_()));
-      this.f_36096_ = new HorseInventoryMenu(this.f_8940_, this.m_150109_(), p_9060_, p_9059_);
+      this.f_36096_ = container; // CraftBukkit
       this.m_143399_(this.f_36096_);
+      net.minecraftforge.event.ForgeEventFactory.onPlayerOpenContainer(this, this.f_36096_);
    }
 
    public void m_6986_(ItemStack p_9082_, InteractionHand p_9083_) {
@@ -994,6 +_,7 @@
    }
 
    public void m_6915_() {
+      org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleInventoryCloseEvent(this); // CraftBukkit
       this.f_8906_.m_141995_(new ClientboundContainerClosePacket(this.f_36096_.f_38840_));
       this.m_9230_();
    }
@@ -1001,6 +_,7 @@
    public void m_9230_() {
       this.f_36096_.m_6877_(this);
       this.f_36095_.m_150414_(this.f_36096_);
+      net.minecraftforge.event.ForgeEventFactory.onPlayerCloseContainer(this, this.f_36096_);
       this.f_36096_ = this.f_36095_;
    }
 
@@ -1015,6 +_,16 @@
          }
 
          this.f_20899_ = p_8983_;
+         // CraftBukkit start
+         if (p_8984_ != this.m_6144_()) {
+            org.bukkit.event.player.PlayerToggleSneakEvent event = new org.bukkit.event.player.PlayerToggleSneakEvent(this.getBukkitEntity(), p_8984_);
+            this.f_8924_.server.getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+               return;
+            }
+         }
+         // CraftBukkit end
          this.m_20260_(p_8984_);
       }
 
@@ -1022,14 +_,14 @@
 
    public void m_6278_(Stat<?> p_9026_, int p_9027_) {
       this.f_8910_.m_13023_(this, p_9026_, p_9027_);
-      this.m_36329_().m_83427_(p_9026_, this.m_6302_(), (p_8996_) -> {
+      this.m_9236_().getCraftServer().getScoreboardManager().getScoreboardScores(p_9026_, this.m_6302_(), (p_8996_) -> { // CraftBukkit - Get our scores instead
          p_8996_.m_83393_(p_9027_);
       });
    }
 
    public void m_7166_(Stat<?> p_9024_) {
       this.f_8910_.m_6085_(this, p_9024_, 0);
-      this.m_36329_().m_83427_(p_9024_, this.m_6302_(), Score::m_83401_);
+      this.m_9236_().getCraftServer().getScoreboardManager().getScoreboardScores(p_9024_, this.m_6302_(), Score::m_83401_); // CraftBukkit - Get our scores instead
    }
 
    public int m_7281_(Collection<RecipeHolder<?>> p_9129_) {
@@ -1074,6 +_,7 @@
 
    public void m_9233_() {
       this.f_8917_ = -1.0E8F;
+      this.f_8920_ = -1; // CraftBukkit - Added to reset
    }
 
    public void m_5661_(Component p_9154_, boolean p_9155_) {
@@ -1121,19 +_,36 @@
          this.m_36397_(p_9016_.m_36344_());
       }
 
+      //Ketting start - copy over the forge captures
+      Inventory forgeCaptures = p_9016_.getForgeCapturesAndClear();
+      if (forgeCaptures != null)
+         forgeCaptures.f_35974_.stream().filter(item -> !item.m_41619_()).forEach(item -> this.m_150109_().m_36054_(item));
+
+      this.m_150109_().m_6596_();
+      //Ketting end
+
       this.f_36081_ = p_9016_.f_36081_;
       this.f_36094_ = p_9016_.f_36094_;
       this.m_20088_().m_135381_(f_36089_, p_9016_.m_20088_().m_135370_(f_36089_));
       this.f_8920_ = -1;
       this.f_8917_ = -1.0F;
       this.f_8918_ = -1;
-      this.f_8929_.m_12685_(p_9016_.f_8929_);
+      // this.recipeBook.copyOverData(p_9016_.recipeBook); // CraftBukkit
       this.f_8928_ = p_9016_.f_8928_;
       this.f_8933_ = p_9016_.f_8933_;
       this.f_290780_ = p_9016_.f_290780_;
       this.m_36362_(p_9016_.m_36331_());
       this.m_36364_(p_9016_.m_36332_());
       this.m_219749_(p_9016_.m_219759_());
+
+      //Copy over a section of the Entity Data from the old player.
+      //Allows mods to specify data that persists after players respawn.
+      CompoundTag old = p_9016_.getPersistentData();
+      if (old.m_128441_(PERSISTED_NBT_TAG))
+          getPersistentData().m_128365_(PERSISTED_NBT_TAG, old.m_128423_(PERSISTED_NBT_TAG));
+      net.minecraftforge.event.ForgeEventFactory.onPlayerClone(this, p_9016_, !p_9017_);
+      this.tabListHeader = p_9016_.tabListHeader;
+      this.tabListFooter = p_9016_.tabListFooter;
    }
 
    protected void m_142540_(MobEffectInstance p_143393_, @Nullable Entity p_143394_) {
@@ -1172,6 +_,12 @@
    }
 
    public boolean m_264318_(ServerLevel p_265564_, double p_265424_, double p_265680_, double p_265312_, Set<RelativeMovement> p_265192_, float p_265059_, float p_265266_) {
+      // CraftBukkit start
+      return teleportTo(p_265564_, p_265424_, p_265680_, p_265312_, p_265192_, p_265059_, p_265266_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   public boolean teleportTo(ServerLevel p_265564_, double p_265424_, double p_265680_, double p_265312_, Set<RelativeMovement> p_265192_, float p_265059_, float p_265266_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      // CraftBukkit end
       ChunkPos chunkpos = new ChunkPos(BlockPos.m_274561_(p_265424_, p_265680_, p_265312_));
       p_265564_.m_7726_().m_8387_(TicketType.f_9448_, chunkpos, 1, this.m_19879_());
       this.m_8127_();
@@ -1180,9 +_,9 @@
       }
 
       if (p_265564_ == this.m_9236_()) {
-         this.f_8906_.m_9780_(p_265424_, p_265680_, p_265312_, p_265059_, p_265266_, p_265192_);
+         this.f_8906_.teleport(p_265424_, p_265680_, p_265312_, p_265059_, p_265266_, p_265192_, cause); // CraftBukkit
       } else {
-         this.m_8999_(p_265564_, p_265424_, p_265680_, p_265312_, p_265059_, p_265266_);
+         this.teleportTo(p_265564_, p_265424_, p_265680_, p_265312_, p_265059_, p_265266_, cause); // CraftBukkit
       }
 
       this.m_5616_(p_265059_);
@@ -1214,6 +_,7 @@
    }
 
    public boolean m_143403_(GameType p_143404_) {
+      p_143404_ = net.minecraftforge.common.ForgeHooks.onChangeGameType(this, this.f_8941_.m_9290_(), p_143404_);
       if (!this.f_8941_.m_143473_(p_143404_)) {
          return false;
       } else {
@@ -1275,6 +_,16 @@
    }
 
    public void m_9156_(ClientInformation p_297843_) {
+      // CraftBukkit start
+      if (m_5737_() != p_297843_.f_291270_()) {
+         org.bukkit.event.player.PlayerChangedMainHandEvent event = new org.bukkit.event.player.PlayerChangedMainHandEvent(getBukkitEntity(), m_5737_() == HumanoidArm.LEFT ? org.bukkit.inventory.MainHand.LEFT : org.bukkit.inventory.MainHand.RIGHT);
+         this.f_8924_.server.getPluginManager().callEvent(event);
+      }
+      if (!this.f_290755_.equals(p_297843_.f_290932_())) {
+         org.bukkit.event.player.PlayerLocaleChangeEvent event = new org.bukkit.event.player.PlayerLocaleChangeEvent(getBukkitEntity(), p_297843_.f_290932_());
+         this.f_8924_.server.getPluginManager().callEvent(event);
+      }
+      // CraftBukkit end
       this.f_290755_ = p_297843_.f_290932_();
       this.f_291772_ = p_297843_.f_291199_();
       this.f_8922_ = p_297843_.f_291339_();
@@ -1348,11 +_,13 @@
    public void m_9213_(@Nullable Entity p_9214_) {
       Entity entity = this.m_8954_();
       this.f_8926_ = (Entity)(p_9214_ == null ? this : p_9214_);
+      while (this.f_8926_ instanceof net.minecraftforge.entity.PartEntity<?> partEntity)
+         this.f_8926_ = partEntity.getParent(); // FORGE: fix MC-46486
       if (entity != this.f_8926_) {
          Level level = this.f_8926_.m_9236_();
          if (level instanceof ServerLevel) {
             ServerLevel serverlevel = (ServerLevel)level;
-            this.m_264318_(serverlevel, this.f_8926_.m_20185_(), this.f_8926_.m_20186_(), this.f_8926_.m_20189_(), Set.of(), this.m_146908_(), this.m_146909_());
+            this.teleportTo(serverlevel, this.f_8926_.m_20185_(), this.f_8926_.m_20186_(), this.f_8926_.m_20189_(), Set.of(), this.m_146908_(), this.m_146909_(), org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.SPECTATE); // CraftBukkit
          }
 
          if (p_9214_ != null) {
@@ -1387,7 +_,11 @@
 
    @Nullable
    public Component m_8957_() {
-      return null;
+      if (!this.hasTabListName) {
+         this.tabListDisplayName = net.minecraftforge.event.ForgeEventFactory.getPlayerTabListDisplayName(this);
+         this.hasTabListName = true;
+      }
+      return this.tabListDisplayName;
    }
 
    public void m_6674_(InteractionHand p_9031_) {
@@ -1407,27 +_,39 @@
       return this.f_8909_;
    }
 
+   // CraftBukkit start
    public void m_8999_(ServerLevel p_9000_, double p_9001_, double p_9002_, double p_9003_, float p_9004_, float p_9005_) {
+      this.teleportTo(p_9000_, p_9001_, p_9002_, p_9003_, p_9004_, p_9005_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   public void teleportTo(ServerLevel p_9000_, double p_9001_, double p_9002_, double p_9003_, float p_9004_, float p_9005_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      // CraftBukkit end
       this.m_9213_(this);
       this.m_8127_();
-      if (p_9000_ == this.m_9236_()) {
-         this.f_8906_.m_9774_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
-      } else {
-         ServerLevel serverlevel = this.m_284548_();
-         LevelData leveldata = p_9000_.m_6106_();
-         this.f_8906_.m_141995_(new ClientboundRespawnPacket(this.m_292591_(p_9000_), (byte)3));
-         this.f_8906_.m_141995_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
-         this.f_8924_.m_6846_().m_11289_(this);
-         serverlevel.m_143261_(this, Entity.RemovalReason.CHANGED_DIMENSION);
-         this.m_146912_();
-         this.m_7678_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
-         this.m_284127_(p_9000_);
-         p_9000_.m_8622_(this);
-         this.m_9209_(serverlevel);
-         this.f_8906_.m_9774_(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
-         this.f_8924_.m_6846_().m_11229_(this, p_9000_);
-         this.f_8924_.m_6846_().m_11292_(this);
+      /* CraftBukkit start - replace with bukkit handling for multi-world
+      if (p_9000_ == this.level()) {
+         this.connection.teleport(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
+      } else if (!net.minecraftforge.event.ForgeEventFactory.onTravelToDimension(this, p_9000_.dimension())) {
+         ServerLevel serverlevel = this.serverLevel();
+         LevelData leveldata = p_9000_.getLevelData();
+         this.connection.send(new ClientboundRespawnPacket(this.createCommonSpawnInfo(p_9000_), (byte)3));
+         this.connection.send(new ClientboundChangeDifficultyPacket(leveldata.getDifficulty(), leveldata.isDifficultyLocked()));
+         this.server.getPlayerList().sendPlayerPermissionLevel(this);
+         serverlevel.removePlayerImmediately(this, Entity.RemovalReason.CHANGED_DIMENSION);
+         this.revive();
+         this.moveTo(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
+         this.setServerLevel(p_9000_);
+         p_9000_.addDuringCommandTeleport(this);
+         this.triggerDimensionChangeTriggers(serverlevel);
+         this.connection.teleport(p_9001_, p_9002_, p_9003_, p_9004_, p_9005_);
+         this.gameMode.setLevel(p_9000_);
+         this.server.getPlayerList().sendLevelInfo(this, p_9000_);
+         this.server.getPlayerList().sendAllPlayerInfo(this);
+         net.minecraftforge.event.ForgeEventFactory.onPlayerChangedDimension(this, serverlevel.dimension(), p_9000_.dimension());
       }
+      */
+      this.getBukkitEntity().teleport(new org.bukkit.Location(p_9000_.getWorld(), p_9001_, p_9002_, p_9003_, p_9004_, p_9005_), cause);
+      // CraftBukkit end
 
    }
 
@@ -1449,6 +_,35 @@
    }
 
    public void m_9158_(ResourceKey<Level> p_9159_, @Nullable BlockPos p_9160_, float p_9161_, boolean p_9162_, boolean p_9163_) {
+      // CraftBukkit start
+      this.setRespawnPosition(p_9159_, p_9160_, p_9161_, p_9162_, p_9163_, org.bukkit.event.player.PlayerSpawnChangeEvent.Cause.UNKNOWN);
+   }
+
+   public void setRespawnPosition(ResourceKey<Level> p_9159_, @Nullable BlockPos p_9160_, float p_9161_, boolean p_9162_, boolean p_9163_, org.bukkit.event.player.PlayerSpawnChangeEvent.Cause cause) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPlayerSpawnSet(this, p_9160_ == null ? Level.f_46428_ : p_9159_, p_9160_, p_9162_))
+         return;
+
+      ServerLevel newWorld = this.f_8924_.m_129880_(p_9159_);
+      org.bukkit.Location newSpawn = (p_9160_ != null) ? org.bukkit.craftbukkit.v1_20_R2.util.CraftLocation.toBukkit(p_9160_, newWorld.getWorld(), p_9161_, 0) : null;
+
+      org.bukkit.event.player.PlayerSpawnChangeEvent event = new org.bukkit.event.player.PlayerSpawnChangeEvent(this.getBukkitEntity(), newSpawn, p_9162_, cause);
+      org.bukkit.Bukkit.getServer().getPluginManager().callEvent(event);
+      if (event.isCancelled()) {
+         return;
+      }
+      newSpawn = event.getNewSpawn();
+      p_9162_ = event.isForced();
+
+      if (newSpawn != null) {
+         p_9159_ = ((org.bukkit.craftbukkit.v1_20_R2.CraftWorld) newSpawn.getWorld()).getHandle().m_46472_();
+         p_9160_ = BlockPos.m_274561_(newSpawn.getX(), newSpawn.getY(), newSpawn.getZ());
+         p_9161_ = newSpawn.getYaw();
+      } else {
+         p_9159_ = Level.f_46428_;
+         p_9160_ = null;
+         p_9161_ = 0.0F;
+      }
+      // CraftBukkit end
       if (p_9160_ != null) {
          boolean flag = p_9160_.equals(this.f_8936_) && p_9159_.equals(this.f_8935_);
          if (p_9163_ && !flag) {
@@ -1493,6 +_,9 @@
       if (itementity == null) {
          return null;
       } else {
+         if (captureDrops() != null)
+            captureDrops().add(itementity);
+         else
          this.m_9236_().m_7967_(itementity);
          ItemStack itemstack = itementity.m_32055_();
          if (p_9087_) {
@@ -1507,6 +_,75 @@
       }
    }
 
+   /**
+    * Returns the language last reported by the player as their local language.
+    * Defaults to en_us if the value is unknown.
+    */
+   public String getLanguage() {
+      return this.f_290755_;
+   }
+
+   private Component tabListHeader = Component.m_237119_();
+   private Component tabListFooter = Component.m_237119_();
+
+   public Component getTabListHeader() {
+       return this.tabListHeader;
+   }
+
+   /**
+    * Set the tab list header while preserving the footer.
+    *
+    * @param header the new header, or {@link Component#empty()} to clear
+    */
+   public void setTabListHeader(final Component header) {
+       this.setTabListHeaderFooter(header, this.tabListFooter);
+   }
+
+   public Component getTabListFooter() {
+       return this.tabListFooter;
+   }
+
+   /**
+    * Set the tab list footer while preserving the header.
+    *
+    * @param footer the new footer, or {@link Component#empty()} to clear
+    */
+   public void setTabListFooter(final Component footer) {
+       this.setTabListHeaderFooter(this.tabListHeader, footer);
+   }
+
+   /**
+    * Set the tab list header and footer at once.
+    *
+    * @param header the new header, or {@link Component#empty()} to clear
+    * @param footer the new footer, or {@link Component#empty()} to clear
+    */
+   public void setTabListHeaderFooter(final Component header, final Component footer) {
+       if (java.util.Objects.equals(header, this.tabListHeader)
+           && java.util.Objects.equals(footer, this.tabListFooter)) {
+           return;
+       }
+
+       this.tabListHeader = java.util.Objects.requireNonNull(header, "header");
+       this.tabListFooter = java.util.Objects.requireNonNull(footer, "footer");
+
+       this.f_8906_.m_141995_(new net.minecraft.network.protocol.game.ClientboundTabListPacket(header, footer));
+   }
+
+   // We need this as tablistDisplayname may be null even if the event was fired.
+   public boolean hasTabListName = false;
+   public Component tabListDisplayName = null;
+   /**
+    * Force the name displayed in the tab list to refresh, by firing {@link net.minecraftforge.event.entity.player.PlayerEvent.TabListNameFormat}.
+    */
+   public void refreshTabListName() {
+      Component oldName = this.tabListDisplayName;
+      this.tabListDisplayName = net.minecraftforge.event.ForgeEventFactory.getPlayerTabListDisplayName(this);
+      if (!java.util.Objects.equals(oldName, this.tabListDisplayName)) {
+         this.m_20194_().m_6846_().m_11268_(new net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket(net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket.Action.UPDATE_DISPLAY_NAME, this));
+      }
+   }
+
    public TextFilter m_8967_() {
       return this.f_8939_;
    }
@@ -1566,11 +_,14 @@
 
    public boolean m_182294_(boolean p_182295_) {
       Inventory inventory = this.m_150109_();
+      ItemStack selected = inventory.m_36056_();
+      if (selected.m_41619_() || !selected.onDroppedByPlayer(this)) return false;
+      if (m_6117_() && m_7655_() == InteractionHand.MAIN_HAND && (p_182295_ || selected.m_41613_() == 1)) m_5810_(); // Forge: fix MC-231097 on the serverside
       ItemStack itemstack = inventory.m_182403_(p_182295_);
       this.f_36096_.m_182417_(inventory, inventory.f_35977_).ifPresent((p_287377_) -> {
          this.f_36096_.m_150404_(p_287377_, inventory.m_36056_());
       });
-      return this.m_7197_(itemstack, false, true) != null;
+      return net.minecraftforge.common.ForgeHooks.onPlayerTossEvent(this, itemstack, true) != null;
    }
 
    public boolean m_184128_() {
@@ -1636,4 +_,146 @@
    public CommonPlayerSpawnInfo m_292591_(ServerLevel p_301182_) {
       return new CommonPlayerSpawnInfo(p_301182_.m_220362_(), p_301182_.m_46472_(), BiomeManager.m_47877_(p_301182_.m_7328_()), this.f_8941_.m_9290_(), this.f_8941_.m_9293_(), p_301182_.m_46659_(), p_301182_.m_8584_(), this.m_219759_(), this.m_287157_());
    }
+
+   // CraftBukkit start - Add per-player time and weather.
+   public long timeOffset = 0;
+   public boolean relativeTime = true;
+
+   public long getPlayerTime() {
+      if (this.relativeTime) {
+         // Adds timeOffset to the current server time.
+         return this.m_9236_().m_46468_() + this.timeOffset;
+      } else {
+         // Adds timeOffset to the beginning of this day.
+         return this.m_9236_().m_46468_() - (this.m_9236_().m_46468_() % 24000) + this.timeOffset;
+      }
+   }
+
+   public org.bukkit.WeatherType weather = null;
+
+   public org.bukkit.WeatherType getPlayerWeather() {
+      return this.weather;
+   }
+
+   public void setPlayerWeather(org.bukkit.WeatherType type, boolean plugin) {
+      if (!plugin && this.weather != null) {
+         return;
+      }
+
+      if (plugin) {
+         this.weather = type;
+      }
+
+      if (type == org.bukkit.WeatherType.DOWNFALL) {
+         this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132155_, 0));
+      } else {
+         this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132154_, 0));
+      }
+   }
+
+   private float pluginRainPosition;
+   private float pluginRainPositionPrevious;
+
+   public void updateWeather(float oldRain, float newRain, float oldThunder, float newThunder) {
+      if (this.weather == null) {
+         // Vanilla
+         if (oldRain != newRain) {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, newRain));
+         }
+      } else {
+         // Plugin
+         if (pluginRainPositionPrevious != pluginRainPosition) {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, pluginRainPosition));
+         }
+      }
+
+      if (oldThunder != newThunder) {
+         if (weather == org.bukkit.WeatherType.DOWNFALL || weather == null) {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, newThunder));
+         } else {
+            this.f_8906_.m_141995_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, 0));
+         }
+      }
+   }
+
+   public void tickWeather() {
+      if (this.weather == null) return;
+
+      pluginRainPositionPrevious = pluginRainPosition;
+      if (weather == org.bukkit.WeatherType.DOWNFALL) {
+         pluginRainPosition += 0.01;
+      } else {
+         pluginRainPosition -= 0.01;
+      }
+
+      pluginRainPosition = Mth.m_14036_(pluginRainPosition, 0.0F, 1.0F);
+   }
+
+   public void resetPlayerWeather() {
+      this.weather = null;
+      this.setPlayerWeather(this.m_9236_().m_6106_().m_6533_() ? org.bukkit.WeatherType.DOWNFALL : org.bukkit.WeatherType.CLEAR, false);
+   }
+
+   @Override
+   public String toString() {
+      return super.toString() + "(" + this.m_6302_() + " at " + this.m_20185_() + "," + this.m_20186_() + "," + this.m_20189_() + ")";
+   }
+
+   // SPIGOT-1903, MC-98153
+   public void forceSetPositionRotation(double x, double y, double z, float yaw, float pitch) {
+      this.m_7678_(x, y, z, yaw, pitch);
+      this.f_8906_.m_9953_();
+   }
+
+   @Override
+   public boolean m_6107_() {
+      return super.m_6107_() || !getBukkitEntity().isOnline();
+   }
+
+   @Override
+   public net.minecraft.world.scores.Scoreboard m_36329_() {
+      return getBukkitEntity().getScoreboard().getHandle();
+   }
+
+   public void reset() {
+      float exp = 0;
+      boolean keepInventory = this.m_9236_().m_46469_().m_46207_(GameRules.f_46133_);
+
+      if (this.keepLevel) { // CraftBukkit - SPIGOT-6687: Only use keepLevel (was pre-set with RULE_KEEPINVENTORY value in PlayerDeathEvent)
+         exp = this.f_36080_;
+         this.newTotalExp = this.f_36079_;
+         this.newLevel = this.f_36078_;
+      }
+
+      this.m_21153_(this.m_21233_());
+      this.m_5810_(); // CraftBukkit - SPIGOT-6682: Clear active item on reset
+      this.m_7311_(0);
+      this.f_19789_ = 0;
+      this.f_36097_ = new net.minecraft.world.food.FoodData(this);
+      this.f_36078_ = this.newLevel;
+      this.f_36079_ = this.newTotalExp;
+      this.f_36080_ = 0;
+      this.f_20919_ = 0;
+      this.setArrowCount(0, true); // CraftBukkit - ArrowBodyCountChangeEvent
+      this.removeAllEffects(org.bukkit.event.entity.EntityPotionEffectEvent.Cause.DEATH);
+      this.f_20948_ = true;
+      this.f_36096_ = this.f_36095_;
+      this.f_20888_ = null;
+      this.f_20949_ = null;
+      this.f_20944_ = new net.minecraft.world.damagesource.CombatTracker(this);
+      this.f_8920_ = -1;
+      if (this.keepLevel) { // CraftBukkit - SPIGOT-6687: Only use keepLevel (was pre-set with RULE_KEEPINVENTORY value in PlayerDeathEvent)
+         this.f_36080_ = exp;
+      } else {
+         this.m_6756_(this.newExp);
+      }
+      this.keepLevel = false;
+      this.m_20334_(0, 0, 0); // CraftBukkit - SPIGOT-6948: Reset velocity on death
+   }
+
+   @Override
+   public org.bukkit.craftbukkit.v1_20_R2.entity.CraftPlayer getBukkitEntity() {
+      return (org.bukkit.craftbukkit.v1_20_R2.entity.CraftPlayer) super.getBukkitEntity();
+   }
+   // CraftBukkit end
 }

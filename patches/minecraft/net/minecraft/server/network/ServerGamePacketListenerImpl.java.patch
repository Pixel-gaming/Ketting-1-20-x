--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -185,6 +_,12 @@
 public class ServerGamePacketListenerImpl implements ServerPlayerConnection, TickablePacketListener, ServerGamePacketListener {
    static final Logger f_9744_ = LogUtils.getLogger();
    private static final int f_143608_ = 15000;
+   /**
+    * Forge: Deprecated in favor of range/reach attributes.
+    * @see net.minecraftforge.common.ForgeMod#BLOCK_REACH
+    * @see net.minecraftforge.common.ForgeMod#ENTITY_REACH
+    */
+   @Deprecated
    public static final double f_215198_ = Mth.m_144952_(6.0D);
    private static final int f_215199_ = -1;
    private static final int f_244471_ = 4096;
@@ -187,7 +_,9 @@
    public final PlayerChunkSender f_290664_;
    private int f_9746_;
    private int f_215200_ = -1;
-   private int f_9750_;
+   // CraftBukkit start - multithreaded fields
+   private final java.util.concurrent.atomic.AtomicInteger f_9750_ = new java.util.concurrent.atomic.AtomicInteger();
+   // CraftBukkit end
    private int f_9751_;
    private double f_9753_;
    private double f_9754_;
@@ -223,17 +_,35 @@
    private boolean f_290343_;
 
    public ServerGamePacketListenerImpl(MinecraftServer p_9770_, Connection p_9771_, ServerPlayer p_9772_, CommonListenerCookie p_300908_) {
-      super(p_9770_, p_9771_, p_300908_);
+      super(p_9770_, p_9771_, p_300908_, p_9772_); // CraftBukkit
       this.f_290664_ = new PlayerChunkSender(p_9771_.m_129531_());
       p_9771_.m_129505_(this);
       this.f_9743_ = p_9772_;
       p_9772_.f_8906_ = this;
       p_9772_.m_8967_().m_7674_();
       this.f_240889_ = p_9770_.m_214005_() ? SignedMessageChain.Decoder.f_252472_ : SignedMessageChain.Decoder.m_246683_(p_9772_.m_20148_());
-      this.f_241681_ = new FutureChain(p_9770_);
+      this.f_241681_ = new FutureChain(p_9770_.chatExecutor); // CraftBukkit - async chat
    }
+
+   // CraftBukkit start - add fields
+   private int lastTick = MinecraftServer.currentTick;
+   private int allowedPlayerTicks = 1;
+   private int lastDropTick = MinecraftServer.currentTick;
+   private int lastBookTick  = MinecraftServer.currentTick;
+   private int dropCount = 0;
+
+   // Get position of last block hit for BlockDamageLevel.STOPPED
+   private double lastPosX = Double.MAX_VALUE;
+   private double lastPosY = Double.MAX_VALUE;
+   private double lastPosZ = Double.MAX_VALUE;
+   private float lastPitch = Float.MAX_VALUE;
+   private float lastYaw = Float.MAX_VALUE;
+   private boolean justTeleported = false;
+   private boolean hasMoved; // Spigot
+   // CraftBukkit end
 
    public void m_9933_() {
+      org.bukkit.craftbukkit.v1_20_R2.SpigotTimings.playerConnectionTimer.startTiming(); // Spigot
       if (this.f_215200_ > -1) {
          this.m_141995_(new ClientboundBlockChangedAckPacket(this.f_215200_));
          this.f_215200_ = -1;
@@ -283,17 +_,24 @@
       }
 
       this.m_295188_();
-      if (this.f_9750_ > 0) {
-         --this.f_9750_;
+      // CraftBukkit start
+      for (int spam; (spam = this.f_9750_.get()) > 0 && !f_9750_.compareAndSet(spam, spam - 1); ) ;
+      /* Use thread-safe field access instead
+      if (this.chatSpamTickCount > 0) {
+         --this.chatSpamTickCount;
       }
+      */
+      // CraftBukkit end
 
       if (this.f_9751_ > 0) {
          --this.f_9751_;
       }
 
       if (this.f_9743_.m_8956_() > 0L && this.f_291389_.m_129924_() > 0 && Util.m_137550_() - this.f_9743_.m_8956_() > (long)this.f_291389_.m_129924_() * 1000L * 60L) {
+         this.f_9743_.m_9243_(); // CraftBukkit - SPIGOT-854
          this.m_294716_(Component.m_237115_("multiplayer.disconnect.idling"));
       }
+      org.bukkit.craftbukkit.v1_20_R2.SpigotTimings.playerConnectionTimer.stopTiming(); // Spigot
 
    }
 
@@ -379,7 +_,34 @@
             double d8 = d5 - this.f_9762_;
             double d9 = entity.m_20184_().m_82556_();
             double d10 = d6 * d6 + d7 * d7 + d8 * d8;
-            if (d10 - d9 > 100.0D && !this.m_293330_()) {
+
+            // CraftBukkit start - handle custom speeds and skipped ticks
+            this.allowedPlayerTicks += (System.currentTimeMillis() / 50) - this.lastTick;
+            this.allowedPlayerTicks = Math.max(this.allowedPlayerTicks, 1);
+            this.lastTick = (int) (System.currentTimeMillis() / 50);
+
+            ++this.f_9740_;
+            int i = this.f_9740_ - this.f_9741_;
+            if (i > Math.max(this.allowedPlayerTicks, 5)) {
+               f_9744_.debug(this.f_9743_.m_6302_() + " is sending move packets too frequently (" + i + " packets since last tick)");
+               i = 1;
+            }
+
+            if (d10 > 0) {
+               allowedPlayerTicks -= 1;
+            } else {
+               allowedPlayerTicks = 20;
+            }
+            double speed;
+            if (f_9743_.m_150110_().f_35935_) {
+               speed = f_9743_.m_150110_().f_35939_ * 20f;
+            } else {
+               speed = f_9743_.m_150110_().f_35940_ * 10f;
+            }
+            speed *= 2f; // TODO: Get the speed of the vehicle instead of the player
+
+            if (d10 - d9 > Math.max(100.0D, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.m_293330_()) {
+               // CraftBukkit end
                f_9744_.warn("{} (vehicle of {}) moved too quickly! {},{},{}", entity.m_7755_().getString(), this.f_9743_.m_7755_().getString(), d6, d7, d8);
                this.m_141995_(new ClientboundMoveVehiclePacket(entity));
                return;
@@ -407,18 +_,89 @@
             d8 = d5 - entity.m_20189_();
             d10 = d6 * d6 + d7 * d7 + d8 * d8;
             boolean flag2 = false;
-            if (d10 > 0.0625D) {
+
+            if (d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold) { // Spigot
                flag2 = true;
                f_9744_.warn("{} (vehicle of {}) moved wrongly! {}", entity.m_7755_().getString(), this.f_9743_.m_7755_().getString(), Math.sqrt(d10));
             }
+            org.bukkit.Location curPos = this.getCraftPlayer().getLocation(); // Spigot
 
             entity.m_19890_(d3, d4, d5, f, f1);
+            this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
             boolean flag3 = serverlevel.m_45756_(entity, entity.m_20191_().m_82406_(0.0625D));
             if (flag && (flag2 || !flag3)) {
                entity.m_19890_(d0, d1, d2, f, f1);
+               this.f_9743_.m_19890_(d3, d4, d5, this.f_9743_.m_146908_(), this.f_9743_.m_146909_()); // Forge - Resync player position on vehicle moving
                this.f_9742_.m_129512_(new ClientboundMoveVehiclePacket(entity));
                return;
             }
+
+            // CraftBukkit start - fire PlayerMoveEvent
+            org.bukkit.entity.Player player = this.getCraftPlayer();
+            // Spigot Start
+            if ( !hasMoved )
+            {
+               lastPosX = curPos.getX();
+               lastPosY = curPos.getY();
+               lastPosZ = curPos.getZ();
+               lastYaw = curPos.getYaw();
+               lastPitch = curPos.getPitch();
+               hasMoved = true;
+            }
+            // Spigot End
+            org.bukkit.Location from = new org.bukkit.Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous org.bukkit.event.Event location.
+            org.bukkit.Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
+
+            // If the packet contains movement information then we update the To location with the correct XYZ.
+            to.setX(p_9876_.m_134199_());
+            to.setY(p_9876_.m_134202_());
+            to.setZ(p_9876_.m_134203_());
+
+
+            // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+            to.setYaw(p_9876_.m_134204_());
+            to.setPitch(p_9876_.m_134205_());
+
+            // Prevent 40 event-calls for less than a single pixel of movement >.>
+            double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+            float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+            if ((delta > 1f / 256 || deltaAngle > 10f) && !this.f_9743_.m_6107_()) {
+               this.lastPosX = to.getX();
+               this.lastPosY = to.getY();
+               this.lastPosZ = to.getZ();
+               this.lastYaw = to.getYaw();
+               this.lastPitch = to.getPitch();
+
+               // Skip the first time we do this
+               if (true) { // Spigot - don't skip any move events
+                  org.bukkit.Location oldTo = to.clone();
+                  org.bukkit.event.player.PlayerMoveEvent event = new org.bukkit.event.player.PlayerMoveEvent(player, from, to);
+                  this.cserver.getPluginManager().callEvent(event);
+
+                  // If the event is cancelled we move the player back to their old location.
+                  if (event.isCancelled()) {
+                     teleport(from);
+                     return;
+                  }
+
+                  // If a Plugin has changed the To destination then we teleport the Player
+                  // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                  // We only do this if the org.bukkit.event.Event was not cancelled.
+                  if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
+                     this.f_9743_.getBukkitEntity().teleport(event.getTo(), org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.PLUGIN);
+                     return;
+                  }
+
+                  // Check to see if the Players org.bukkit.Location has some how changed during the call of the event.
+                  // This can happen due to a plugin teleporting the player instead of using .setTo()
+                  if (!from.equals(this.getCraftPlayer().getLocation()) && this.justTeleported) {
+                     this.justTeleported = false;
+                     return;
+                  }
+               }
+            }
+            // CraftBukkit end
 
             this.f_9743_.m_284548_().m_7726_().m_8385_(this.f_9743_);
             this.f_9743_.m_36378_(this.f_9743_.m_20185_() - d0, this.f_9743_.m_20186_() - d1, this.f_9743_.m_20189_() - d2);
@@ -452,6 +_,7 @@
          }
 
          this.f_9766_ = null;
+         this.f_9743_.m_284548_().m_7726_().m_8385_(this.f_9743_); // CraftBukkit
       }
 
    }
@@ -480,6 +_,12 @@
 
    public void m_7741_(ServerboundCommandSuggestionPacket p_9847_) {
       PacketUtils.m_131359_(p_9847_, this, this.f_9743_.m_284548_());
+      // CraftBukkit start
+      if (f_9750_.addAndGet(1) > 500 && !this.f_291389_.m_6846_().m_11303_(this.f_9743_.m_36316_())) {
+         this.m_294716_(Component.m_237115_("disconnect.spam"));
+         return;
+      }
+      // CraftBukkit end
       StringReader stringreader = new StringReader(p_9847_.m_133904_());
       if (stringreader.canRead() && stringreader.peek() == '/') {
          stringreader.skip();
@@ -487,6 +_,7 @@
 
       ParseResults<CommandSourceStack> parseresults = this.f_291389_.m_129892_().m_82094_().parse(stringreader, this.f_9743_.m_20203_());
       this.f_291389_.m_129892_().m_82094_().getCompletionSuggestions(parseresults).thenAccept((p_296597_) -> {
+         if (p_296597_.isEmpty()) return; // CraftBukkit - don't send through empty suggestions - prevents [<args>] from showing for plugins with nothing more to offer
          this.m_141995_(new ClientboundCommandSuggestionsPacket(p_9847_.m_133901_(), p_296597_));
       });
    }
@@ -703,6 +_,14 @@
       int i = p_9905_.m_134469_();
       AbstractContainerMenu abstractcontainermenu = this.f_9743_.f_36096_;
       if (abstractcontainermenu instanceof MerchantMenu merchantmenu) {
+         // CraftBukkit start
+         final org.bukkit.event.inventory.TradeSelectEvent tradeSelectEvent = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callTradeSelectEvent(this.f_9743_, i, merchantmenu);
+         if (tradeSelectEvent.isCancelled()) {
+            this.f_9743_.getBukkitEntity().updateInventory();
+            return;
+         }
+         // CraftBukkit end
+
          if (!merchantmenu.m_6875_(this.f_9743_)) {
             f_9744_.debug("Player {} interacted with invalid menu {}", this.f_9743_, merchantmenu);
             return;
@@ -715,6 +_,13 @@
    }
 
    public void m_6829_(ServerboundEditBookPacket p_9862_) {
+      // CraftBukkit start
+      if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
+         this.disconnect("Book edited too quickly!");
+         return;
+      }
+      this.lastBookTick = MinecraftServer.currentTick;
+      // CraftBukkit end
       int i = p_9862_.m_134013_();
       if (Inventory.m_36045_(i) || i == 40) {
          List<String> list = Lists.newArrayList();
@@ -733,7 +_,7 @@
    private void m_9812_(List<FilteredText> p_9813_, int p_9814_) {
       ItemStack itemstack = this.f_9743_.m_150109_().m_8020_(p_9814_);
       if (itemstack.m_150930_(Items.f_42614_)) {
-         this.m_143634_(p_9813_, UnaryOperator.identity(), itemstack);
+         this.updateBookPages(p_9813_, UnaryOperator.identity(), itemstack.m_41777_(), p_9814_, itemstack); // CraftBukkit
       }
    }
 
@@ -754,14 +_,14 @@
             itemstack1.m_41700_("title", StringTag.m_129297_(p_215209_.f_215168_()));
          }
 
-         this.m_143634_(p_215210_, (p_238206_) -> {
+         this.updateBookPages(p_215210_, (p_238206_) -> {
             return Component.Serializer.m_130703_(Component.m_237113_(p_238206_));
-         }, itemstack1);
-         this.f_9743_.m_150109_().m_6836_(p_215211_, itemstack1);
+         }, itemstack1, p_215211_, itemstack); // CraftBukkit
+         this.f_9743_.m_150109_().m_6836_(p_215211_, itemstack); // CraftBukkit - event factory updates the hand book
       }
    }
 
-   private void m_143634_(List<FilteredText> p_143635_, UnaryOperator<String> p_143636_, ItemStack p_143637_) {
+   private void updateBookPages(List<FilteredText> p_143635_, UnaryOperator<String> p_143636_, ItemStack p_143637_, int slot, ItemStack handItem) { // CraftBukkit
       ListTag listtag = new ListTag();
       if (this.f_9743_.m_143387_()) {
          p_143635_.stream().map((p_238209_) -> {
@@ -786,6 +_,7 @@
       }
 
       p_143637_.m_41700_("pages", listtag);
+      org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleEditBookEvent(f_9743_, slot, handItem, p_143637_); // CraftBukkit
    }
 
    public void m_7548_(ServerboundEntityTagQuery p_9864_) {
@@ -815,7 +_,7 @@
          this.m_294716_(Component.m_237115_("multiplayer.disconnect.invalid_player_movement"));
       } else {
          ServerLevel serverlevel = this.f_9743_.m_284548_();
-         if (!this.f_9743_.f_8944_) {
+         if (!this.f_9743_.f_8944_ && !this.f_9743_.m_6107_()) { // CraftBukkit
             if (this.f_9746_ == 0) {
                this.m_9953_();
             }
@@ -825,7 +_,7 @@
                   this.f_9735_ = this.f_9746_;
                   this.m_9774_(this.f_9766_.f_82479_, this.f_9766_.f_82480_, this.f_9766_.f_82481_, this.f_9743_.m_146908_(), this.f_9743_.m_146909_());
                }
-
+               this.allowedPlayerTicks = 20; // CraftBukkit
             } else {
                this.f_9735_ = this.f_9746_;
                double d0 = m_143609_(p_9874_.m_134129_(this.f_9743_.m_20185_()));
@@ -836,7 +_,15 @@
                if (this.f_9743_.m_20159_()) {
                   this.f_9743_.m_19890_(this.f_9743_.m_20185_(), this.f_9743_.m_20186_(), this.f_9743_.m_20189_(), f, f1);
                   this.f_9743_.m_284548_().m_7726_().m_8385_(this.f_9743_);
+                  this.allowedPlayerTicks = 20; // CraftBukkit
                } else {
+                  // CraftBukkit - Make sure the move is valid but then reset it for plugins to modify
+                  double prevX = f_9743_.m_20185_();
+                  double prevY = f_9743_.m_20186_();
+                  double prevZ = f_9743_.m_20189_();
+                  float prevYaw = f_9743_.m_146908_();
+                  float prevPitch = f_9743_.m_146909_();
+                  // CraftBukkit end
                   double d3 = this.f_9743_.m_20185_();
                   double d4 = this.f_9743_.m_20186_();
                   double d5 = this.f_9743_.m_20189_();
@@ -853,14 +_,34 @@
                   } else {
                      ++this.f_9740_;
                      int i = this.f_9740_ - this.f_9741_;
-                     if (i > 5) {
+
+                     // CraftBukkit start - handle custom speeds and skipped ticks
+                     this.allowedPlayerTicks += (System.currentTimeMillis() / 50) - this.lastTick;
+                     this.allowedPlayerTicks = Math.max(this.allowedPlayerTicks, 1);
+                     this.lastTick = (int) (System.currentTimeMillis() / 50);
+
+                     if (i > Math.max(this.allowedPlayerTicks, 5)) {
                         f_9744_.debug("{} is sending move packets too frequently ({} packets since last tick)", this.f_9743_.m_7755_().getString(), i);
                         i = 1;
                      }
 
+                     if (p_9874_.f_134125_ || d10 > 0) {
+                        allowedPlayerTicks -= 1;
+                     } else {
+                        allowedPlayerTicks = 20;
+                     }
+                     double speed;
+                     if (f_9743_.m_150110_().f_35935_) {
+                        speed = f_9743_.m_150110_().f_35939_ * 20f;
+                     } else {
+                        speed = f_9743_.m_150110_().f_35940_ * 10f;
+                     }
+
                      if (!this.f_9743_.m_8958_() && (!this.f_9743_.m_9236_().m_46469_().m_46207_(GameRules.f_46148_) || !this.f_9743_.m_21255_())) {
                         float f2 = this.f_9743_.m_21255_() ? 300.0F : 100.0F;
-                        if (d10 - d9 > (double)(f2 * (float)i) && !this.m_293330_()) {
+
+                        if (d10 - d9 > Math.max(f2, Math.pow((double) (org.spigotmc.SpigotConfig.movedTooQuicklyMultiplier * (float) i * speed), 2)) && !this.m_293330_()) {
+                           // CraftBukkit end
                            f_9744_.warn("{} moved too quickly! {},{},{}", this.f_9743_.m_7755_().getString(), d6, d7, d8);
                            this.m_9774_(this.f_9743_.m_20185_(), this.f_9743_.m_20186_(), this.f_9743_.m_20189_(), this.f_9743_.m_146908_(), this.f_9743_.m_146909_());
                            return;
@@ -878,6 +_,7 @@
 
                      boolean flag1 = this.f_9743_.f_201939_;
                      this.f_9743_.m_6478_(MoverType.PLAYER, new Vec3(d6, d7, d8));
+                     this.f_9743_.f_19861_ = p_9874_.m_134139_(); // CraftBukkit - SPIGOT-5810, SPIGOT-5835, SPIGOT-6828: reset by this.player.move
                      d6 = d0 - this.f_9743_.m_20185_();
                      d7 = d1 - this.f_9743_.m_20186_();
                      if (d7 > -0.5D || d7 < 0.5D) {
@@ -887,12 +_,73 @@
                      d8 = d2 - this.f_9743_.m_20189_();
                      d10 = d6 * d6 + d7 * d7 + d8 * d8;
                      boolean flag2 = false;
-                     if (!this.f_9743_.m_8958_() && d10 > 0.0625D && !this.f_9743_.m_5803_() && !this.f_9743_.f_8941_.m_9295_() && this.f_9743_.f_8941_.m_9290_() != GameType.SPECTATOR) {
+                     if (!this.f_9743_.m_8958_() && d10 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.f_9743_.m_5803_() && !this.f_9743_.f_8941_.m_9295_() && this.f_9743_.f_8941_.m_9290_() != GameType.SPECTATOR) { // Spigot
                         flag2 = true;
                         f_9744_.warn("{} moved wrongly!", (Object)this.f_9743_.m_7755_().getString());
                      }
 
                      if (this.f_9743_.f_19794_ || this.f_9743_.m_5803_() || (!flag2 || !serverlevel.m_45756_(this.f_9743_, aabb)) && !this.m_288208_(serverlevel, aabb, d0, d1, d2)) {
+                        // CraftBukkit start - fire PlayerMoveEvent
+                        // Reset to old location first
+                        this.f_9743_.m_19890_(prevX, prevY, prevZ, prevYaw, prevPitch);
+
+                        org.bukkit.entity.Player player = this.getCraftPlayer();
+                        org.bukkit.Location from = new org.bukkit.Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous org.bukkit.event.Event location.
+                        org.bukkit.Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
+
+                        // If the packet contains movement information then we update the To location with the correct XYZ.
+                        if (p_9874_.f_134124_) {
+                           to.setX(p_9874_.f_134118_);
+                           to.setY(p_9874_.f_134119_);
+                           to.setZ(p_9874_.f_134120_);
+                        }
+
+                        // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+                        if (p_9874_.f_134125_) {
+                           to.setYaw(p_9874_.f_134121_);
+                           to.setPitch(p_9874_.f_134122_);
+                        }
+
+                        // Prevent 40 event-calls for less than a single pixel of movement >.>
+                        double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+                        float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+                        if ((delta > 1f / 256 || deltaAngle > 10f) && !this.f_9743_.m_6107_()) {
+                           this.lastPosX = to.getX();
+                           this.lastPosY = to.getY();
+                           this.lastPosZ = to.getZ();
+                           this.lastYaw = to.getYaw();
+                           this.lastPitch = to.getPitch();
+
+                           // Skip the first time we do this
+                           if (from.getX() != Double.MAX_VALUE) {
+                              org.bukkit.Location oldTo = to.clone();
+                              org.bukkit.event.player.PlayerMoveEvent event = new org.bukkit.event.player.PlayerMoveEvent(player, from, to);
+                              this.cserver.getPluginManager().callEvent(event);
+
+                              // If the event is cancelled we move the player back to their old location.
+                              if (event.isCancelled()) {
+                                 teleport(from);
+                                 return;
+                              }
+
+                              // If a Plugin has changed the To destination then we teleport the Player
+                              // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                              // We only do this if the org.bukkit.event.Event was not cancelled.
+                              if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
+                                 this.f_9743_.getBukkitEntity().teleport(event.getTo(), org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.PLUGIN);
+                                 return;
+                              }
+
+                              // Check to see if the Players org.bukkit.Location has some how changed during the call of the event.
+                              // This can happen due to a plugin teleporting the player instead of using .setTo()
+                              if (!from.equals(this.getCraftPlayer().getLocation()) && this.justTeleported) {
+                                 this.justTeleported = false;
+                                 return;
+                              }
+                           }
+                        }
+                        // CraftBukkit end
                         this.f_9743_.m_19890_(d0, d1, d2, f, f1);
                         this.f_9736_ = d7 >= -0.03125D && !flag1 && this.f_9743_.f_8941_.m_9290_() != GameType.SPECTATOR && !this.f_291389_.m_129915_() && !this.f_9743_.m_150110_().f_35936_ && !this.f_9743_.m_21023_(MobEffects.f_19620_) && !this.f_9743_.m_21255_() && !this.f_9743_.m_21209_() && this.m_9793_(this.f_9743_);
                         this.f_9743_.m_284548_().m_7726_().m_8385_(this.f_9743_);
@@ -907,7 +_,7 @@
                         this.f_9757_ = this.f_9743_.m_20186_();
                         this.f_9758_ = this.f_9743_.m_20189_();
                      } else {
-                        this.m_9774_(d3, d4, d5, f, f1);
+                        this.internalTeleport(d3, d4, d5, f, f1, Collections.emptySet()); // CraftBukkit - SPIGOT-1807: Don't call teleport event, when the client thinks the player is falling, because the chunks are not loaded on the client yet.
                         this.f_9743_.m_289599_(this.f_9743_.m_20185_() - d3, this.f_9743_.m_20186_() - d4, this.f_9743_.m_20189_() - d5, p_9874_.m_134139_());
                      }
                   }
@@ -931,28 +_,95 @@
       return false;
    }
 
+   // CraftBukkit start - Delegate to teleport(org.bukkit.Location)
    public void m_9774_(double p_9775_, double p_9776_, double p_9777_, float p_9778_, float p_9779_) {
-      this.m_9780_(p_9775_, p_9776_, p_9777_, p_9778_, p_9779_, Collections.emptySet());
+      this.teleport(p_9775_, p_9776_, p_9777_, p_9778_, p_9779_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   public void teleport(double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
+      this.teleport(d0, d1, d2, f, f1, Collections.emptySet(), cause);
    }
 
    public void m_9780_(double p_9781_, double p_9782_, double p_9783_, float p_9784_, float p_9785_, Set<RelativeMovement> p_9786_) {
-      double d0 = p_9786_.contains(RelativeMovement.X) ? this.f_9743_.m_20185_() : 0.0D;
-      double d1 = p_9786_.contains(RelativeMovement.Y) ? this.f_9743_.m_20186_() : 0.0D;
-      double d2 = p_9786_.contains(RelativeMovement.Z) ? this.f_9743_.m_20189_() : 0.0D;
-      float f = p_9786_.contains(RelativeMovement.Y_ROT) ? this.f_9743_.m_146908_() : 0.0F;
-      float f1 = p_9786_.contains(RelativeMovement.X_ROT) ? this.f_9743_.m_146909_() : 0.0F;
-      this.f_9766_ = new Vec3(p_9781_, p_9782_, p_9783_);
+      this.teleport(p_9781_, p_9782_, p_9783_, p_9784_, p_9785_, p_9786_, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.UNKNOWN);
+   }
+
+   public boolean teleport(double d0, double d1, double d2, float f, float f1, Set<RelativeMovement> set, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) { // CraftBukkit - Return event status
+      org.bukkit.entity.Player player = this.getCraftPlayer();
+      org.bukkit.Location from = player.getLocation();
+
+      double x = d0;
+      double y = d1;
+      double z = d2;
+      float yaw = f;
+      float pitch = f1;
+
+      org.bukkit.Location to = new org.bukkit.Location(this.getCraftPlayer().getWorld(), x, y, z, yaw, pitch);
+      // SPIGOT-5171: Triggered on join
+      if (from.equals(to)) {
+         this.internalTeleport(d0, d1, d2, f, f1, set);
+         return false; // CraftBukkit - Return event status
+      }
+
+      org.bukkit.event.player.PlayerTeleportEvent event = new org.bukkit.event.player.PlayerTeleportEvent(player, from.clone(), to.clone(), cause);
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled() || !to.equals(event.getTo())) {
+         set.clear(); // Can't relative teleport
+         to = event.isCancelled() ? event.getFrom() : event.getTo();
+         d0 = to.getX();
+         d1 = to.getY();
+         d2 = to.getZ();
+         f = to.getYaw();
+         f1 = to.getPitch();
+      }
+
+      this.internalTeleport(d0, d1, d2, f, f1, set);
+      return event.isCancelled(); // CraftBukkit - Return event status
+   }
+
+   public void teleport(org.bukkit.Location dest) {
+      internalTeleport(dest.getX(), dest.getY(), dest.getZ(), dest.getYaw(), dest.getPitch(), Collections.emptySet());
+   }
+
+   private void internalTeleport(double d0, double d1, double d2, float f, float f1, Set<RelativeMovement> set) {
+      // CraftBukkit start
+      if (Float.isNaN(f)) {
+         f = 0;
+      }
+      if (Float.isNaN(f1)) {
+         f1 = 0;
+      }
+
+      this.justTeleported = true;
+      // CraftBukkit end
+      double d3 = set.contains(RelativeMovement.X) ? this.f_9743_.m_20185_() : 0.0D;
+      double d4 = set.contains(RelativeMovement.Y) ? this.f_9743_.m_20186_() : 0.0D;
+      double d5 = set.contains(RelativeMovement.Z) ? this.f_9743_.m_20189_() : 0.0D;
+      float f2 = set.contains(RelativeMovement.Y_ROT) ? this.f_9743_.m_146908_() : 0.0F;
+      float f3 = set.contains(RelativeMovement.X_ROT) ? this.f_9743_.m_146909_() : 0.0F;
+
+      this.f_9766_ = new Vec3(d0, d1, d2);
       if (++this.f_9767_ == Integer.MAX_VALUE) {
          this.f_9767_ = 0;
       }
 
+      // CraftBukkit start - update last location
+      this.lastPosX = this.f_9766_.f_82479_;
+      this.lastPosY = this.f_9766_.f_82480_;
+      this.lastPosZ = this.f_9766_.f_82481_;
+      this.lastYaw = f;
+      this.lastPitch = f1;
+      // CraftBukkit end
+
       this.f_9735_ = this.f_9746_;
-      this.f_9743_.m_19890_(p_9781_, p_9782_, p_9783_, p_9784_, p_9785_);
-      this.f_9743_.f_8906_.m_141995_(new ClientboundPlayerPositionPacket(p_9781_ - d0, p_9782_ - d1, p_9783_ - d2, p_9784_ - f, p_9785_ - f1, p_9786_, this.f_9767_));
+      this.f_9743_.m_19890_(d0, d1, d2, f, f1);
+      this.f_9743_.f_8906_.m_141995_(new ClientboundPlayerPositionPacket(d0 - d3, d1 - d4, d2 - d5, f - f2, f1 - f3, set, this.f_9767_));
    }
 
    public void m_7502_(ServerboundPlayerActionPacket p_9889_) {
       PacketUtils.m_131359_(p_9889_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       BlockPos blockpos = p_9889_.m_134281_();
       this.f_9743_.m_9243_();
       ServerboundPlayerActionPacket.Action serverboundplayeractionpacket$action = p_9889_.m_134285_();
@@ -983,14 +_,45 @@
          case SWAP_ITEM_WITH_OFFHAND:
             if (!this.f_9743_.m_5833_()) {
                ItemStack itemstack = this.f_9743_.m_21120_(InteractionHand.OFF_HAND);
-               this.f_9743_.m_21008_(InteractionHand.OFF_HAND, this.f_9743_.m_21120_(InteractionHand.MAIN_HAND));
-               this.f_9743_.m_21008_(InteractionHand.MAIN_HAND, itemstack);
+               //Ketting start - combine events
+               var event = net.minecraftforge.common.ForgeHooks.onLivingSwapHandItems(this.f_9743_);
+               if (event.isCanceled()) return;
+
+               org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack mainHand = org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asCraftMirror(event.getItemSwappedToMainHand());
+               org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack offHand = org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asCraftMirror(event.getItemSwappedToOffHand());
+               org.bukkit.event.player.PlayerSwapHandItemsEvent swapItemsEvent = new org.bukkit.event.player.PlayerSwapHandItemsEvent(getCraftPlayer(), mainHand.clone(), offHand.clone());
+
+               this.cserver.getPluginManager().callEvent(swapItemsEvent);
+               if (swapItemsEvent.isCancelled()) return;
+
+               if (swapItemsEvent.getOffHandItem().equals(offHand)) this.f_9743_.m_21008_(InteractionHand.OFF_HAND, event.getItemSwappedToOffHand());
+               else this.f_9743_.m_21008_(InteractionHand.OFF_HAND, org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asNMSCopy(swapItemsEvent.getOffHandItem()));
+
+               if (swapItemsEvent.getMainHandItem().equals(mainHand)) this.f_9743_.m_21008_(InteractionHand.MAIN_HAND, event.getItemSwappedToMainHand());
+               else this.f_9743_.m_21008_(InteractionHand.MAIN_HAND, org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asNMSCopy(swapItemsEvent.getMainHandItem()));
+               //Ketting end
+
                this.f_9743_.m_5810_();
             }
 
             return;
          case DROP_ITEM:
             if (!this.f_9743_.m_5833_()) {
+               // limit how quickly items can be dropped
+               // If the ticks aren't the same then the count starts from 0 and we update the lastDropTick.
+               if (this.lastDropTick != MinecraftServer.currentTick) {
+                  this.dropCount = 0;
+                  this.lastDropTick = MinecraftServer.currentTick;
+               } else {
+                  // Else we increment the drop count and check the amount.
+                  this.dropCount++;
+                  if (this.dropCount >= 20) {
+                     f_9744_.warn(this.f_9743_.m_6302_() + " dropped their items too quickly!");
+                     this.disconnect("You dropped your items too quickly (Hacking?)");
+                     return;
+                  }
+               }
+               // CraftBukkit end
                this.f_9743_.m_182294_(false);
             }
 
@@ -1001,8 +_,29 @@
       }
    }
 
+   // Spigot start - limit place/interactions
+   private int limitedPackets;
+   private long lastLimitedPacket = -1;
+
+   private boolean checkLimit(long timestamp) {
+      if (lastLimitedPacket != -1 && timestamp - lastLimitedPacket < 30 && limitedPackets++ >= 4) {
+         return false;
+      }
+
+      if (lastLimitedPacket == -1 || timestamp - lastLimitedPacket >= 30) {
+         lastLimitedPacket = timestamp;
+         limitedPackets = 0;
+         return true;
+      }
+
+      return true;
+   }
+   // Spigot end
+
    public void m_6371_(ServerboundUseItemOnPacket p_9930_) {
       PacketUtils.m_131359_(p_9930_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
+      if (!checkLimit(p_9930_.timestamp)) return; // Spigot - check limit
       this.f_9743_.f_8906_.m_215201_(p_9930_.m_238008_());
       ServerLevel serverlevel = this.f_9743_.m_284548_();
       InteractionHand interactionhand = p_9930_.m_134703_();
@@ -1035,7 +_,7 @@
          Vec3 vec3 = blockhitresult.m_82450_();
          BlockPos blockpos = blockhitresult.m_82425_();
          Vec3 vec31 = Vec3.m_82512_(blockpos);
-         if (!(this.f_9743_.m_146892_().m_82557_(vec31) > f_215198_)) {
+         if (this.f_9743_.canReach(blockpos, 1.5)) { // Vanilla uses eye-to-center distance < 6, which implies a padding of 1.5
             Vec3 vec32 = vec3.m_82546_(vec31);
             double d0 = 1.0000001D;
             if (Math.abs(vec32.m_7096_()) < 1.0000001D && Math.abs(vec32.m_7098_()) < 1.0000001D && Math.abs(vec32.m_7094_()) < 1.0000001D) {
@@ -1043,7 +_,8 @@
                this.f_9743_.m_9243_();
                int i = this.f_9743_.m_9236_().m_151558_();
                if (blockpos.m_123342_() < i) {
-                  if (this.f_9766_ == null && this.f_9743_.m_20275_((double)blockpos.m_123341_() + 0.5D, (double)blockpos.m_123342_() + 0.5D, (double)blockpos.m_123343_() + 0.5D) < 64.0D && serverlevel.m_7966_(this.f_9743_, blockpos)) {
+                  if (this.f_9766_ == null && serverlevel.m_7966_(this.f_9743_, blockpos)) {
+                     // this.player.stopUsingItem(); // CraftBukkit - SPIGOT-4706 //Ketting - NO! This breaks Forge
                      InteractionResult interactionresult = this.f_9743_.f_8941_.m_7179_(this.f_9743_, serverlevel, itemstack, interactionhand, blockhitresult);
                      if (direction == Direction.UP && !interactionresult.m_19077_() && blockpos.m_123342_() >= i - 1 && m_9790_(this.f_9743_, itemstack)) {
                         Component component = Component.m_237110_("build.tooHigh", i - 1).m_130940_(ChatFormatting.RED);
@@ -1045,12 +_,57 @@
 
    public void m_5760_(ServerboundUseItemPacket p_9932_) {
       PacketUtils.m_131359_(p_9932_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
+      if (!checkLimit(p_9932_.timestamp)) return; // Spigot - check limit
       this.m_215201_(p_9932_.m_238013_());
       ServerLevel serverlevel = this.f_9743_.m_284548_();
       InteractionHand interactionhand = p_9932_.m_134717_();
       ItemStack itemstack = this.f_9743_.m_21120_(interactionhand);
       this.f_9743_.m_9243_();
       if (!itemstack.m_41619_() && itemstack.m_246617_(serverlevel.m_246046_())) {
+         // CraftBukkit start
+         // Raytrace to look for 'rogue armswings'
+         float f1 = this.f_9743_.m_146909_();
+         float f2 = this.f_9743_.m_146908_();
+         double d0 = this.f_9743_.m_20185_();
+         double d1 = this.f_9743_.m_20186_() + (double) this.f_9743_.m_20192_();
+         double d2 = this.f_9743_.m_20189_();
+         Vec3 vec3 = new Vec3(d0, d1, d2);
+
+         float f3 = Mth.m_14089_(-f2 * 0.017453292F - 3.1415927F);
+         float f4 = Mth.m_14031_(-f2 * 0.017453292F - 3.1415927F);
+         float f5 = -Mth.m_14089_(-f1 * 0.017453292F);
+         float f6 = Mth.m_14031_(-f1 * 0.017453292F);
+         float f7 = f4 * f5;
+         float f8 = f3 * f5;
+         double d3 = f_9743_.f_8941_.m_9290_() == GameType.CREATIVE ? 5.0D : 4.5D;
+         Vec3 vec31 = vec3.m_82520_((double) f7 * d3, (double) f6 * d3, (double) f8 * d3);
+         BlockHitResult hitresult = this.f_9743_.m_9236_().m_45547_(new net.minecraft.world.level.ClipContext(vec3, vec31, net.minecraft.world.level.ClipContext.Block.OUTLINE, net.minecraft.world.level.ClipContext.Fluid.NONE, f_9743_));
+
+         boolean cancelled;
+         if (hitresult == null || hitresult.m_6662_() != BlockHitResult.Type.BLOCK) {
+            org.bukkit.event.player.PlayerInteractEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerInteractEvent(this.f_9743_, org.bukkit.event.block.Action.RIGHT_CLICK_AIR, itemstack, interactionhand);
+            cancelled = event.useItemInHand() == org.bukkit.event.Event.Result.DENY;
+         } else {
+            BlockHitResult hitresultblock = (BlockHitResult) hitresult;
+            if (f_9743_.f_8941_.firedInteract && f_9743_.f_8941_.interactPosition.equals(hitresultblock.m_82425_()) && f_9743_.f_8941_.interactHand == interactionhand && ItemStack.m_150942_(f_9743_.f_8941_.interactItemStack, itemstack)) {
+               cancelled = f_9743_.f_8941_.interactResult;
+            } else {
+               org.bukkit.event.player.PlayerInteractEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerInteractEvent(f_9743_, org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK, hitresultblock.m_82425_(), hitresultblock.m_82434_(), itemstack, true, interactionhand, hitresultblock.m_82450_());
+               cancelled = event.useItemInHand() == org.bukkit.event.Event.Result.DENY;
+            }
+            f_9743_.f_8941_.firedInteract = false;
+         }
+
+         if (cancelled) {
+            this.f_9743_.getBukkitEntity().updateInventory(); // SPIGOT-2524
+            return;
+         }
+         itemstack = this.f_9743_.m_21120_(interactionhand); // Update in case it was changed in the event
+         if (itemstack.m_41619_()) {
+            return;
+         }
+         // CraftBukkit end
          InteractionResult interactionresult = this.f_9743_.f_8941_.m_6261_(this.f_9743_, serverlevel, itemstack, interactionhand);
          if (interactionresult.m_19080_()) {
             this.f_9743_.m_21011_(interactionhand, true);
@@ -1065,7 +_,7 @@
          for(ServerLevel serverlevel : this.f_291389_.m_129785_()) {
             Entity entity = p_9928_.m_134681_(serverlevel);
             if (entity != null) {
-               this.f_9743_.m_8999_(serverlevel, entity.m_20185_(), entity.m_20186_(), entity.m_20189_(), entity.m_146908_(), entity.m_146909_());
+               this.f_9743_.teleportTo(serverlevel, entity.m_20185_(), entity.m_20186_(), entity.m_20189_(), entity.m_146908_(), entity.m_146909_(), org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.SPECTATE); // CraftBukkit
                return;
             }
          }
@@ -1083,6 +_,13 @@
    }
 
    public void m_7026_(Component p_9825_) {
+      // CraftBukkit start - Rarely it would send a disconnect line twice
+      if (this.processedDisconnect) {
+         return;
+      } else {
+         this.processedDisconnect = true;
+      }
+      // CraftBukkit end
       f_9744_.info("{} lost connection: {}", this.f_9743_.m_7755_().getString(), p_9825_.getString());
       this.m_294538_();
       super.m_7026_(p_9825_);
@@ -1090,10 +_,18 @@
 
    private void m_294538_() {
       this.f_241681_.close();
-      this.f_291389_.m_129929_();
-      this.f_291389_.m_6846_().m_240416_(Component.m_237110_("multiplayer.player.left", this.f_9743_.m_5446_()).m_130940_(ChatFormatting.YELLOW), false);
+      // CraftBukkit start - Replace vanilla quit message handling with our own.
+      /*
+      this.server.invalidateStatus();
+      this.server.getPlayerList().broadcastSystemMessage(Component.translatable("multiplayer.player.left", this.player.getDisplayName()).withStyle(ChatFormatting.YELLOW), false);
+      */
+
       this.f_9743_.m_9231_();
-      this.f_291389_.m_6846_().m_11286_(this.f_9743_);
+      String quitMessage = this.f_291389_.m_6846_().removeString(this.f_9743_);
+      if ((quitMessage != null) && (quitMessage.length() > 0)) {
+         this.f_291389_.m_6846_().broadcastMessage(org.bukkit.craftbukkit.v1_20_R2.util.CraftChatMessage.fromString(quitMessage));
+      }
+      // CraftBukkit end
       this.f_9743_.m_8967_().m_7670_();
    }
 
@@ -1107,7 +_,16 @@
 
    public void m_7798_(ServerboundSetCarriedItemPacket p_9909_) {
       PacketUtils.m_131359_(p_9909_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       if (p_9909_.m_134498_() >= 0 && p_9909_.m_134498_() < Inventory.m_36059_()) {
+         org.bukkit.event.player.PlayerItemHeldEvent event = new org.bukkit.event.player.PlayerItemHeldEvent(this.getCraftPlayer(), this.f_9743_.m_150109_().f_35977_, p_9909_.m_134498_());
+         this.cserver.getPluginManager().callEvent(event);
+         if (event.isCancelled()) {
+            this.m_141995_(new ClientboundSetCarriedItemPacket(this.f_9743_.m_150109_().f_35977_));
+            this.f_9743_.m_9243_();
+            return;
+         }
+         // CraftBukkit end
          if (this.f_9743_.m_150109_().f_35977_ != p_9909_.m_134498_() && this.f_9743_.m_7655_() == InteractionHand.MAIN_HAND) {
             this.f_9743_.m_5810_();
          }
@@ -1116,10 +_,19 @@
          this.f_9743_.m_9243_();
       } else {
          f_9744_.warn("{} tried to set an invalid carried item", (Object)this.f_9743_.m_7755_().getString());
+         this.disconnect("Invalid hotbar selection (Hacking?)"); // CraftBukkit
       }
    }
 
+   //Ketting: TODO combine forge and bukkit events
    public void m_7388_(ServerboundChatPacket p_9841_) {
+      // CraftBukkit start - async chat
+      // SPIGOT-3638
+      if (this.f_291389_.m_129918_()) {
+         return;
+      }
+      // CraftBukkit end
+      //Ketting: STOPPED HERE WITH PATCHING, PART UNDER THIS STILL NEEDS PATCHING
       if (m_215214_(p_9841_.f_133827_())) {
          this.m_294716_(Component.m_237115_("multiplayer.disconnect.illegal_characters"));
       } else {
@@ -1187,9 +_,12 @@
                }
 
                CompletableFuture<FilteredText> completablefuture = this.m_243132_(playerchatmessage.m_245728_());
-               CompletableFuture<Component> completablefuture1 = this.f_9745_.m_236742_().m_236961_(this.f_9743_, playerchatmessage.m_245692_());
+               CompletableFuture<Component> completablefuture1 = net.minecraftforge.common.ForgeHooks.getServerChatSubmittedDecorator().m_236961_(this.f_9743_, playerchatmessage.m_245692_());
                this.f_241681_.m_241849_((p_248212_) -> {
                   return CompletableFuture.allOf(completablefuture, completablefuture1).thenAcceptAsync((p_248218_) -> {
-                     PlayerChatMessage playerchatmessage1 = playerchatmessage.m_241956_(completablefuture1.join()).m_243072_(completablefuture.join().f_243010_());
+                     Component decoratedContent = completablefuture1.join();
+                     if (decoratedContent == null)
+                        return; // Forge: ServerChatEvent was canceled if this is null.
+                     PlayerChatMessage playerchatmessage1 = playerchatmessage.m_241956_(decoratedContent).m_243072_(completablefuture.join().f_243010_());
                      this.m_243086_(playerchatmessage1);
                   }, p_248212_);
@@ -1147,6 +_,7 @@
 
       }
    }
+   //Ketting: TODO combine forge and bukkit events
 
    public void m_214047_(ServerboundChatCommandPacket p_215225_) {
       if (m_215214_(p_215225_.f_237922_())) {
@@ -1155,8 +_,14 @@
          Optional<LastSeenMessages> optional = this.m_247189_(p_215225_.f_237922_(), p_215225_.f_237923_(), p_215225_.f_241638_());
          if (optional.isPresent()) {
             this.f_291389_.m_18707_(() -> {
+               // CraftBukkit start - SPIGOT-7346: Prevent disconnected players from executing commands
+               if (f_9743_.m_9232_()) {
+                  return;
+               }
+               // CraftBukkit end
+
                this.m_246958_(p_215225_, optional.get());
-               this.m_215251_();
+               this.detectRateSpam("/" + p_215225_.f_237922_()); // Spigot
             });
          }
 
@@ -1164,11 +_,24 @@
    }
 
    private void m_246958_(ServerboundChatCommandPacket p_251139_, LastSeenMessages p_250484_) {
-      ParseResults<CommandSourceStack> parseresults = this.m_242658_(p_251139_.f_237922_());
+      // CraftBukkit start
+      String command = "/" + p_251139_.f_237922_();
+      f_9744_.info(this.f_9743_.m_6302_() + " issued server command: " + command);
+
+      org.bukkit.event.player.PlayerCommandPreprocessEvent event = new org.bukkit.event.player.PlayerCommandPreprocessEvent(getCraftPlayer(), command, new org.bukkit.craftbukkit.v1_20_R2.util.LazyPlayerSet(f_291389_));
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         return;
+      }
+      command = event.getMessage().substring(1);
+
+      ParseResults<CommandSourceStack> parseresults = this.m_242658_(command);
+      // CraftBukkit end
 
       Map<String, PlayerChatMessage> map;
       try {
-         map = this.m_246206_(p_251139_, SignableCommand.m_246497_(parseresults), p_250484_);
+         map = (p_251139_.f_237922_().equals(command)) ? this.m_246206_(p_251139_, SignableCommand.m_246497_(parseresults), p_250484_) : Collections.emptyMap(); // CraftBukkit
       } catch (SignedMessageChain.DecodeException signedmessagechain$decodeexception) {
          this.m_246889_(signedmessagechain$decodeexception);
          return;
@@ -1178,7 +_,7 @@
       parseresults = Commands.m_242611_(parseresults, (p_296586_) -> {
          return p_296586_.m_230893_(commandsigningcontext, this.f_241681_);
       });
-      this.f_291389_.m_129892_().m_242674_(parseresults, p_251139_.f_237922_());
+      this.f_291389_.m_129892_().m_242674_(parseresults, command); // CraftBukkit
    }
 
    private void m_246889_(SignedMessageChain.DecodeException p_252068_) {
@@ -1214,7 +_,7 @@
          return Optional.empty();
       } else {
          Optional<LastSeenMessages> optional = this.m_245578_(p_249613_);
-         if (this.f_9743_.m_9241_() == ChatVisiblity.HIDDEN) {
+         if (this.f_9743_.m_213877_() || this.f_9743_.m_9241_() == ChatVisiblity.HIDDEN) { // CraftBukkit - dead men tell no tales
             this.m_141995_(new ClientboundSystemChatPacket(Component.m_237115_("chat.disabled.options").m_130940_(ChatFormatting.RED), false));
             return Optional.empty();
          } else {
@@ -1258,19 +_,175 @@
       return false;
    }
 
+   //Ketting start - keep compat (anonymous classes will make the compat checker give wrong output)
+   private class Waitable extends org.bukkit.craftbukkit.v1_20_R2.util.Waitable<java.lang.Object> {
+      final org.bukkit.event.player.PlayerChatEvent queueEvent;
+      final String originalFormat;
+      final String originalMessage;
+      final PlayerChatMessage original;
+
+      private Waitable(final org.bukkit.event.player.PlayerChatEvent queueEvent, final String originalFormat, final String originalMessage, final PlayerChatMessage original) {
+         this.queueEvent = queueEvent;
+         this.originalFormat = originalFormat;
+         this.originalMessage = originalMessage;
+         this.original = original;
+      }
+
+      @Override
+      protected Object evaluate() {
+         org.bukkit.Bukkit.getPluginManager().callEvent(queueEvent);
+
+         if (queueEvent.isCancelled()) {
+            return null;
+         }
+
+         String message = String.format(queueEvent.getFormat(), queueEvent.getPlayer().getDisplayName(), queueEvent.getMessage());
+         if (((org.bukkit.craftbukkit.v1_20_R2.util.LazyPlayerSet) queueEvent.getRecipients()).isLazy()) {
+            if (!org.spigotmc.SpigotConfig.bungee && originalFormat.equals(queueEvent.getFormat()) && originalMessage.equals(queueEvent.getMessage()) && queueEvent.getPlayer().getName().equalsIgnoreCase(queueEvent.getPlayer().getDisplayName())) { // Spigot
+               ServerGamePacketListenerImpl.this.f_291389_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+               return null;
+            }
+
+            for (ServerPlayer recipient : f_291389_.m_6846_().f_11196_) {
+               recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+            }
+         } else {
+            for (org.bukkit.entity.Player player : queueEvent.getRecipients()) {
+               player.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), message);
+            }
+         }
+         ServerGamePacketListenerImpl.this.f_291389_.console.sendMessage(message);
+
+         return null;
+      }
+   }
+   // CraftBukkit start - add method
+   public void chat(String s, PlayerChatMessage original, boolean async) {
+      if (s.isEmpty() || this.f_9743_.m_9241_() == ChatVisiblity.HIDDEN) {
+         return;
+      }
+      net.minecraft.network.chat.OutgoingChatMessage outgoing = net.minecraft.network.chat.OutgoingChatMessage.m_247282_(original);
+
+      if (!async && s.startsWith("/")) {
+         this.handleCommand(s);
+      } else if (this.f_9743_.m_9241_() == ChatVisiblity.SYSTEM) {
+         // Do nothing, this is coming from a plugin
+      } else {
+         org.bukkit.entity.Player player = this.getCraftPlayer();
+         org.bukkit.event.player.AsyncPlayerChatEvent event = new org.bukkit.event.player.AsyncPlayerChatEvent(async, player, s, new org.bukkit.craftbukkit.v1_20_R2.util.LazyPlayerSet(f_291389_));
+         String originalFormat = event.getFormat(), originalMessage = event.getMessage();
+         this.cserver.getPluginManager().callEvent(event);
+
+         if (org.bukkit.event.player.PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0) {
+            // Evil plugins still listening to deprecated event
+            final org.bukkit.event.player.PlayerChatEvent queueEvent = new org.bukkit.event.player.PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+            queueEvent.setCancelled(event.isCancelled());
+            final org.bukkit.craftbukkit.v1_20_R2.util.Waitable<?> waitable = new Waitable(queueEvent, originalFormat, originalMessage, original); //Ketting - keep compat (anonymous classes will make the compat checker give wrong output)
+            if (async) {
+               f_291389_.processQueue.add(waitable);
+            } else {
+               waitable.run();
+            }
+            try {
+               waitable.get();
+            } catch (InterruptedException e) {
+               Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+            } catch (java.util.concurrent.ExecutionException e) {
+               throw new RuntimeException("Exception processing chat event", e.getCause());
+            }
+         } else {
+            if (event.isCancelled()) {
+               return;
+            }
+
+            s = String.format(event.getFormat(), event.getPlayer().getDisplayName(), event.getMessage());
+            if (((org.bukkit.craftbukkit.v1_20_R2.util.LazyPlayerSet) event.getRecipients()).isLazy()) {
+               if (!org.spigotmc.SpigotConfig.bungee && originalFormat.equals(event.getFormat()) && originalMessage.equals(event.getMessage()) && event.getPlayer().getName().equalsIgnoreCase(event.getPlayer().getDisplayName())) { // Spigot
+                  ServerGamePacketListenerImpl.this.f_291389_.m_6846_().m_243049_(original, ServerGamePacketListenerImpl.this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, (Entity) ServerGamePacketListenerImpl.this.f_9743_));
+                  return;
+               }
+
+               for (ServerPlayer recipient : f_291389_.m_6846_().f_11196_) {
+                  recipient.getBukkitEntity().sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            } else {
+               for (org.bukkit.entity.Player recipient : event.getRecipients()) {
+                  recipient.sendMessage(ServerGamePacketListenerImpl.this.f_9743_.m_20148_(), s);
+               }
+            }
+            f_291389_.console.sendMessage(s);
+         }
+      }
+   }
+
+   private void handleCommand(String s) {
+      org.bukkit.craftbukkit.v1_20_R2.SpigotTimings.playerCommandTimer.startTiming(); // Spigot
+      if ( org.spigotmc.SpigotConfig.logCommands ) // Spigot
+         this.f_9744_.info(this.f_9743_.m_6302_() + " issued server command: " + s);
+
+      org.bukkit.craftbukkit.v1_20_R2.entity.CraftPlayer player = this.getCraftPlayer();
+
+      org.bukkit.event.player.PlayerCommandPreprocessEvent event = new org.bukkit.event.player.PlayerCommandPreprocessEvent(player, s, new org.bukkit.craftbukkit.v1_20_R2.util.LazyPlayerSet(f_291389_));
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         org.bukkit.craftbukkit.v1_20_R2.SpigotTimings.playerCommandTimer.stopTiming(); // Spigot
+         return;
+      }
+
+      try {
+         if (this.cserver.dispatchCommand(event.getPlayer(), event.getMessage().substring(1))) {
+            return;
+         }
+      } catch (org.bukkit.command.CommandException ex) {
+         player.sendMessage(org.bukkit.ChatColor.RED + "An internal error occurred while attempting to perform this command");
+         java.util.logging.Logger.getLogger(ServerGamePacketListenerImpl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
+         return;
+      } finally {
+         org.bukkit.craftbukkit.v1_20_R2.SpigotTimings.playerCommandTimer.stopTiming(); // Spigot
+      }
+   }
+   // CraftBukkit end
+
    private PlayerChatMessage m_247340_(ServerboundChatPacket p_251061_, LastSeenMessages p_250566_) throws SignedMessageChain.DecodeException {
       SignedMessageBody signedmessagebody = new SignedMessageBody(p_251061_.f_133827_(), p_251061_.f_237950_(), p_251061_.f_240906_(), p_250566_);
       return this.f_240889_.m_240945_(p_251061_.f_240898_(), signedmessagebody);
    }
 
    private void m_243086_(PlayerChatMessage p_243277_) {
-      this.f_291389_.m_6846_().m_243049_(p_243277_, this.f_9743_, ChatType.m_240980_(ChatType.f_130598_, this.f_9743_));
-      this.m_215251_();
+      // CraftBukkit start
+      String s = p_243277_.m_245728_();
+      if (s.isEmpty()) {
+         f_9744_.warn(this.f_9743_.m_6302_() + " tried to send an empty message");
+      } else if (getCraftPlayer().isConversing()) {
+         final String conversationInput = s;
+         this.f_291389_.processQueue.add(() -> getCraftPlayer().acceptConversationInput(conversationInput));
+      } else if (this.f_9743_.m_9241_() == ChatVisiblity.SYSTEM) { // Re-add "Command Only" flag check
+         this.m_141995_(new ClientboundSystemChatPacket(Component.m_237115_("chat.cannotSend").m_130940_(ChatFormatting.RED), false));
+      } else {
+         this.chat(s, p_243277_, true);
+      }
+      // this.server.getPlayerList().broadcastChatMessage(playerchatmessage, this.player, ChatMessageType.bind(ChatMessageType.CHAT, (Entity) this.player));
+      // CraftBukkit end
+      this.detectRateSpam(s); // Spigot
    }
 
-   private void m_215251_() {
-      this.f_9750_ += 20;
-      if (this.f_9750_ > 200 && !this.f_291389_.m_6846_().m_11303_(this.f_9743_.m_36316_())) {
+   // Spigot start - spam exclusions
+   private void detectRateSpam(String s) {
+      // CraftBukkit start - replaced with thread safe throttle
+      boolean counted = true;
+      for ( String exclude : org.spigotmc.SpigotConfig.spamExclusions )
+      {
+         if ( exclude != null && s.startsWith( exclude ) )
+         {
+            counted = false;
+            break;
+         }
+      }
+      // Spigot end
+      // this.chatSpamTickCount += 20;
+      if (this.f_9750_.addAndGet(20) > 200 && !this.f_291389_.m_6846_().m_11303_(this.f_9743_.m_36316_())) {
+         // CraftBukkit end
          this.m_294716_(Component.m_237115_("disconnect.spam"));
       }
 
@@ -1288,12 +_,61 @@
 
    public void m_7953_(ServerboundSwingPacket p_9926_) {
       PacketUtils.m_131359_(p_9926_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
+      // CraftBukkit start - Raytrace to look for 'rogue armswings'
+      float f1 = this.f_9743_.m_146909_();
+      float f2 = this.f_9743_.m_146908_();
+      double d0 = this.f_9743_.m_20185_();
+      double d1 = this.f_9743_.m_20186_() + (double) this.f_9743_.m_20192_();
+      double d2 = this.f_9743_.m_20189_();
+      org.bukkit.Location origin = new org.bukkit.Location(this.f_9743_.m_9236_().getWorld(), d0, d1, d2, f2, f1);
+
+      double d3 = f_9743_.f_8941_.m_9290_() == GameType.CREATIVE ? 5.0D : 4.5D;
+      // SPIGOT-5607: Only call interact event if no block or entity is being clicked. Use bukkit ray trace method, because it handles blocks and entities at the same time
+      // SPIGOT-7429: Make sure to call org.bukkit.event.player.PlayerInteractEvent for spectators and non-pickable entities
+      org.bukkit.util.RayTraceResult result = this.f_9743_.m_9236_().getWorld().rayTrace(origin, origin.getDirection(), d3, org.bukkit.FluidCollisionMode.NEVER, false, 0.1, entity -> {
+         Entity handle = ((org.bukkit.craftbukkit.v1_20_R2.entity.CraftEntity) entity).getHandle();
+         return entity != this.f_9743_.getBukkitEntity() && this.f_9743_.getBukkitEntity().canSee(entity) && !handle.m_5833_() && handle.m_6087_() && !handle.m_20365_(f_9743_);
+      });
+      if (result == null) {
+         org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerInteractEvent(this.f_9743_, org.bukkit.event.block.Action.LEFT_CLICK_AIR, this.f_9743_.m_150109_().m_36056_(), InteractionHand.MAIN_HAND);
+      }
+
+      // Arm swing animation
+      org.bukkit.event.player.PlayerAnimationEvent event = new org.bukkit.event.player.PlayerAnimationEvent(this.getCraftPlayer(), (p_9926_.m_134674_() == InteractionHand.MAIN_HAND) ? org.bukkit.event.player.PlayerAnimationType.ARM_SWING : org.bukkit.event.player.PlayerAnimationType.OFF_ARM_SWING);
+      this.cserver.getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) return;
+      // CraftBukkit end
       this.f_9743_.m_6674_(p_9926_.m_134674_());
    }
 
    public void m_5681_(ServerboundPlayerCommandPacket p_9891_) {
       PacketUtils.m_131359_(p_9891_, this, this.f_9743_.m_284548_());
+      // CraftBukkit start
+      if (this.f_9743_.m_213877_()) return;
+      switch (p_9891_.m_134320_()) {
+         case PRESS_SHIFT_KEY:
+         case RELEASE_SHIFT_KEY:
+            org.bukkit.event.player.PlayerToggleSneakEvent event = new org.bukkit.event.player.PlayerToggleSneakEvent(this.getCraftPlayer(), p_9891_.m_134320_() == ServerboundPlayerCommandPacket.Action.PRESS_SHIFT_KEY);
+            this.cserver.getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+               return;
+            }
+            break;
+         case START_SPRINTING:
+         case STOP_SPRINTING:
+            org.bukkit.event.player.PlayerToggleSprintEvent e2 = new org.bukkit.event.player.PlayerToggleSprintEvent(this.getCraftPlayer(), p_9891_.m_134320_() == ServerboundPlayerCommandPacket.Action.START_SPRINTING);
+            this.cserver.getPluginManager().callEvent(e2);
+
+            if (e2.isCancelled()) {
+               return;
+            }
+            break;
+      }
+      // CraftBukkit end
       this.f_9743_.m_9243_();
       switch (p_9891_.m_134320_()) {
          case PRESS_SHIFT_KEY:
@@ -1364,6 +_,12 @@
    }
 
    public void m_245431_(PlayerChatMessage p_250321_, ChatType.Bound p_250910_) {
+      // CraftBukkit start - SPIGOT-7262: if hidden we have to send as disguised message. Query whether we should send at all (but changing this may not be expected).
+      if (!getCraftPlayer().canSee(p_250321_.f_243882_().f_244443_())) {
+         m_245903_(p_250321_.m_245692_(), p_250910_);
+         return;
+      }
+      // CraftBukkit end
       this.m_141995_(new ClientboundPlayerChatPacket(p_250321_.f_243882_().f_244443_(), p_250321_.f_243882_().f_244066_(), p_250321_.f_244279_(), p_250321_.f_240885_().m_253217_(this.f_243718_), p_250321_.f_237215_(), p_250321_.f_242992_(), p_250910_.m_240987_(this.f_9743_.m_9236_().m_9598_())));
       this.m_241992_(p_250321_);
    }
@@ -1376,6 +_,13 @@
       return this.f_291338_.m_129523_();
    }
 
+   // Spigot Start
+   public SocketAddress getRawAddress()
+   {
+      return this.f_291338_.f_129468_.remoteAddress();
+   }
+   // Spigot End
+
    public void m_294315_() {
       this.f_290343_ = true;
       this.m_294538_();
@@ -1388,8 +_,17 @@
 
    public void m_6946_(ServerboundInteractPacket p_9866_) {
       PacketUtils.m_131359_(p_9866_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       final ServerLevel serverlevel = this.f_9743_.m_284548_();
       final Entity entity = p_9866_.m_179603_(serverlevel);
+      // Spigot Start
+      if ( entity == f_9743_ && !f_9743_.m_5833_() )
+      {
+         disconnect( "Cannot interact with self!" );
+         return;
+      }
+      // Spigot End
+
       this.f_9743_.m_9243_();
       this.f_9743_.m_20260_(p_9866_.m_134061_());
       if (entity != null) {
@@ -1398,13 +_,52 @@
          }
 
          AABB aabb = entity.m_20191_();
-         if (aabb.m_272282_(this.f_9743_.m_146892_()) < f_215198_) {
+         if (this.f_9743_.canReach(entity, 3)) { // Vanilla padding is 3.0 (distSq < 6.0 * 6.0)
             p_9866_.m_179617_(new ServerboundInteractPacket.Handler() {
-               private void m_143678_(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_) {
+               private void performInteraction(InteractionHand p_143679_, ServerGamePacketListenerImpl.EntityInteraction p_143680_, org.bukkit.event.player.PlayerInteractEntityEvent event) { // CraftBukkit
                   ItemStack itemstack = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(p_143679_);
                   if (itemstack.m_246617_(serverlevel.m_246046_())) {
                      ItemStack itemstack1 = itemstack.m_41777_();
+                     // CraftBukkit start
+                     ItemStack itemInHand = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(p_143679_);
+                     boolean triggerLeashUpdate = itemInHand != null && itemInHand.m_41720_() == Items.f_42655_ && entity instanceof net.minecraft.world.entity.Mob;
+                     Item origItem = f_9743_.m_150109_().m_36056_() == null ? null : f_9743_.m_150109_().m_36056_().m_41720_();
+
+                     cserver.getPluginManager().callEvent(event);
+
+                     // Entity in bucket - SPIGOT-4048 and SPIGOT-6859a
+                     if ((entity instanceof net.minecraft.world.entity.animal.Bucketable && entity instanceof LivingEntity && origItem != null && origItem.m_5456_() == Items.f_42447_) && (event.isCancelled() || f_9743_.m_150109_().m_36056_() == null || f_9743_.m_150109_().m_36056_().m_41720_() != origItem)) {
+                        m_141995_(new net.minecraft.network.protocol.game.ClientboundAddEntityPacket(entity));
+                        f_9743_.f_36096_.m_150429_();
+                     }
+
+                     if (triggerLeashUpdate && (event.isCancelled() || f_9743_.m_150109_().m_36056_() == null || f_9743_.m_150109_().m_36056_().m_41720_() != origItem)) {
+                        // Refresh the current leash state
+                        m_141995_(new net.minecraft.network.protocol.game.ClientboundSetEntityLinkPacket(entity, ((net.minecraft.world.entity.Mob) entity).m_21524_()));
+                     }
+
+                     if (event.isCancelled() || f_9743_.m_150109_().m_36056_() == null || f_9743_.m_150109_().m_36056_().m_41720_() != origItem) {
+                        // Refresh the current entity metadata
+                        entity.m_20088_().refresh(f_9743_);
+                        // SPIGOT-7136 - Allays
+                        if (entity instanceof net.minecraft.world.entity.animal.allay.Allay) {
+                           m_141995_(new net.minecraft.network.protocol.game.ClientboundSetEquipmentPacket(entity.m_19879_(), java.util.Arrays.stream(net.minecraft.world.entity.EquipmentSlot.values()).map((slot) -> com.mojang.datafixers.util.Pair.of(slot, ((LivingEntity) entity).m_6844_(slot).m_41777_())).collect(Collectors.toList())));
+                           f_9743_.f_36096_.m_150429_();
+                        }
+                     }
+
+                     if (event.isCancelled()) {
+                        return;
+                     }
+                     // CraftBukkit end
                      InteractionResult interactionresult = p_143680_.m_143694_(ServerGamePacketListenerImpl.this.f_9743_, entity, p_143679_);
+
+                     // CraftBukkit start
+                     if (!itemInHand.m_41619_() && itemInHand.m_41613_() <= -1) {
+                        f_9743_.f_36096_.m_150429_();
+                     }
+                     // CraftBukkit end
+
                      if (interactionresult.m_19077_()) {
                         CriteriaTriggers.f_10565_.m_61494_(ServerGamePacketListenerImpl.this.f_9743_, itemstack1, entity);
                         if (interactionresult.m_19080_()) {
@@ -1416,20 +_,28 @@
                }
 
                public void m_142299_(InteractionHand p_143677_) {
-                  this.m_143678_(p_143677_, Player::m_36157_);
+                  this.performInteraction(p_143677_, Player::m_36157_, new org.bukkit.event.player.PlayerInteractEntityEvent(getCraftPlayer(), entity.getBukkitEntity(), (p_143677_ == InteractionHand.OFF_HAND) ? org.bukkit.inventory.EquipmentSlot.OFF_HAND : org.bukkit.inventory.EquipmentSlot.HAND)); // CraftBukkit
                }
 
                public void m_142143_(InteractionHand p_143682_, Vec3 p_143683_) {
-                  this.m_143678_(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                  this.performInteraction(p_143682_, (p_143686_, p_143687_, p_143688_) -> {
+                     InteractionResult onInteractEntityAtResult = net.minecraftforge.common.ForgeHooks.onInteractEntityAt(f_9743_, entity, p_143683_, p_143682_);
+                     if (onInteractEntityAtResult != null) return onInteractEntityAtResult;
                      return p_143687_.m_7111_(p_143686_, p_143683_, p_143688_);
-                  });
+                  }, new org.bukkit.event.player.PlayerInteractAtEntityEvent(getCraftPlayer(), entity.getBukkitEntity(), new org.bukkit.util.Vector(p_143683_.f_82479_, p_143683_.f_82480_, p_143683_.f_82481_), (p_143682_ == InteractionHand.OFF_HAND) ? org.bukkit.inventory.EquipmentSlot.OFF_HAND : org.bukkit.inventory.EquipmentSlot.HAND)); // CraftBukkit
                }
 
                public void m_141994_() {
-                  if (!(entity instanceof ItemEntity) && !(entity instanceof ExperienceOrb) && !(entity instanceof AbstractArrow) && entity != ServerGamePacketListenerImpl.this.f_9743_) {
+                  // CraftBukkit
+                  if (!(entity instanceof ItemEntity) && !(entity instanceof ExperienceOrb) && !(entity instanceof AbstractArrow) && (entity != ServerGamePacketListenerImpl.this.f_9743_ || f_9743_.m_5833_())) {
                      ItemStack itemstack = ServerGamePacketListenerImpl.this.f_9743_.m_21120_(InteractionHand.MAIN_HAND);
                      if (itemstack.m_246617_(serverlevel.m_246046_())) {
                         ServerGamePacketListenerImpl.this.f_9743_.m_5706_(entity);
+                        // CraftBukkit start
+                        if (!itemstack.m_41619_() && itemstack.m_41613_() <= -1) {
+                           f_9743_.f_36096_.m_150429_();
+                        }
+                        // CraftBukkit end
                      }
                   } else {
                      ServerGamePacketListenerImpl.this.m_294716_(Component.m_237115_("multiplayer.disconnect.invalid_entity_attacked"));
@@ -1450,14 +_,14 @@
          case PERFORM_RESPAWN:
             if (this.f_9743_.f_8944_) {
                this.f_9743_.f_8944_ = false;
-               this.f_9743_ = this.f_291389_.m_6846_().m_11236_(this.f_9743_, true);
+               this.f_9743_ = this.f_291389_.m_6846_().respawn(this.f_9743_, true, org.bukkit.event.player.PlayerRespawnEvent.RespawnReason.END_PORTAL);
                CriteriaTriggers.f_10588_.m_19757_(this.f_9743_, Level.f_46430_, Level.f_46428_);
             } else {
                if (this.f_9743_.m_21223_() > 0.0F) {
                   return;
                }
 
-               this.f_9743_ = this.f_291389_.m_6846_().m_11236_(this.f_9743_, false);
+               this.f_9743_ = this.f_291389_.m_6846_().respawn(this.f_9743_, false, org.bukkit.event.player.PlayerRespawnEvent.RespawnReason.DEATH);
                if (this.f_291389_.m_7035_()) {
                   this.f_9743_.m_143403_(GameType.SPECTATOR);
                   this.f_9743_.m_9236_().m_46469_().m_46170_(GameRules.f_46146_).m_46246_(false, this.f_291389_);
@@ -1472,14 +_,20 @@
 
    public void m_7951_(ServerboundContainerClosePacket p_9858_) {
       PacketUtils.m_131359_(p_9858_, this, this.f_9743_.m_284548_());
+
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
+      org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleInventoryCloseEvent(this.f_9743_); // CraftBukkit
+
       this.f_9743_.m_9230_();
    }
 
    public void m_5914_(ServerboundContainerClickPacket p_9856_) {
       PacketUtils.m_131359_(p_9856_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
-      if (this.f_9743_.f_36096_.f_38840_ == p_9856_.m_133959_()) {
-         if (this.f_9743_.m_5833_()) {
+      if (this.f_9743_.f_36096_.f_38840_ == p_9856_.m_133959_() && this.f_9743_.f_36096_.m_6875_(this.f_9743_)) { // CraftBukkit
+         boolean cancelled = this.f_9743_.m_5833_(); // CraftBukkit - see below if
+         if (false/*this.player.isSpectator()*/) { // CraftBukkit
             this.f_9743_.f_36096_.m_150429_();
          } else if (!this.f_9743_.f_36096_.m_6875_(this.f_9743_)) {
             f_9744_.debug("Player {} interacted with invalid menu {}", this.f_9743_, this.f_9743_.f_36096_);
@@ -1490,8 +_,284 @@
             } else {
                boolean flag = p_9856_.m_182741_() != this.f_9743_.f_36096_.m_182424_();
                this.f_9743_.f_36096_.m_150443_();
-               this.f_9743_.f_36096_.m_150399_(i, p_9856_.m_133963_(), p_9856_.m_133966_(), this.f_9743_);
-
+               // CraftBukkit start - Call InventoryClickEvent
+               if (p_9856_.m_133962_() < -1 && p_9856_.m_133962_() != -999) {
+                  return;
+               }
+
+               org.bukkit.inventory.InventoryView inventory = this.f_9743_.f_36096_.getBukkitView();
+               org.bukkit.event.inventory.InventoryType.SlotType type = inventory.getSlotType(p_9856_.m_133962_());
+
+               org.bukkit.event.inventory.InventoryClickEvent event;
+               org.bukkit.event.inventory.ClickType click = org.bukkit.event.inventory.ClickType.UNKNOWN;
+               org.bukkit.event.inventory.InventoryAction action = org.bukkit.event.inventory.InventoryAction.UNKNOWN;
+
+               ItemStack itemstack = ItemStack.f_41583_;
+
+               switch (p_9856_.m_133966_()) {
+                  case PICKUP:
+                     if (p_9856_.m_133963_() == 0) {
+                        click = org.bukkit.event.inventory.ClickType.LEFT;
+                     } else if (p_9856_.m_133963_() == 1) {
+                        click = org.bukkit.event.inventory.ClickType.RIGHT;
+                     }
+                     if (p_9856_.m_133963_() == 0 || p_9856_.m_133963_() == 1) {
+                        action = org.bukkit.event.inventory.InventoryAction.NOTHING; // Don't want to repeat ourselves
+                        if (p_9856_.m_133962_() == -999) {
+                           if (!f_9743_.f_36096_.m_142621_().m_41619_()) {
+                              action = p_9856_.m_133963_() == 0 ? org.bukkit.event.inventory.InventoryAction.DROP_ALL_CURSOR : org.bukkit.event.inventory.InventoryAction.DROP_ONE_CURSOR;
+                           }
+                        } else if (p_9856_.m_133962_() < 0)  {
+                           action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                        } else {
+                           net.minecraft.world.inventory.Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null) {
+                              ItemStack clickedItem = slot.m_7993_();
+                              ItemStack cursor = f_9743_.f_36096_.m_142621_();
+                              if (clickedItem.m_41619_()) {
+                                 if (!cursor.m_41619_()) {
+                                    action = p_9856_.m_133963_() == 0 ? org.bukkit.event.inventory.InventoryAction.PLACE_ALL : org.bukkit.event.inventory.InventoryAction.PLACE_ONE;
+                                 }
+                              } else if (slot.m_8010_(f_9743_)) {
+                                 if (cursor.m_41619_()) {
+                                    action = p_9856_.m_133963_() == 0 ? org.bukkit.event.inventory.InventoryAction.PICKUP_ALL : org.bukkit.event.inventory.InventoryAction.PICKUP_HALF;
+                                 } else if (slot.m_5857_(cursor)) {
+                                    if (ItemStack.m_150942_(clickedItem, cursor)) {
+                                       int toPlace = p_9856_.m_133963_() == 0 ? cursor.m_41613_() : 1;
+                                       toPlace = Math.min(toPlace, clickedItem.m_41741_() - clickedItem.m_41613_());
+                                       toPlace = Math.min(toPlace, slot.f_40218_.m_6893_() - clickedItem.m_41613_());
+                                       if (toPlace == 1) {
+                                          action = org.bukkit.event.inventory.InventoryAction.PLACE_ONE;
+                                       } else if (toPlace == cursor.m_41613_()) {
+                                          action = org.bukkit.event.inventory.InventoryAction.PLACE_ALL;
+                                       } else if (toPlace < 0) {
+                                          action = toPlace != -1 ? org.bukkit.event.inventory.InventoryAction.PICKUP_SOME : org.bukkit.event.inventory.InventoryAction.PICKUP_ONE; // this happens with oversized stacks
+                                       } else if (toPlace != 0) {
+                                          action = org.bukkit.event.inventory.InventoryAction.PLACE_SOME;
+                                       }
+                                    } else if (cursor.m_41613_() <= slot.m_6641_()) {
+                                       action = org.bukkit.event.inventory.InventoryAction.SWAP_WITH_CURSOR;
+                                    }
+                                 } else if (ItemStack.m_150942_(cursor, clickedItem)) {
+                                    if (clickedItem.m_41613_() >= 0) {
+                                       if (clickedItem.m_41613_() + cursor.m_41613_() <= cursor.m_41741_()) {
+                                          // As of 1.5, this is result slots only
+                                          action = org.bukkit.event.inventory.InventoryAction.PICKUP_ALL;
+                                       }
+                                    }
+                                 }
+                              }
+                           }
+                        }
+                     }
+                     break;
+                  // TODO check on updates
+                  case QUICK_MOVE:
+                     if (p_9856_.m_133963_() == 0) {
+                        click = org.bukkit.event.inventory.ClickType.SHIFT_LEFT;
+                     } else if (p_9856_.m_133963_() == 1) {
+                        click = org.bukkit.event.inventory.ClickType.SHIFT_RIGHT;
+                     }
+                     if (p_9856_.m_133963_() == 0 || p_9856_.m_133963_() == 1) {
+                        if (p_9856_.m_133962_() < 0) {
+                           action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                        } else {
+                           net.minecraft.world.inventory.Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_8010_(this.f_9743_) && slot.m_6657_()) {
+                              action = org.bukkit.event.inventory.InventoryAction.MOVE_TO_OTHER_INVENTORY;
+                           } else {
+                              action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                           }
+                        }
+                     }
+                     break;
+                  case SWAP:
+                     if ((p_9856_.m_133963_() >= 0 && p_9856_.m_133963_() < 9) || p_9856_.m_133963_() == 40) {
+                        click = (p_9856_.m_133963_() == 40) ? org.bukkit.event.inventory.ClickType.SWAP_OFFHAND : org.bukkit.event.inventory.ClickType.NUMBER_KEY;
+                        net.minecraft.world.inventory.Slot clickedSlot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                        if (clickedSlot.m_8010_(f_9743_)) {
+                           ItemStack hotbar = this.f_9743_.m_150109_().m_8020_(p_9856_.m_133963_());
+                           boolean canCleanSwap = hotbar.m_41619_() || (clickedSlot.f_40218_ == f_9743_.m_150109_() && clickedSlot.m_5857_(hotbar)); // the slot will accept the hotbar item
+                           if (clickedSlot.m_6657_()) {
+                              if (canCleanSwap) {
+                                 action = org.bukkit.event.inventory.InventoryAction.HOTBAR_SWAP;
+                              } else {
+                                 action = org.bukkit.event.inventory.InventoryAction.HOTBAR_MOVE_AND_READD;
+                              }
+                           } else if (!clickedSlot.m_6657_() && !hotbar.m_41619_() && clickedSlot.m_5857_(hotbar)) {
+                              action = org.bukkit.event.inventory.InventoryAction.HOTBAR_SWAP;
+                           } else {
+                              action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                           }
+                        } else {
+                           action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                        }
+                     }
+                     break;
+                  case CLONE:
+                     if (p_9856_.m_133963_() == 2) {
+                        click = org.bukkit.event.inventory.ClickType.MIDDLE;
+                        if (p_9856_.m_133962_() < 0) {
+                           action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                        } else {
+                           net.minecraft.world.inventory.Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_6657_() && f_9743_.m_150110_().f_35937_ && f_9743_.f_36096_.m_142621_().m_41619_()) {
+                              action = org.bukkit.event.inventory.InventoryAction.CLONE_STACK;
+                           } else {
+                              action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                           }
+                        }
+                     } else {
+                        click = org.bukkit.event.inventory.ClickType.UNKNOWN;
+                        action = org.bukkit.event.inventory.InventoryAction.UNKNOWN;
+                     }
+                     break;
+                  case THROW:
+                     if (p_9856_.m_133962_() >= 0) {
+                        if (p_9856_.m_133963_() == 0) {
+                           click = org.bukkit.event.inventory.ClickType.DROP;
+                           net.minecraft.world.inventory.Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_6657_() && slot.m_8010_(f_9743_) && !slot.m_7993_().m_41619_() && slot.m_7993_().m_41720_() != Item.m_41439_(Blocks.f_50016_)) {
+                              action = org.bukkit.event.inventory.InventoryAction.DROP_ONE_SLOT;
+                           } else {
+                              action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                           }
+                        } else if (p_9856_.m_133963_() == 1) {
+                           click = org.bukkit.event.inventory.ClickType.CONTROL_DROP;
+                           net.minecraft.world.inventory.Slot slot = this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_());
+                           if (slot != null && slot.m_6657_() && slot.m_8010_(f_9743_) && !slot.m_7993_().m_41619_() && slot.m_7993_().m_41720_() != Item.m_41439_(Blocks.f_50016_)) {
+                              action = org.bukkit.event.inventory.InventoryAction.DROP_ALL_SLOT;
+                           } else {
+                              action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                           }
+                        }
+                     } else {
+                        // Sane default (because this happens when they are holding nothing. Don't ask why.)
+                        click = org.bukkit.event.inventory.ClickType.LEFT;
+                        if (p_9856_.m_133963_() == 1) {
+                           click = org.bukkit.event.inventory.ClickType.RIGHT;
+                        }
+                        action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                     }
+                     break;
+                  case QUICK_CRAFT:
+                     this.f_9743_.f_36096_.m_150399_(p_9856_.m_133962_(), p_9856_.m_133963_(), p_9856_.m_133966_(), this.f_9743_);
+                     break;
+                  case PICKUP_ALL:
+                     click = org.bukkit.event.inventory.ClickType.DOUBLE_CLICK;
+                     action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                     if (p_9856_.m_133962_() >= 0 && !this.f_9743_.f_36096_.m_142621_().m_41619_()) {
+                        ItemStack cursor = this.f_9743_.f_36096_.m_142621_();
+                        action = org.bukkit.event.inventory.InventoryAction.NOTHING;
+                        // Quick check for if we have any of the item
+                        if (inventory.getTopInventory().contains(org.bukkit.craftbukkit.v1_20_R2.util.CraftMagicNumbers.getMaterial(cursor.m_41720_())) || inventory.getBottomInventory().contains(org.bukkit.craftbukkit.v1_20_R2.util.CraftMagicNumbers.getMaterial(cursor.m_41720_()))) {
+                           action = org.bukkit.event.inventory.InventoryAction.COLLECT_TO_CURSOR;
+                        }
+                     }
+                     break;
+                  default:
+                     break;
+               }
+
+               if (p_9856_.m_133966_() != net.minecraft.world.inventory.ClickType.QUICK_CRAFT) {
+                  if (click == org.bukkit.event.inventory.ClickType.NUMBER_KEY) {
+                     event = new org.bukkit.event.inventory.InventoryClickEvent(inventory, type, p_9856_.m_133962_(), click, action, p_9856_.m_133963_());
+                  } else {
+                     event = new org.bukkit.event.inventory.InventoryClickEvent(inventory, type, p_9856_.m_133962_(), click, action);
+                  }
+
+                  org.bukkit.inventory.Inventory top = inventory.getTopInventory();
+                  if (p_9856_.m_133962_() == 0 && top instanceof org.bukkit.inventory.CraftingInventory) {
+                     org.bukkit.inventory.Recipe recipe = ((org.bukkit.inventory.CraftingInventory) top).getRecipe();
+                     if (recipe != null) {
+                        if (click == org.bukkit.event.inventory.ClickType.NUMBER_KEY) {
+                           event = new org.bukkit.event.inventory.CraftItemEvent(recipe, inventory, type, p_9856_.m_133962_(), click, action, p_9856_.m_133963_());
+                        } else {
+                           event = new org.bukkit.event.inventory.CraftItemEvent(recipe, inventory, type, p_9856_.m_133962_(), click, action);
+                        }
+                     }
+                  }
+
+                  if (p_9856_.m_133962_() == 3 && top instanceof org.bukkit.inventory.SmithingInventory) {
+                     org.bukkit.inventory.ItemStack result = ((org.bukkit.inventory.SmithingInventory) top).getResult();
+                     if (result != null) {
+                        if (click == org.bukkit.event.inventory.ClickType.NUMBER_KEY) {
+                           event = new org.bukkit.event.inventory.SmithItemEvent(inventory, type, p_9856_.m_133962_(), click, action, p_9856_.m_133963_());
+                        } else {
+                           event = new org.bukkit.event.inventory.SmithItemEvent(inventory, type, p_9856_.m_133962_(), click, action);
+                        }
+                     }
+                  }
+
+                  event.setCancelled(cancelled);
+                  AbstractContainerMenu oldContainer = this.f_9743_.f_36096_; // SPIGOT-1224
+                  cserver.getPluginManager().callEvent(event);
+                  if (this.f_9743_.f_36096_ != oldContainer) {
+                     return;
+                  }
+
+                  switch (event.getResult()) {
+                     case ALLOW:
+                     case DEFAULT:
+                        this.f_9743_.f_36096_.m_150399_(i, p_9856_.m_133963_(), p_9856_.m_133966_(), this.f_9743_);
+                        break;
+                     case DENY:
+                                /* Needs enum constructor in InventoryAction
+                                if (action.modifiesOtherSlots()) {
+
+                                } else {
+                                    if (action.modifiesCursor()) {
+                                        this.player.playerConnection.sendPacket(new Packet103SetSlot(-1, -1, this.player.inventory.getCarried()));
+                                    }
+                                    if (action.modifiesClicked()) {
+                                        this.player.playerConnection.sendPacket(new Packet103SetSlot(this.player.activeContainer.windowId, packet102windowclick.slot, this.player.activeContainer.getSlot(packet102windowclick.slot).getItem()));
+                                    }
+                                }*/
+                        switch (action) {
+                           // Modified other slots
+                           case PICKUP_ALL:
+                           case MOVE_TO_OTHER_INVENTORY:
+                           case HOTBAR_MOVE_AND_READD:
+                           case HOTBAR_SWAP:
+                           case COLLECT_TO_CURSOR:
+                           case UNKNOWN:
+                              this.f_9743_.f_36096_.m_150429_();
+                              break;
+                           // Modified cursor and clicked
+                           case PICKUP_SOME:
+                           case PICKUP_HALF:
+                           case PICKUP_ONE:
+                           case PLACE_ALL:
+                           case PLACE_SOME:
+                           case PLACE_ONE:
+                           case SWAP_WITH_CURSOR:
+                              this.f_9743_.f_8906_.m_141995_(new ClientboundContainerSetSlotPacket(-1, -1, this.f_9743_.f_36095_.m_182425_(), this.f_9743_.f_36096_.m_142621_()));
+                              this.f_9743_.f_8906_.m_141995_(new ClientboundContainerSetSlotPacket(this.f_9743_.f_36096_.f_38840_, this.f_9743_.f_36095_.m_182425_(), p_9856_.m_133962_(), this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_()).m_7993_()));
+                              break;
+                           // Modified clicked only
+                           case DROP_ALL_SLOT:
+                           case DROP_ONE_SLOT:
+                              this.f_9743_.f_8906_.m_141995_(new ClientboundContainerSetSlotPacket(this.f_9743_.f_36096_.f_38840_, this.f_9743_.f_36095_.m_182425_(), p_9856_.m_133962_(), this.f_9743_.f_36096_.m_38853_(p_9856_.m_133962_()).m_7993_()));
+                              break;
+                           // Modified cursor only
+                           case DROP_ALL_CURSOR:
+                           case DROP_ONE_CURSOR:
+                           case CLONE_STACK:
+                              this.f_9743_.f_8906_.m_141995_(new ClientboundContainerSetSlotPacket(-1, -1, this.f_9743_.f_36095_.m_182425_(), this.f_9743_.f_36096_.m_142621_()));
+                              break;
+                           // Nothing
+                           case NOTHING:
+                              break;
+                        }
+                  }
+
+                  if (event instanceof org.bukkit.event.inventory.CraftItemEvent || event instanceof org.bukkit.event.inventory.SmithItemEvent) {
+                     // Need to update the inventory on crafting to
+                     // correctly support custom recipes
+                     f_9743_.f_36096_.m_150429_();
+                  }
+               }
+               // CraftBukkit end
                for(Int2ObjectMap.Entry<ItemStack> entry : Int2ObjectMaps.fastIterable(p_9856_.m_179582_())) {
                   this.f_9743_.f_36096_.m_182414_(entry.getIntKey(), entry.getValue());
                }
@@ -1516,15 +_,25 @@
          if (!this.f_9743_.f_36096_.m_6875_(this.f_9743_)) {
             f_9744_.debug("Player {} interacted with invalid menu {}", this.f_9743_, this.f_9743_.f_36096_);
          } else {
-            this.f_291389_.m_129894_().m_44043_(p_9882_.m_134252_()).ifPresent((p_296595_) -> {
-               ((RecipeBookMenu)this.f_9743_.f_36096_).m_6951_(p_9882_.m_134253_(), p_296595_, this.f_9743_);
+            // CraftBukkit start - implement PlayerRecipeBookClickEvent
+            org.bukkit.inventory.Recipe recipe = this.cserver.getRecipe(org.bukkit.craftbukkit.v1_20_R2.util.CraftNamespacedKey.fromMinecraft(p_9882_.m_134252_()));
+            if (recipe == null) {
+               return;
+            }
+            org.bukkit.event.player.PlayerRecipeBookClickEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callRecipeBookClickEvent(this.f_9743_, recipe, p_9882_.m_134253_());
+
+            // Cast to keyed should be safe as the recipe will never be a MerchantRecipe.
+            this.f_291389_.m_129894_().m_44043_(org.bukkit.craftbukkit.v1_20_R2.util.CraftNamespacedKey.toMinecraft(((org.bukkit.Keyed) event.getRecipe()).getKey())).ifPresent((p_296595_) -> {
+               ((RecipeBookMenu)this.f_9743_.f_36096_).m_6951_(event.isShiftClick(), p_296595_, this.f_9743_);
             });
+            // CraftBukkit end
          }
       }
    }
 
    public void m_6557_(ServerboundContainerButtonClickPacket p_9854_) {
       PacketUtils.m_131359_(p_9854_, this, this.f_9743_.m_284548_());
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
       if (this.f_9743_.f_36096_.f_38840_ == p_9854_.m_133935_() && !this.f_9743_.m_5833_()) {
          if (!this.f_9743_.f_36096_.m_6875_(this.f_9743_)) {
@@ -1549,7 +_,7 @@
          }
 
          CompoundTag compoundtag = BlockItem.m_186336_(itemstack);
-         if (!itemstack.m_41619_() && compoundtag != null && compoundtag.m_128441_("x") && compoundtag.m_128441_("y") && compoundtag.m_128441_("z")) {
+         if (!itemstack.m_41619_() && compoundtag != null && compoundtag.m_128441_("x") && compoundtag.m_128441_("y") && compoundtag.m_128441_("z") && this.f_9743_.getBukkitEntity().hasPermission("minecraft.nbt.copy")) { // Spigot
             BlockPos blockpos = BlockEntity.m_187472_(compoundtag);
             if (this.f_9743_.m_9236_().m_46749_(blockpos)) {
                BlockEntity blockentity = this.f_9743_.m_9236_().m_7702_(blockpos);
@@ -1561,6 +_,44 @@
 
          boolean flag1 = p_9915_.m_134561_() >= 1 && p_9915_.m_134561_() <= 45;
          boolean flag2 = itemstack.m_41619_() || itemstack.m_41773_() >= 0 && itemstack.m_41613_() <= 64 && !itemstack.m_41619_();
+         if (flag || (flag1 && !ItemStack.m_41728_(this.f_9743_.f_36095_.m_38853_(p_9915_.m_134561_()).m_7993_(), p_9915_.m_134564_()))) { // Insist on valid slot
+            // CraftBukkit start - Call click event
+            org.bukkit.inventory.InventoryView inventory = this.f_9743_.f_36095_.getBukkitView();
+            org.bukkit.inventory.ItemStack item = org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asBukkitCopy(p_9915_.m_134564_());
+
+            org.bukkit.event.inventory.InventoryType.SlotType type = org.bukkit.event.inventory.InventoryType.SlotType.QUICKBAR;
+            if (flag) {
+               type = org.bukkit.event.inventory.InventoryType.SlotType.OUTSIDE;
+            } else if (p_9915_.m_134561_() < 36) {
+               if (p_9915_.m_134561_() >= 5 && p_9915_.m_134561_() < 9) {
+                  type = org.bukkit.event.inventory.InventoryType.SlotType.ARMOR;
+               } else {
+                  type = org.bukkit.event.inventory.InventoryType.SlotType.CONTAINER;
+               }
+            }
+            org.bukkit.event.inventory.InventoryCreativeEvent event = new org.bukkit.event.inventory.InventoryCreativeEvent(inventory, type, flag ? -999 : p_9915_.m_134561_(), item);
+            cserver.getPluginManager().callEvent(event);
+
+            itemstack = org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asNMSCopy(event.getCursor());
+
+            switch (event.getResult()) {
+               case ALLOW:
+                  // Plugin cleared the id / stacksize checks
+                  flag2 = true;
+                  break;
+               case DEFAULT:
+                  break;
+               case DENY:
+                  // Reset the slot
+                  if (p_9915_.m_134561_() >= 0) {
+                     this.f_9743_.f_8906_.m_141995_(new ClientboundContainerSetSlotPacket(this.f_9743_.f_36095_.f_38840_, this.f_9743_.f_36095_.m_182425_(), p_9915_.m_134561_(), this.f_9743_.f_36095_.m_38853_(p_9915_.m_134561_()).m_7993_()));
+                     this.f_9743_.f_8906_.m_141995_(new ClientboundContainerSetSlotPacket(-1, this.f_9743_.f_36095_.m_182425_(), -1, ItemStack.f_41583_));
+                  }
+                  return;
+            }
+         }
+         // CraftBukkit end
+
          if (flag1 && flag2) {
             this.f_9743_.f_36095_.m_38853_(p_9915_.m_134561_()).m_269060_(itemstack);
             this.f_9743_.f_36095_.m_38946_();
@@ -1580,6 +_,7 @@
    }
 
    private void m_9922_(ServerboundSignUpdatePacket p_9923_, List<FilteredText> p_9924_) {
+      if (this.f_9743_.m_6107_()) return; // CraftBukkit
       this.f_9743_.m_9243_();
       ServerLevel serverlevel = this.f_9743_.m_284548_();
       BlockPos blockpos = p_9923_.m_134660_();
@@ -1597,7 +_,17 @@
 
    public void m_6828_(ServerboundPlayerAbilitiesPacket p_9887_) {
       PacketUtils.m_131359_(p_9887_, this, this.f_9743_.m_284548_());
-      this.f_9743_.m_150110_().f_35935_ = p_9887_.m_134264_() && this.f_9743_.m_150110_().f_35936_;
+      // CraftBukkit start
+      if (this.f_9743_.m_150110_().f_35936_ && this.f_9743_.m_150110_().f_35935_ != p_9887_.m_134264_()) {
+         org.bukkit.event.player.PlayerToggleFlightEvent event = new org.bukkit.event.player.PlayerToggleFlightEvent(this.f_9743_.getBukkitEntity(), p_9887_.m_134264_());
+         this.cserver.getPluginManager().callEvent(event);
+         if (!event.isCancelled()) {
+            this.f_9743_.m_150110_().f_35935_ = p_9887_.m_134264_(); // Actually set the player's flying status
+         } else {
+            this.f_9743_.m_6885_(); // Tell the player their ability was reverted
+         }
+      }
+      // CraftBukkit end
    }
 
    public void m_9844_(ServerboundClientInformationPacket p_298714_) {
@@ -1649,7 +_,7 @@
       if (!this.f_290343_) {
          throw new IllegalStateException("Client acknowledged config, but none was requested");
       } else {
-         this.f_291338_.m_129505_(new ServerConfigurationPacketListenerImpl(this.f_291389_, this.f_291338_, this.m_295477_(this.f_9743_.m_294559_())));
+         this.f_291338_.m_129505_(new ServerConfigurationPacketListenerImpl(this.f_291389_, this.f_291338_, this.m_295477_(this.f_9743_.m_294559_()), this.f_9743_)); // CraftBukkit
       }
    }
 
@@ -1659,6 +_,7 @@
    }
 
    public void m_7423_(ServerboundCustomPayloadPacket p_9860_) {
+      net.minecraftforge.network.NetworkHooks.onCustomPayload(p_9860_, this.f_9742_);
    }
 
    public void m_7477_(ServerboundChangeDifficultyPacket p_9839_) {

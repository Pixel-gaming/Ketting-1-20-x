--- a/net/minecraft/server/ServerAdvancementManager.java
+++ b/net/minecraft/server/ServerAdvancementManager.java
@@ -29,18 +_,36 @@
    public Map<ResourceLocation, AdvancementHolder> f_136023_ = Map.of();
    private AdvancementTree f_290842_ = new AdvancementTree();
    private final LootDataManager f_278379_;
+   private final net.minecraftforge.common.crafting.conditions.ICondition.IContext context; //Forge: add context
 
+   /** @deprecated Forge: use {@linkplain ServerAdvancementManager#ServerAdvancementManager(LootDataManager, net.minecraftforge.common.crafting.conditions.ICondition.IContext) constructor with context}. */
+   @Deprecated
    public ServerAdvancementManager(LootDataManager p_279237_) {
+      this(p_279237_, net.minecraftforge.common.crafting.conditions.ICondition.IContext.EMPTY);
+   }
+
+   public ServerAdvancementManager(LootDataManager p_279237_, net.minecraftforge.common.crafting.conditions.ICondition.IContext context) {
       super(f_136022_, "advancements");
       this.f_278379_ = p_279237_;
+      this.context = context;
    }
 
    protected void m_5787_(Map<ResourceLocation, JsonElement> p_136034_, ResourceManager p_136035_, ProfilerFiller p_136036_) {
       ImmutableMap.Builder<ResourceLocation, AdvancementHolder> builder = ImmutableMap.builder();
       p_136034_.forEach((p_296449_, p_296450_) -> {
+         // Spigot start
+         if (org.spigotmc.SpigotConfig.disabledAdvancements != null && (org.spigotmc.SpigotConfig.disabledAdvancements.contains("*") || org.spigotmc.SpigotConfig.disabledAdvancements.contains(p_296449_.toString()) || org.spigotmc.SpigotConfig.disabledAdvancements.contains(p_296449_.m_135827_()))) {
+            return;
+         }
+         // Spigot end
+
          try {
             JsonObject jsonobject = GsonHelper.m_13918_(p_296450_, "advancement");
-            Advancement advancement = Advancement.m_294730_(jsonobject, new DeserializationContext(p_296449_, this.f_278379_));
+            Advancement advancement = Advancement.fromJson(jsonobject, new DeserializationContext(p_296449_, this.f_278379_), this.context);
+            if (advancement == null) {
+                f_136021_.debug("Skipping loading advancement {} as its conditions were not met", p_296449_);
+                return;
+            }
             builder.put(p_296449_, new AdvancementHolder(p_296449_, advancement));
          } catch (Exception exception) {
             f_136021_.error("Parsing error loading custom advancement {}: {}", p_296449_, exception.getMessage());

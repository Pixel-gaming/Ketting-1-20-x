--- a/net/minecraft/network/Connection.java
+++ b/net/minecraft/network/Connection.java
@@ -82,8 +_,13 @@
    });
    private final PacketFlow f_129466_;
    private final Queue<Consumer<Connection>> f_290881_ = Queues.newConcurrentLinkedQueue();
-   private Channel f_129468_;
-   private SocketAddress f_129469_;
+   public Channel f_129468_;
+   public SocketAddress f_129469_;
+   // Spigot Start
+   public java.util.UUID spoofedUUID;
+   public com.mojang.authlib.properties.Property[] spoofedProfile;
+   public boolean preparing = true;
+   // Spigot End
    @Nullable
    private volatile PacketListener f_290681_;
    @Nullable
@@ -102,6 +_,8 @@
    private volatile Component f_290021_;
    @Nullable
    BandwidthDebugMonitor f_291520_;
+   private java.util.function.Consumer<Connection> activationHandler;
+   public String hostname = ""; // CraftBukkit - add field
 
    public Connection(PacketFlow p_129482_) {
       this.f_129466_ = p_129482_;
@@ -111,6 +_,10 @@
       super.channelActive(p_129525_);
       this.f_129468_ = p_129525_.channel();
       this.f_129469_ = this.f_129468_.remoteAddress();
+      if (activationHandler != null) activationHandler.accept(this);
+      // Spigot Start
+      this.preparing = false;
+      // Spigot End
       if (this.f_290021_ != null) {
          this.m_129507_(this.f_290021_);
       }
@@ -159,6 +_,7 @@
 
          }
       }
+      if (net.minecraft.server.MinecraftServer.getServer().isDebugging()) p_129534_.printStackTrace(); // Spigot
    }
 
    protected void channelRead0(ChannelHandlerContext p_129487_, Packet<?> p_129488_) {
@@ -395,11 +_,14 @@
       if (this.f_129469_ == null) {
          return "local";
       } else {
-         return p_298740_ ? this.f_129469_.toString() : "IP hidden";
+         return p_298740_ ? net.minecraftforge.network.DualStackUtils.getAddressString(this.f_129469_) : "IP hidden";
       }
    }
 
    public void m_129507_(Component p_129508_) {
+      // Spigot Start
+      this.preparing = false;
+      // Spigot End
       if (this.f_129468_ == null) {
          this.f_290021_ = p_129508_;
       }
@@ -435,6 +_,8 @@
    }
 
    public static ChannelFuture m_290025_(InetSocketAddress p_290034_, boolean p_290035_, final Connection p_290031_) {
+      net.minecraftforge.network.DualStackUtils.checkIPv6(p_290034_.getAddress());
+      p_290031_.activationHandler = net.minecraftforge.network.NetworkHooks::registerClientLoginChannel;
       Class<? extends SocketChannel> oclass;
       EventLoopGroup eventloopgroup;
       if (Epoll.isAvailable() && p_290035_) {
@@ -485,6 +_,7 @@
 
    public static Connection m_129493_(SocketAddress p_129494_) {
       final Connection connection = new Connection(PacketFlow.CLIENTBOUND);
+      connection.activationHandler = net.minecraftforge.network.NetworkHooks::registerClientLoginChannel;
       (new Bootstrap()).group(f_129464_.get()).handler(new ChannelInitializer<Channel>() {
          protected void initChannel(Channel p_129557_) {
             Connection.m_294111_(p_129557_);
@@ -581,6 +_,14 @@
 
    public float m_129543_() {
       return this.f_129477_;
+   }
+
+   public Channel channel() {
+      return this.f_129468_;
+   }
+
+   public PacketFlow getDirection() {
+      return this.f_129466_;
    }
 
    public void m_292855_(SampleLogger p_300126_) {

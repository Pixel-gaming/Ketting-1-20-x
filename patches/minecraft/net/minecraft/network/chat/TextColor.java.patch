--- a/net/minecraft/network/chat/TextColor.java
+++ b/net/minecraft/network/chat/TextColor.java
@@ -20,7 +_,7 @@
       });
    }, TextColor::serialize);
    private static final Map<ChatFormatting, TextColor> LEGACY_FORMAT_TO_COLOR = Stream.of(ChatFormatting.values()).filter(ChatFormatting::isColor).collect(ImmutableMap.toImmutableMap(Function.identity(), (p_237301_) -> {
-      return new TextColor(p_237301_.getColor(), p_237301_.getName());
+      return new TextColor(p_237301_.getColor(), p_237301_.getName(), p_237301_); // CraftBukkit
    }));
    private static final Map<String, TextColor> NAMED_COLORS = LEGACY_FORMAT_TO_COLOR.values().stream().collect(ImmutableMap.toImmutableMap((p_237297_) -> {
       return p_237297_.name;
@@ -28,16 +_,22 @@
    private final int value;
    @Nullable
    private final String name;
+   // CraftBukkit start
+   @Nullable
+   public final ChatFormatting format;
 
-   private TextColor(int p_131263_, String p_131264_) {
+   private TextColor(int p_131263_, String p_131264_, ChatFormatting format) {
       this.value = p_131263_;
       this.name = p_131264_;
+      this.format = format;
    }
 
    private TextColor(int p_131261_) {
       this.value = p_131261_;
       this.name = null;
+      this.format = null;
    }
+   // CraftBukkit end
 
    public int getValue() {
       return this.value;

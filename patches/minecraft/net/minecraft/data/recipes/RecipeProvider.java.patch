--- a/net/minecraft/data/recipes/RecipeProvider.java
+++ b/net/minecraft/data/recipes/RecipeProvider.java
@@ -89,7 +_,9 @@
             list.add(DataProvider.saveStable(p_254020_, p_253413_.serializeRecipe(), this.recipePathProvider.json(p_253413_.getId())));
             JsonObject jsonobject = p_253413_.serializeAdvancement();
             if (jsonobject != null) {
-               list.add(DataProvider.saveStable(p_254020_, jsonobject, this.advancementPathProvider.json(p_253413_.getAdvancementId())));
+               var saveAdvancementFuture = saveAdvancement(p_254020_, p_253413_, jsonobject);
+               if (saveAdvancementFuture != null)
+                  list.add(saveAdvancementFuture);
             }
 
          }
@@ -97,6 +_,16 @@
       return CompletableFuture.allOf(list.toArray((p_253414_) -> {
          return new CompletableFuture[p_253414_];
       }));
+   }
+
+   /**
+    * Called every time a recipe is saved to also save the advancement JSON if it exists.
+    *
+    * @return A completable future that saves the advancement to disk, or null to cancel saving the advancement.
+    */
+   @org.jetbrains.annotations.Nullable
+   protected CompletableFuture<?> saveAdvancement(CachedOutput output, FinishedRecipe finishedRecipe, JsonObject advancementJson) {
+      return DataProvider.saveStable(output, advancementJson, this.advancementPathProvider.json(finishedRecipe.getAdvancementId()));
    }
 
    protected CompletableFuture<?> buildAdvancement(CachedOutput p_253674_, ResourceLocation p_254102_, Advancement.Builder p_253712_) {
